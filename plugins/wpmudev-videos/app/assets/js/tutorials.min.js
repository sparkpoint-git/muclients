(function(){var __webpack_modules__={135:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bt: function() { return /* reexport safe */ _ListThumb__WEBPACK_IMPORTED_MODULE_8__.B; },\n/* harmony export */   E0: function() { return /* reexport safe */ _ImageTag__WEBPACK_IMPORTED_MODULE_0__.E; },\n/* harmony export */   Sy: function() { return /* reexport safe */ _VideoIframe__WEBPACK_IMPORTED_MODULE_9__.S; },\n/* harmony export */   kS: function() { return /* reexport safe */ _VideoSearchForm__WEBPACK_IMPORTED_MODULE_12__.k; }\n/* harmony export */ });\n/* harmony import */ var _ImageTag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8844);\n/* harmony import */ var _WhiteLabelBanner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6057);\n/* harmony import */ var _PageFooter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5132);\n/* harmony import */ var _UpgradeNotice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(837);\n/* harmony import */ var _ExpiredNotice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(3778);\n/* harmony import */ var _DashNotice__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(1319);\n/* harmony import */ var _UserRoles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(7122);\n/* harmony import */ var _SortableElements__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(3423);\n/* harmony import */ var _ListThumb__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(3603);\n/* harmony import */ var _VideoIframe__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(5841);\n/* harmony import */ var _GoTopButton__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(4460);\n/* harmony import */ var _UploadThumb__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(5320);\n/* harmony import */ var _VideoSearchForm__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(5498);\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM1LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cG11ZGV2LXZpZGVvcy8uL2FwcC9zcmMvY29tcG9uZW50cy9pbmRleC5qcz8yZDRmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vSW1hZ2VUYWcnO1xuZXhwb3J0ICogZnJvbSAnLi9XaGl0ZUxhYmVsQmFubmVyJztcbmV4cG9ydCAqIGZyb20gJy4vUGFnZUZvb3Rlcic7XG5leHBvcnQgKiBmcm9tICcuL1VwZ3JhZGVOb3RpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9FeHBpcmVkTm90aWNlJztcbmV4cG9ydCAqIGZyb20gJy4vRGFzaE5vdGljZSc7XG5leHBvcnQgKiBmcm9tICcuL1VzZXJSb2xlcyc7XG5leHBvcnQgKiBmcm9tICcuL1NvcnRhYmxlRWxlbWVudHMnO1xuZXhwb3J0ICogZnJvbSAnLi9MaXN0VGh1bWInO1xuZXhwb3J0ICogZnJvbSAnLi9WaWRlb0lmcmFtZSc7XG5leHBvcnQgKiBmcm9tICcuL0dvVG9wQnV0dG9uJztcbmV4cG9ydCAqIGZyb20gJy4vVXBsb2FkVGh1bWInO1xuZXhwb3J0ICogZnJvbSAnLi9WaWRlb1NlYXJjaEZvcm0nOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///135\n")},9571:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $n: function() { return /* reexport safe */ _Button__WEBPACK_IMPORTED_MODULE_11__.$; },\n/* harmony export */   In: function() { return /* reexport safe */ _Icon__WEBPACK_IMPORTED_MODULE_0__.I; },\n/* harmony export */   JU: function() { return /* reexport safe */ _Label__WEBPACK_IMPORTED_MODULE_22__.J; },\n/* harmony export */   K0: function() { return /* reexport safe */ _IconButton__WEBPACK_IMPORTED_MODULE_26__.K; },\n/* harmony export */   Q8: function() { return /* reexport safe */ _MediaUpload__WEBPACK_IMPORTED_MODULE_24__.Q; },\n/* harmony export */   Sc: function() { return /* reexport safe */ _Checkbox__WEBPACK_IMPORTED_MODULE_12__.S; },\n/* harmony export */   az: function() { return /* reexport safe */ _Box__WEBPACK_IMPORTED_MODULE_7__.a; },\n/* harmony export */   l6: function() { return /* reexport safe */ _Select__WEBPACK_IMPORTED_MODULE_3__.l; },\n/* harmony export */   pd: function() { return /* reexport safe */ _Input__WEBPACK_IMPORTED_MODULE_10__.p; },\n/* harmony export */   wi: function() { return /* reexport safe */ _Footer__WEBPACK_IMPORTED_MODULE_2__.w; }\n/* harmony export */ });\n/* harmony import */ var _Icon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7028);\n/* harmony import */ var _Header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7347);\n/* harmony import */ var _Footer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5528);\n/* harmony import */ var _Select__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8216);\n/* harmony import */ var _TopNotice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(3564);\n/* harmony import */ var _MobileNav__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(6386);\n/* harmony import */ var _SideNav__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(3734);\n/* harmony import */ var _Box__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9907);\n/* harmony import */ var _Toggle__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4377);\n/* harmony import */ var _BorderFrame__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(2740);\n/* harmony import */ var _Input__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(2546);\n/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(9590);\n/* harmony import */ var _Checkbox__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(4268);\n/* harmony import */ var _FileUpload__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(8811);\n/* harmony import */ var _Modal__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(6744);\n/* harmony import */ var _StaticNotice__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(9906);\n/* harmony import */ var _ProgressBar__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(4113);\n/* harmony import */ var _RadioTabs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(7385);\n/* harmony import */ var _WhiteLabelSummary__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(5390);\n/* harmony import */ var _List__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(7735);\n/* harmony import */ var _Accordion__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(3057);\n/* harmony import */ var _Table__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(7670);\n/* harmony import */ var _Label__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(6686);\n/* harmony import */ var _Textarea__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(2868);\n/* harmony import */ var _MediaUpload__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(9847);\n/* harmony import */ var _Portal__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(5071);\n/* harmony import */ var _IconButton__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(9850);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTU3MS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3BtdWRldi12aWRlb3MvLi9hcHAvc3JjL2xpYi9jb21wb25lbnRzL2luZGV4LmpzP2FhM2MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9JY29uJztcbmV4cG9ydCAqIGZyb20gJy4vSGVhZGVyJztcbmV4cG9ydCAqIGZyb20gJy4vRm9vdGVyJztcbmV4cG9ydCAqIGZyb20gJy4vU2VsZWN0JztcbmV4cG9ydCAqIGZyb20gJy4vVG9wTm90aWNlJztcbmV4cG9ydCAqIGZyb20gJy4vTW9iaWxlTmF2JztcbmV4cG9ydCAqIGZyb20gJy4vU2lkZU5hdic7XG5leHBvcnQgKiBmcm9tICcuL0JveCc7XG5leHBvcnQgKiBmcm9tICcuL1RvZ2dsZSc7XG5leHBvcnQgKiBmcm9tICcuL0JvcmRlckZyYW1lJztcbmV4cG9ydCAqIGZyb20gJy4vSW5wdXQnO1xuZXhwb3J0ICogZnJvbSAnLi9CdXR0b24nO1xuZXhwb3J0ICogZnJvbSAnLi9DaGVja2JveCc7XG5leHBvcnQgKiBmcm9tICcuL0ZpbGVVcGxvYWQnO1xuZXhwb3J0ICogZnJvbSAnLi9Nb2RhbCc7XG5leHBvcnQgKiBmcm9tICcuL1N0YXRpY05vdGljZSc7XG5leHBvcnQgKiBmcm9tICcuL1Byb2dyZXNzQmFyJztcbmV4cG9ydCAqIGZyb20gJy4vUmFkaW9UYWJzJztcbmV4cG9ydCAqIGZyb20gJy4vV2hpdGVMYWJlbFN1bW1hcnknO1xuZXhwb3J0ICogZnJvbSAnLi9MaXN0JztcbmV4cG9ydCAqIGZyb20gJy4vQWNjb3JkaW9uJztcbmV4cG9ydCAqIGZyb20gJy4vVGFibGUnO1xuZXhwb3J0ICogZnJvbSAnLi9MYWJlbCc7XG5leHBvcnQgKiBmcm9tICcuL1RleHRhcmVhJztcbmV4cG9ydCAqIGZyb20gJy4vTWVkaWFVcGxvYWQnO1xuZXhwb3J0ICogZnJvbSAnLi9Qb3J0YWwnO1xuZXhwb3J0ICogZnJvbSAnLi9JY29uQnV0dG9uJzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///9571\n")},2015:function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(6540);\n// EXTERNAL MODULE: ./node_modules/react-dom/client.js\nvar client = __webpack_require__(5338);\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 11 modules\nvar es = __webpack_require__(7040);\n// EXTERNAL MODULE: ./app/src/store/store.js\nvar store = __webpack_require__(9457);\n// EXTERNAL MODULE: ./node_modules/react-router-dom/dist/index.js\nvar dist = __webpack_require__(4976);\n// EXTERNAL MODULE: ./app/src/lib/components/index.js\nvar components = __webpack_require__(9571);\n// EXTERNAL MODULE: ./app/src/components/PageFooter/index.js + 1 modules\nvar PageFooter = __webpack_require__(5132);\n// EXTERNAL MODULE: ./node_modules/@wordpress/i18n/build-module/index.js + 10 modules\nvar build_module = __webpack_require__(4214);\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(4848);\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/partials/Header/Header.js\n/**\n * Library dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\nfunction Header() {\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Header, {\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Title, {\n      id: "wpmudev-videos-navigation--label",\n      children: (0,build_module.__)(\'Video Tutorials\', \'wpmudev_vids\')\n    })\n  });\n}\n/* harmony default export */ var Header_Header = ((/* unused pure expression or super */ null && (Header)));\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/partials/Header/index.js\n\n// EXTERNAL MODULE: ./app/src/store/slices/playlists.js\nvar slices_playlists = __webpack_require__(9317);\n// EXTERNAL MODULE: ./app/src/store/slices/videos.js\nvar slices_videos = __webpack_require__(4084);\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/components/MenuLoader/MenuLoader.js\n\nfunction MenuLoader() {\n  return /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n    role: "navigation",\n    "aria-labelledby": "wpmudev-videos-navigation--label",\n    "aria-hidden": "true",\n    className: "wpmudev-videos-section--menu-group",\n    children: /*#__PURE__*/(0,jsx_runtime.jsxs)("ul", {\n      role: "menu",\n      className: "wpmudev-videos-section--menu",\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        role: "none",\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)("a", {\n          role: "menuitem"\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        role: "none",\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)("a", {\n          role: "menuitem"\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        role: "none",\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)("a", {\n          role: "menuitem"\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        role: "none",\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)("a", {\n          role: "menuitem"\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        role: "none",\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)("a", {\n          role: "menuitem"\n        })\n      })]\n    })\n  });\n}\n/* harmony default export */ var MenuLoader_MenuLoader = ((/* unused pure expression or super */ null && (MenuLoader)));\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/components/MenuLoader/index.js\n\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__(6942);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/components/StickyMenu/StickyMenu.js\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\n\nfunction StickyMenu(_ref) {\n  var playlists = _ref.playlists;\n  var _useState = (0,react.useState)(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    sticky = _useState2[0],\n    setSticky = _useState2[1];\n  var _useState3 = (0,react.useState)(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    disableRight = _useState4[0],\n    setDisableRight = _useState4[1];\n  var _useState5 = (0,react.useState)(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    disableLeft = _useState6[0],\n    setDisableLeft = _useState6[1];\n  var _useState7 = (0,react.useState)(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    offsetTop = _useState8[0],\n    setOffsetTop = _useState8[1];\n  var menuRef = (0,react.useRef)();\n  var wrapperRef = (0,react.useRef)();\n  var navClasses = classnames_default()({\n    \'wpmudev-videos-section--menu-group\': true,\n    \'wpmudev-videos-sticky\': sticky\n  });\n\n  /**\n   * Set the offset position of the menu.\n   */\n  (0,react.useEffect)(function () {\n    // Menu element.\n    var menu = wrapperRef.current;\n    var rect = menu.getBoundingClientRect();\n    var scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n    setOffsetTop(rect.top + scrollTop);\n  }, []);\n  (0,react.useEffect)(function () {\n    // Start listening to scroll and resize events only after offsetTop is set\n    if (offsetTop > 0) {\n      // Handle scroll event.\n      window.addEventListener(\'scroll\', handleScroll);\n\n      // Handle resize event.\n      window.addEventListener(\'resize\', updateArrows);\n\n      // Remove event listners when unmount\n      return function () {\n        window.removeEventListener(\'scroll\', handleScroll);\n        window.removeEventListener(\'resize\', updateArrows);\n      };\n    }\n  }, [offsetTop]);\n\n  /**\n   * Handle the window scroll event.\n   *\n   * Check if we need to apply sticky class.\n   *\n   * @return {void}\n   */\n  var handleScroll = function handleScroll() {\n    // When the page offset is higher than menu.\n    setSticky(window.pageYOffset > offsetTop);\n  };\n\n  /**\n   * Update navigation arrows when required.\n   *\n   * Call when widnow is resized, items changed.\n   *\n   * @return {void}\n   */\n  var updateArrows = function updateArrows() {\n    // Menu element.\n    var el = menuRef.current;\n    var maxScroll = el.scrollWidth - el.clientWidth;\n    setDisableRight(el.scrollLeft <= 0);\n    setDisableLeft(el.scrollLeft >= maxScroll);\n  };\n\n  /**\n   * Slide menu elements to new position.\n   *\n   * We slide 30px on each click.\n   *\n   * @param {int} offset Slide position value.\n   *\n   */\n  var slideMenu = function slideMenu(offset) {\n    // Menu element.\n    var el = menuRef.current;\n\n    // Scroll.\n    el.scroll({\n      left: el.scrollLeft + offset,\n      behavior: \'auto\'\n    });\n\n    // Update the arrows.\n    updateArrows();\n  };\n\n  /**\n   * Get offset of the element.\n   *\n   * @param {object} el Element.\n   *\n   * @return {*}\n   */\n  var getElementOffset = function getElementOffset(el) {\n    var top = 0;\n    var left = 0;\n    var element = document.getElementById(el);\n    if (element !== null) {\n      do {\n        top += element.offsetTop || 0;\n        left += element.offsetLeft || 0;\n        element = element.offsetParent;\n      } while (element);\n    }\n    return {\n      top: top,\n      left: left\n    };\n  };\n\n  /**\n   * Scroll to a section in the page.\n   *\n   * @param {string} id Element ID.\n   * @param {object} event Event.\n   *\n   */\n  var goToSection = function goToSection(id, event) {\n    var blockId = "section-playlist-".concat(id);\n    var blockPos = getElementOffset(blockId);\n    var floatNav = 120;\n    window.scrollTo({\n      top: blockPos.top - floatNav,\n      left: 0,\n      behavior: \'smooth\'\n    });\n    var i;\n    var navEl = event.target;\n    var navLi = navEl.parentElement.parentElement.querySelectorAll(\'li > a\');\n    for (i = 0; i < navLi.length; ++i) {\n      if (navLi[i].classList.contains(\'active\')) {\n        navLi[i].classList.remove(\'active\');\n      }\n    }\n    navEl.classList.add(\'active\');\n    event.preventDefault();\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n    role: "navigation",\n    "aria-labelledby": "wpmudev-videos-navigation--label",\n    "aria-hidden": "true",\n    className: navClasses,\n    ref: wrapperRef,\n    children: [/*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n      className: "wpmudev-videos-section--menu-nav",\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)("button", {\n        className: "prev",\n        disabled: disableRight,\n        onClick: function onClick() {\n          return slideMenu(-20);\n        },\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n          icon: "chevron-left",\n          size: "md"\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("button", {\n        className: "next",\n        disabled: disableLeft,\n        onClick: function onClick() {\n          return slideMenu(20);\n        },\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n          icon: "chevron-right",\n          size: "md"\n        })\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("ul", {\n      ref: menuRef,\n      role: "menu",\n      className: "wpmudev-videos-section--menu",\n      children: playlists.map(function (playlist) {\n        return /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n          role: "none",\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)("a", {\n            role: "menuitem",\n            className: 2 === playlist.id ? \'active\' : \'\',\n            onClick: function onClick(event) {\n              return goToSection(playlist.id, event);\n            },\n            children: playlist.title\n          })\n        }, playlist.id);\n      })\n    })]\n  });\n}\n/* harmony default export */ var StickyMenu_StickyMenu = ((/* unused pure expression or super */ null && (StickyMenu)));\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/components/StickyMenu/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/components/VideosLoader/VideosLoader.js\n\nfunction VideosLoader() {\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n      className: "wpmudev-videos-loader--block",\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n        className: "wpmudev-videos-loader--title"\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n        className: "wpmudev-videos-loader--description"\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n        className: "wpmudev-videos-loader--videos",\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          className: "wpmudev-videos-loader--video"\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          className: "wpmudev-videos-loader--video"\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          className: "wpmudev-videos-loader--video"\n        })]\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n      className: "wpmudev-videos-loader--block",\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n        className: "wpmudev-videos-loader--title"\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n        className: "wpmudev-videos-loader--description"\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n        className: "wpmudev-videos-loader--videos",\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          className: "wpmudev-videos-loader--video"\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          className: "wpmudev-videos-loader--video"\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n          className: "wpmudev-videos-loader--video"\n        })]\n      })]\n    })]\n  });\n}\n/* harmony default export */ var VideosLoader_VideosLoader = ((/* unused pure expression or super */ null && (VideosLoader)));\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/components/VideosLoader/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/components/SinglePlaylist/SinglePlaylist.js\nfunction SinglePlaylist_slicedToArray(r, e) { return SinglePlaylist_arrayWithHoles(r) || SinglePlaylist_iterableToArrayLimit(r, e) || SinglePlaylist_unsupportedIterableToArray(r, e) || SinglePlaylist_nonIterableRest(); }\nfunction SinglePlaylist_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction SinglePlaylist_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return SinglePlaylist_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? SinglePlaylist_arrayLikeToArray(r, a) : void 0; } }\nfunction SinglePlaylist_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction SinglePlaylist_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction SinglePlaylist_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\nfunction SinglePlaylist(_ref) {\n  var playlist = _ref.playlist,\n    selected = _ref.selected,\n    setSelected = _ref.setSelected;\n  var _useState = (0,react.useState)(false),\n    _useState2 = SinglePlaylist_slicedToArray(_useState, 2),\n    disableRight = _useState2[0],\n    setDisableRight = _useState2[1];\n  var _useState3 = (0,react.useState)(false),\n    _useState4 = SinglePlaylist_slicedToArray(_useState3, 2),\n    disableLeft = _useState4[0],\n    setDisableLeft = _useState4[1];\n  var _useState5 = (0,react.useState)(false),\n    _useState6 = SinglePlaylist_slicedToArray(_useState5, 2),\n    fullView = _useState6[0],\n    setFullView = _useState6[1];\n  var id = playlist.id,\n    title = playlist.title,\n    description = playlist.description,\n    videos = playlist.videos;\n  var videosList = (0,react.useRef)();\n  var videosObject = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_videos/* getVideos */.fY)(state, videos);\n  });\n\n  /**\n   * Check if the current section is selected.\n   *\n   * If the selected video is within the current section (playlist).\n   *\n   * @returns {boolean}\n   */\n  var isSelected = function isSelected() {\n    return id === parseInt(selected.playlist) && playlist.videos.includes(parseInt(selected.video));\n  };\n  var wrapperClasses = classnames_default()({\n    \'wpmudev-videos-section--block\': true,\n    \'wpmudev-videos-active\': isSelected()\n  });\n  var btnPrevClasses = classnames_default()(\'sui-button-icon\', \'sui-button-blue\', \'prev\');\n  var btnNextClasses = classnames_default()(\'sui-button-icon\', \'sui-button-blue\', \'next\');\n  var videoSectionClasses = classnames_default()({\n    \'wpmudev-videos-section--videos\': true,\n    \'wpmudev-videos-sm\': fullView\n  });\n\n  /**\n   * Toggle the full view flag.\n   *\n   * @returns {void}\n   *\n   */\n  var toggleFullView = function toggleFullView() {\n    setFullView(!fullView);\n  };\n\n  /**\n   * Update the arrows if required.\n   *\n   * If there is a scope for scrolling, show arrows.\n   */\n  var updateArrows = function updateArrows() {\n    var el = videosList.current;\n    var maxScroll = el.scrollWidth - el.clientWidth;\n    setDisableRight(el.scrollLeft <= 0);\n    setDisableLeft(el.scrollLeft >= maxScroll);\n  };\n\n  /**\n   * Slide menu elements to new position.\n   *\n   * We slide 30px on each click.\n   *\n   * @param {int} offset Slide position value.\n   *\n   */\n  var slideMenu = function slideMenu(offset) {\n    // Videos list.\n    var el = videosList.current;\n\n    // Scroll.\n    el.scroll({\n      left: el.scrollLeft + offset,\n      behavior: \'auto\'\n    });\n\n    // Update the arrows.\n    updateArrows();\n  };\n\n  // Update arrows on mout\n  (0,react.useEffect)(function () {\n    updateArrows();\n\n    // Handle resize event.\n    window.addEventListener(\'resize\', updateArrows);\n    return function () {\n      // Handle resize event.\n      window.removeEventListener(\'resize\', updateArrows);\n    };\n  }, []);\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n    tabIndex: "0",\n    id: "section-playlist-".concat(id),\n    className: wrapperClasses,\n    children: [/*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n      className: "wpmudev-videos-section--videos-list-header",\n      children: [/*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n        className: "wpmudev-videos-section--videos-list-content",\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)("h2", {\n          className: "wpmudev-videos-section--block-title",\n          children: title\n        }), description && /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n          className: "wpmudev-videos-section--block-description",\n          children: description\n        })]\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n        className: "wpmudev-videos-section--videos-list-navigator",\n        "aria-hidden": "true",\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)("button", {\n          className: btnPrevClasses,\n          disabled: disableRight,\n          onClick: function onClick() {\n            return slideMenu(-40);\n          },\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n            icon: "chevron-left",\n            size: "sm"\n          })\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("button", {\n          className: btnNextClasses,\n          disabled: disableLeft,\n          onClick: function onClick() {\n            return slideMenu(40);\n          },\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n            icon: "chevron-right",\n            size: "sm"\n          })\n        })]\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n      className: videoSectionClasses,\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* IconButton */.K0, {\n        className: "wpmudev-videos-section--videos-list-handler",\n        "aria-hidden": true,\n        icon: "chevron-right",\n        tabIndex: "-1",\n        outlined: false,\n        onClick: toggleFullView\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n        role: "tablist",\n        className: "wpmudev-videos-section--videos-list",\n        ref: videosList,\n        children: Object.keys(videosObject).map(function (videoID) {\n          return /*#__PURE__*/(0,jsx_runtime.jsx)(VideoItem, {\n            setSelected: setSelected,\n            selected: selected,\n            playlistId: id,\n            video: videosObject[videoID]\n          }, videoID);\n        })\n      }), isSelected() && /*#__PURE__*/(0,jsx_runtime.jsx)(VideoPlayer, {\n        videoId: selected.video,\n        playlistId: id,\n        isSelected: isSelected(),\n        setSelected: setSelected\n      })]\n    })]\n  });\n}\n/* harmony default export */ var SinglePlaylist_SinglePlaylist = ((/* unused pure expression or super */ null && (SinglePlaylist)));\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/components/SinglePlaylist/index.js\n\n// EXTERNAL MODULE: ./app/src/components/index.js\nvar src_components = __webpack_require__(135);\n// EXTERNAL MODULE: ./node_modules/react-router/dist/index.js\nvar react_router_dist = __webpack_require__(7767);\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/components/VideoItem/VideoItem.js\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\n\n\nfunction VideoItem(_ref) {\n  var playlistId = _ref.playlistId,\n    video = _ref.video,\n    selected = _ref.selected,\n    setSelected = _ref.setSelected;\n  var id = video.id,\n    video_title = video.video_title,\n    thumbnail = video.thumbnail,\n    video_type = video.video_type,\n    video_slug = video.video_slug,\n    video_duration = video.video_duration;\n  var navigate = (0,react_router_dist/* useNavigate */.Zp)();\n\n  /**\n   * Check if current video is the selected one.\n   *\n   * @returns {boolean}\n   */\n  var isSelected = function isSelected() {\n    return playlistId === parseInt(selected.playlist) && id === parseInt(selected.video);\n  };\n  var url = (thumbnail === null || thumbnail === void 0 ? void 0 : thumbnail.url) || null;\n  var showPreview = function showPreview() {\n    // Change route\n    navigate("/view/".concat(playlistId, "/").concat(id));\n\n    // Update selected object\n    setSelected({\n      playlist: playlistId,\n      video: id\n    });\n  };\n  var btnClasses = classnames_default()({\n    \'wpmudev-videos-section--video\': true,\n    \'wpmudev-videos-active\': isSelected()\n  });\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)("button", {\n    role: "tab",\n    className: btnClasses,\n    tabIndex: isSelected() ? false : \'-1\',\n    "aria-selected": isSelected() ? \'true\' : \'false\',\n    id: "tab--playlist-".concat(playlistId, "-video-").concat(id),\n    "aria-controls": "tab-content--playlist-".concat(playlistId, "-video-").concat(id),\n    onClick: showPreview,\n    children: [/*#__PURE__*/(0,jsx_runtime.jsxs)("span", {\n      className: "sui-screen-reader-text",\n      children: [(0,build_module.__)(\'Click to open\', \'wpmudev_vids\'), " ", video_title]\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)("span", {\n      className: "wpmudev-videos-section--video-head",\n      "aria-hidden": "true",\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n        className: "video-thumbnail",\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)("span", {\n          className: "video-thumbnail-content",\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* ListThumb */.Bt, {\n            url: url,\n            isCustom: \'custom\' === video_type,\n            icon: video_slug,\n            className: "video-thumb",\n            tag: "span"\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n            className: "video-thumbnail-name",\n            children: video_title\n          })]\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n        icon: "play",\n        size: "sm"\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)("span", {\n      className: "wpmudev-videos-section--video-body",\n      "aria-hidden": "true",\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n        className: "video-title",\n        children: video_title\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n        className: "video-duration",\n        children: video_duration || \'\'\n      })]\n    })]\n  });\n}\n/* harmony default export */ var VideoItem_VideoItem = ((/* unused pure expression or super */ null && (VideoItem)));\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/components/VideoItem/index.js\n\n// EXTERNAL MODULE: ./app/src/helpers/api/index.js + 1 modules\nvar api = __webpack_require__(9331);\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/components/VideoPlayer/VideoPlayer.js\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }\nfunction VideoPlayer_slicedToArray(r, e) { return VideoPlayer_arrayWithHoles(r) || VideoPlayer_iterableToArrayLimit(r, e) || VideoPlayer_unsupportedIterableToArray(r, e) || VideoPlayer_nonIterableRest(); }\nfunction VideoPlayer_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction VideoPlayer_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return VideoPlayer_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? VideoPlayer_arrayLikeToArray(r, a) : void 0; } }\nfunction VideoPlayer_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction VideoPlayer_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction VideoPlayer_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\n\nfunction VideoPlayer(_ref) {\n  var videoId = _ref.videoId,\n    playlistId = _ref.playlistId,\n    isSelected = _ref.isSelected,\n    setSelected = _ref.setSelected;\n  var _useState = (0,react.useState)(),\n    _useState2 = VideoPlayer_slicedToArray(_useState, 2),\n    embed = _useState2[0],\n    setEmbed = _useState2[1];\n  var _useState3 = (0,react.useState)(false),\n    _useState4 = VideoPlayer_slicedToArray(_useState3, 2),\n    isUpdating = _useState4[0],\n    setIsUpdating = _useState4[1];\n  var video = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_videos/* getVideos */.fY)(state, videoId);\n  });\n  var _ref2 = video !== null && video !== void 0 ? video : {},\n    id = _ref2.id,\n    video_title = _ref2.video_title,\n    video_type = _ref2.video_type;\n  var navigate = (0,react_router_dist/* useNavigate */.Zp)();\n\n  // Get embed on mount and when video id changes\n  (0,react.useEffect)(function () {\n    if (id) {\n      getEmbed();\n    }\n  }, [id]);\n\n  /**\n   * get embed.\n   *\n   * We need to pass the custom thumbnail and\n   * start/end time strings.\n   *\n   */\n  var getEmbed = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!isUpdating) {\n              _context.next = 2;\n              break;\n            }\n            return _context.abrupt("return");\n          case 2:\n            setIsUpdating(true);\n            (0,api/* restGet */.B8)({\n              path: "videos/".concat(id, "/embed")\n            }).then(function (response) {\n              if (response.success && response.data) {\n                // Update the embed.\n                setEmbed(response.data);\n                setIsUpdating(false);\n              }\n            });\n          case 4:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function getEmbed() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  /**\n   * Handle the video preview hide event.\n   */\n  var hidePreview = function hidePreview() {\n    navigate(\'/\');\n    setSelected({\n      playlist: \'\',\n      video: \'\'\n    });\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n    role: "tabpanel",\n    className: "wpmudev-videos-section--videos-panel",\n    "aria-live": "polite",\n    tabindex: "0",\n    hidden: !isSelected,\n    id: "tab-content--playlist-".concat(playlistId, "-video-").concat(id),\n    "aria-labelledby": isSelected ? "tab--playlist-".concat(playlistId, "-video-").concat(id) : \'\',\n    children: isSelected && /*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)("h3", {\n        className: "video-title",\n        children: video_title\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* VideoIframe */.Sy, {\n        embed: embed === null || embed === void 0 ? void 0 : embed.html,\n        type: video_type\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)("button", {\n        className: "video-close",\n        onClick: hidePreview,\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n          icon: "close",\n          size: "sm"\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n          className: "sui-screen-reader-text",\n          children: (0,build_module.__)(\'Close video\', \'wpmudev_vids\')\n        })]\n      })]\n    })\n  });\n}\n/* harmony default export */ var VideoPlayer_VideoPlayer = ((/* unused pure expression or super */ null && (VideoPlayer)));\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/components/VideoPlayer/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/components/index.js\n\n\n\n\n\n\n// EXTERNAL MODULE: ./app/src/helpers/utils/utils.js\nvar utils = __webpack_require__(7755);\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/partials/VideosList/VideosList.js\nfunction VideosList_typeof(o) { "@babel/helpers - typeof"; return VideosList_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, VideosList_typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == VideosList_typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != VideosList_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != VideosList_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction VideosList_slicedToArray(r, e) { return VideosList_arrayWithHoles(r) || VideosList_iterableToArrayLimit(r, e) || VideosList_unsupportedIterableToArray(r, e) || VideosList_nonIterableRest(); }\nfunction VideosList_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction VideosList_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return VideosList_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? VideosList_arrayLikeToArray(r, a) : void 0; } }\nfunction VideosList_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction VideosList_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction VideosList_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Internal dependencies\n */\n\n\n\n\n\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\n\n\nfunction VideosList(_ref) {\n  var searchMsgType = _ref.searchMsgType,\n    hideMessage = _ref.hideMessage,\n    resultsCount = _ref.resultsCount;\n  // Url parameters for current opened video\n  var _useParams = (0,react_router_dist/* useParams */.g)(),\n    action = _useParams.action,\n    playlist = _useParams.playlist,\n    video = _useParams.video;\n\n  // Selcted video state based on url params\n  var _useState = (0,react.useState)({\n      playlist: \'\',\n      video: \'\'\n    }),\n    _useState2 = VideosList_slicedToArray(_useState, 2),\n    selected = _useState2[0],\n    setSelected = _useState2[1];\n\n  // We always use sorted playlists\n  var _useState3 = (0,react.useState)([]),\n    _useState4 = VideosList_slicedToArray(_useState3, 2),\n    playlistsLists = _useState4[0],\n    setPlaylistsLists = _useState4[1];\n\n  // Playlists to display in the sticky menu\n  var _useState5 = (0,react.useState)([]),\n    _useState6 = VideosList_slicedToArray(_useState5, 2),\n    displayedPlaylists = _useState6[0],\n    setDisplayedPlaylists = _useState6[1];\n\n  // Playlists object from the store\n  var playlists = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* getPlaylists */.Eo)(state);\n  });\n\n  // Filtered playlists ids\n  var filteredPlaylists = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* getFiltered */.A1)(state);\n  });\n\n  // VideosObject from the store\n  var videosObject = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_videos/* getVideos */.fY)(state);\n  });\n\n  // Filtered videos ids from the store\n  var filteredVideosIds = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_videos/* getFilteredIds */.Q6)(state);\n  });\n  var areVideosLoading = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_videos/* getLoadingStatus */.H)(state);\n  });\n  var arePlaylistsLoading = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* getLoadingStatus */.H)(state);\n  });\n\n  // When both videos and playlists are loading\n  var isLoading = areVideosLoading && arePlaylistsLoading;\n\n  // To show default videos or not\n  var showDefault = (0,utils/* validMember */.xH)();\n\n  // Set selected state based on url params\n  (0,react.useEffect)(function () {\n    if (action !== \'\' && parseInt(playlist) > 0 && parseInt(video) > 0) {\n      setSelected({\n        playlist: playlist,\n        video: video\n      });\n    }\n  }, []);\n\n  // Set playlistsLists on mount\n  (0,react.useEffect)(function () {\n    var newPlaylists = [];\n    filteredPlaylists.forEach(function (id) {\n      if (playlists[id]) {\n        newPlaylists.push(playlists[id]);\n      }\n    });\n    setPlaylistsLists(newPlaylists);\n  }, [playlists, filteredPlaylists]);\n\n  // Set displayedPlaylists on mount\n  (0,react.useEffect)(function () {\n    var filtered = [];\n\n    // Only if there\'re videos to display\n    if (filteredVideosIds.length > 0) {\n      // Loop through all sorted playlists\n      playlistsLists.forEach(function (playlist) {\n        // Videos ids that can be displayed based on certain conditions\n        var displayedVideos = [];\n        if (playlist.videos && playlist.videos.length > 0) {\n          // Loop through each video id in the playlist\n          playlist.videos.forEach(function (videoID) {\n            // Check if video is available in filtered list.\n            if (filteredVideosIds.includes(videoID)) {\n              {\n                // Check if the use is authorized to see the video\n                if (videosObject[videoID].video_type === \'custom\' || videosObject[videoID].video_type === \'default\' && showDefault) {\n                  displayedVideos.push(videoID);\n                }\n              }\n            }\n          });\n        }\n        // Add the playlist with the new filtered videos if it has at least one video that fullfill the conditions\n        if (displayedVideos.length > 0) {\n          filtered.push(_objectSpread(_objectSpread({}, playlist), {}, {\n            videos: displayedVideos\n          }));\n        }\n      });\n    }\n\n    // Update the state\n    setDisplayedPlaylists(filtered);\n  }, [filteredVideosIds, playlistsLists, filteredVideosIds]);\n  var wrapperClasses = classnames_default()({\n    \'wpmudev-videos-section\': true,\n    loading: isLoading\n  });\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n    className: wrapperClasses,\n    children: [isLoading && /*#__PURE__*/(0,jsx_runtime.jsx)(MenuLoader, {}), !isLoading && /*#__PURE__*/(0,jsx_runtime.jsx)(StickyMenu, {\n      playlists: displayedPlaylists\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n      role: "alert",\n      "aria-live": "polite",\n      className: "sui-screen-reader-text",\n      hidden: hideMessage,\n      children: [!hideMessage && searchMsgType === \'clear\' && /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n        children: (0,build_module.__)(\'Search cleared successfully.\', \'wpmudev_vids\')\n      }), !hideMessage && searchMsgType === \'search\' && /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n        children: (0,build_module/* sprintf */.nv)((0,build_module.__)(\'We found %s videos for your search.\', \'wpmudev_vids\'), resultsCount)\n      })]\n    }), isLoading && /*#__PURE__*/(0,jsx_runtime.jsx)(VideosLoader, {}), !isLoading && displayedPlaylists.map(function (playlist) {\n      return /*#__PURE__*/(0,jsx_runtime.jsx)(SinglePlaylist, {\n        selected: selected,\n        setSelected: setSelected,\n        playlist: playlist\n      }, playlist.id);\n    })]\n  });\n}\n/* harmony default export */ var VideosList_VideosList = ((/* unused pure expression or super */ null && (VideosList)));\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/partials/VideosList/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/partials/VideosSearch/VideosSearch.js\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\nfunction VideosSearch(_ref) {\n  var search = _ref.search,\n    setSearch = _ref.setSearch,\n    onSearch = _ref.onSearch,\n    onClear = _ref.onClear;\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Body, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      children: (0,build_module.__)(\'Use these in-depth video tutorials to master all aspects of the WordPress platform.\', \'wpmudev_vids\')\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* VideoSearchForm */.kS, {\n      search: search,\n      onSearch: onSearch,\n      onClear: onClear,\n      setSearch: setSearch,\n      onLoadingText: (0,build_module.__)(\'Searching\', \'wpmudev_vids\')\n    })]\n  });\n}\n/* harmony default export */ var VideosSearch_VideosSearch = ((/* unused pure expression or super */ null && (VideosSearch)));\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/partials/VideosSearch/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/partials/index.js\n\n\n\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/App.js\nfunction App_slicedToArray(r, e) { return App_arrayWithHoles(r) || App_iterableToArrayLimit(r, e) || App_unsupportedIterableToArray(r, e) || App_nonIterableRest(); }\nfunction App_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction App_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return App_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? App_arrayLikeToArray(r, a) : void 0; } }\nfunction App_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction App_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction App_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\nfunction App() {\n  var _useState = (0,react.useState)(\'\'),\n    _useState2 = App_slicedToArray(_useState, 2),\n    search = _useState2[0],\n    setSearch = _useState2[1];\n  var _useState3 = (0,react.useState)(\'clear\'),\n    _useState4 = App_slicedToArray(_useState3, 2),\n    searchMsgType = _useState4[0],\n    setSearchMsgType = _useState4[1];\n  var _useState5 = (0,react.useState)(0),\n    _useState6 = App_slicedToArray(_useState5, 2),\n    resultsCount = _useState6[0],\n    setResultsCount = _useState6[1];\n  var _useState7 = (0,react.useState)(true),\n    _useState8 = App_slicedToArray(_useState7, 2),\n    hideMessage = _useState8[0],\n    setHideMessage = _useState8[1];\n  var dispatch = (0,es/* useDispatch */.wA)();\n\n  // Load playlists and videos on mount\n  (0,react.useEffect)(function () {\n    dispatch((0,slices_playlists/* initPlaylists */.cM)());\n    dispatch((0,slices_videos/* initVideos */.r2)());\n  }, []);\n\n  /**\n   * When getting search results\n   *\n   * @return {void}\n   */\n  var showAlert = function showAlert() {\n    // Show message\n    setHideMessage(false);\n\n    // Hide again after 3 seconds.\n    setTimeout(function () {\n      setHideMessage(true);\n    }, 3000);\n  };\n\n  /**\n   * When getting search results\n   *\n   * @return {voind}\n   */\n  var onSearch = function onSearch(ids) {\n    setResultsCount(ids.length);\n    setSearchMsgType(\'search\');\n\n    // Show Alert\n    showAlert();\n  };\n\n  /**\n   * When search is cleared\n   *\n   * @return {void}\n   */\n  var onClear = function onClear() {\n    setSearchMsgType(\'clear\');\n\n    // Show Alert\n    showAlert();\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n    className: "sui-wrap",\n    children: [/*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(Header, {}), /*#__PURE__*/(0,jsx_runtime.jsx)(VideosSearch, {\n        onSearch: onSearch,\n        onClear: onClear,\n        search: search,\n        setSearch: setSearch\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(react_router_dist/* Routes */.BV, {\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)(react_router_dist/* Route */.qh, {\n          exact: true,\n          path: "/:action?/:playlist?/:video?",\n          element: /*#__PURE__*/(0,jsx_runtime.jsx)(VideosList, {\n            searchMsgType: searchMsgType,\n            hideMessage: hideMessage,\n            resultsCount: resultsCount\n          })\n        })\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(PageFooter/* PageFooter */.F, {})]\n  });\n}\n/* harmony default export */ var tutorials_App = (App);\n;// CONCATENATED MODULE: ./app/src/pages/tutorials/main.js\n\n\n\n\n\n\n\nvar root = client.createRoot(document.getElementById(\'wpmudev-videos-tutorials-app\'));\nroot.render( /*#__PURE__*/(0,jsx_runtime.jsx)(react.StrictMode, {\n  children: /*#__PURE__*/(0,jsx_runtime.jsx)(es/* Provider */.Kq, {\n    store: store/* default */.A,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(dist/* HashRouter */.I9, {\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(tutorials_App, {})\n    })\n  })\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2015\n')},9317:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A1: function() { return /* binding */ getFiltered; },\n/* harmony export */   Eo: function() { return /* binding */ getPlaylists; },\n/* harmony export */   H: function() { return /* binding */ getLoadingStatus; },\n/* harmony export */   cM: function() { return /* binding */ initPlaylists; }\n/* harmony export */ });\n/* unused harmony exports savePlaylist, createPlaylist, orderChange, deletePlaylist, bulkDelete, isPlaylistSelected, isVideoSelected, areAllSelected, getSelectedPlaylists, setPlaylist, updatePlaylistKey, togglePlaylist, toggleVideo, toggleAll */\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8740);\n/* harmony import */ var _helpers_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9331);\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4214);\n/* harmony import */ var reselect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1081);\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }\n\n\n\n\n\n/***************************************************\n *\n * Asynchronous Requests\n *\n * *************************************************/\n/**\n * Initialize the playlist list\n *\n * @return {Promise}\n */\nvar initPlaylists = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'playlists/init\',\n// Redux action type\nfunction (params) {\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restGet */ .B8)({\n    path: \'playlists\',\n    params: params\n  });\n});\n\n/**\n * Save a single playlist changes to database\n *\n * @return {Promise}\n */\nvar savePlaylist = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'playlists/updateSinglePlaylist\',\n// Redux action type\nfunction (data) {\n  var playlist = data.playlist,\n    id = data.id;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restPost */ .J8)({\n    path: "playlists/".concat(id),\n    data: playlist\n  });\n});\n\n/**\n * Create a new playlist\n *\n * @return {Promise}\n */\nvar createPlaylist = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'playlists/createPlaylist\',\n/*#__PURE__*/\n// Redux action type\nfunction () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data, _ref) {\n    var rejectWithValue, playlist;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          rejectWithValue = _ref.rejectWithValue;\n          playlist = data.playlist;\n          _context.prev = 2;\n          _context.next = 5;\n          return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restPost */ .J8)({\n            path: "playlists",\n            data: playlist\n          });\n        case 5:\n          return _context.abrupt("return", _context.sent);\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context["catch"](2);\n          return _context.abrupt("return", rejectWithValue(_context.t0));\n        case 11:\n        case "end":\n          return _context.stop();\n      }\n    }, _callee, null, [[2, 8]]);\n  }));\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n\n/**\n * Change Playlist Order\n *\n * @return {void}\n */\nvar orderChange = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'playlists/changePlaylistOrder\',\n// Redux action type\n\nfunction (data) {\n  var playlistID = data.playlistID,\n    oldIndex = data.oldIndex,\n    newIndex = data.newIndex;\n  if (playlistID > 0 && oldIndex !== newIndex) {\n    (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restGet */ .B8)({\n      path: \'playlists/reorder\',\n      params: {\n        playlist: playlistID,\n        from: oldIndex,\n        to: newIndex\n      }\n    });\n  }\n});\n\n/**\n * Delete a playlist\n *\n * @return {Promise}\n */\nvar deletePlaylist = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'playlists/deletePlaylist\',\n// Redux action type\nfunction (data) {\n  var id = data.id;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restDelete */ ._8)({\n    path: "playlists/".concat(id)\n  });\n});\n\n/**\n * Bulk delete playlists & videos\n *\n * @return {Promise}\n */\nvar bulkDelete = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'playlists/bulkDelete\',\n// Redux action type\nfunction (data) {\n  var selected = data.selected;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restPost */ .J8)({\n    path: "playlists/bulk-actions",\n    data: {\n      action: \'delete\',\n      items: selected\n    }\n  });\n});\n\n/***************************************************\n *\n * Playlists Slice\n *\n * *************************************************/\nvar playlistsSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createSlice */ .Z0)({\n  name: \'playlists\',\n  /***************************************************\n   *\n   * Initial State\n   *\n   * *************************************************/\n\n  initialState: {\n    playlists: {},\n    filtered: [],\n    selected: {},\n    isLoading: false\n  },\n  /***************************************************\n   *\n   * Reducers\n   *\n   * *************************************************/\n  reducers: {\n    /**\n     * Update a single playlist in the playlists list\n     *\n     * If playlist exist, it will replace the playlist object,\n     * if not, it will add the playlist object.\n     *\n     * @param {object} state Current state.\n     * @param {object} action action data.\n     */\n    setPlaylist: function setPlaylist(state, action) {\n      var playlist = action.payload.playlist;\n      var playlists = state.playlists;\n      var newPlaylists = _objectSpread(_objectSpread({}, playlists), {}, _defineProperty({}, playlist.id, playlist));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        playlists: newPlaylists\n      });\n    },\n    /**\n     * Select or deselect a playlist ( checkbox )\n     *\n     * @return {void}\n     */\n    togglePlaylist: function togglePlaylist(state, action) {\n      var _state$playlists, _selected$id;\n      var _action$payload = action.payload,\n        checked = _action$payload.checked,\n        id = _action$payload.id;\n      var allVideos = (_state$playlists = state.playlists) === null || _state$playlists === void 0 || (_state$playlists = _state$playlists[id]) === null || _state$playlists === void 0 ? void 0 : _state$playlists.videos;\n\n      // The new selected object\n      var selected = _objectSpread(_objectSpread({}, state.selected), {}, _defineProperty({}, id, {\n        selected: checked,\n        videos: checked && allVideos || []\n      }));\n\n      // If playlist is not selected and no videos are selected,\n      // remove the playlist\n      if ((selected === null || selected === void 0 || (_selected$id = selected[id]) === null || _selected$id === void 0 || (_selected$id = _selected$id.videos) === null || _selected$id === void 0 ? void 0 : _selected$id.length) === 0 && !checked) {\n        delete selected[id];\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: selected\n      });\n    },\n    /**\n     * Select or de-select all playlists and videos ( checkbox )\n     *\n     * @return {void}\n     */\n    toggleAll: function toggleAll(state, action) {\n      var checked = action.payload.checked;\n      var playlists = state.playlists;\n\n      // The new selected object\n      var newSelected = {};\n      if (checked === true) {\n        Object.keys(playlists).forEach(function (id) {\n          newSelected[id] = {\n            selected: true,\n            videos: (playlists === null || playlists === void 0 ? void 0 : playlists[id].videos) || []\n          };\n        });\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: newSelected\n      });\n    },\n    /**\n     * Update selected videos list ( checkbox )\n     *\n     * @return {void}\n     */\n    toggleVideo: function toggleVideo(state, action) {\n      var _selected$playlistID, _selected$playlistID2;\n      var _action$payload2 = action.payload,\n        videoID = _action$payload2.videoID,\n        playlistID = _action$payload2.playlistID;\n      var selected = state.selected;\n      var videos = (selected === null || selected === void 0 || (_selected$playlistID = selected[playlistID]) === null || _selected$playlistID === void 0 ? void 0 : _selected$playlistID.videos) || [];\n\n      // The new selected object\n      var newSelected = {};\n\n      // The new videos array\n      var newVideos = [];\n\n      // Toggle video\n      if (videos.includes(videoID)) {\n        // Remove video if it exists\n        newVideos = videos.filter(function (el) {\n          return el !== videoID;\n        });\n      } else {\n        // Add video if it doesn\'t exist\n        newVideos = [].concat(_toConsumableArray(videos), [videoID]);\n      }\n      var isPlaylistSelected = (selected === null || selected === void 0 || (_selected$playlistID2 = selected[playlistID]) === null || _selected$playlistID2 === void 0 ? void 0 : _selected$playlistID2.selected) || false;\n\n      // Update selected object\n      newSelected = _objectSpread(_objectSpread({}, selected), {}, _defineProperty({}, playlistID, {\n        selected: isPlaylistSelected,\n        videos: newVideos\n      }));\n\n      /* If playlist is not selected and no video is selected,\n      remove the playlist */\n      if (newVideos.length === 0 && !isPlaylistSelected) {\n        delete newSelected[playlistID];\n      }\n\n      // Set the state\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: newSelected\n      });\n    }\n  },\n  /***************************************************\n   *\n   * Extra Reducers\n   *\n   * Manage of asynchronous requests states\n   *\n   * *************************************************/\n  extraReducers: function extraReducers(builder) {\n    builder\n    // Playlists Init\n    .addCase(initPlaylists.pending, function (state) {\n      state.isLoading = true;\n    }).addCase(initPlaylists.fulfilled, function (state, action) {\n      state.isLoading = false;\n      var payload = action.payload;\n      if (payload.success && payload.data) {\n        var playlists = {};\n        var filtered = [];\n\n        // Setup the list data.\n        payload.data.forEach(function (playlist) {\n          playlists[playlist.id] = playlist;\n          filtered.push(playlist.id);\n        });\n\n        // update the state\n        state.playlists = playlists;\n        state.filtered = filtered;\n      }\n    }).addCase(initPlaylists.rejected, function (state) {\n      state.isLoading = false;\n    })\n    // Save Playlist\n    .addCase(savePlaylist.pending, function (state) {\n      state.isLoading = true;\n    }).addCase(savePlaylist.fulfilled, function (state, action) {\n      var data = action.payload.data;\n      var playlists = state.playlists;\n      var newPlaylists = _objectSpread(_objectSpread({}, playlists), {}, _defineProperty({}, data.id, data));\n      state.isLoading = false;\n      state.playlists = newPlaylists;\n    }).addCase(savePlaylist.rejected, function (state) {\n      state.isLoading = false;\n    })\n    // Create Playlist\n    .addCase(createPlaylist.pending, function (state) {\n      state.isLoading = true;\n    }).addCase(createPlaylist.fulfilled, function (state, action) {\n      var _action$payload3 = action.payload,\n        data = _action$payload3.data,\n        success = _action$payload3.success;\n      if (success && data) {\n        var playlists = state.playlists,\n          filtered = state.filtered;\n        // update the list in the store\n        state.playlists = _objectSpread(_objectSpread({}, playlists), {}, _defineProperty({}, data.id, data));\n        state.filtered = [].concat(_toConsumableArray(filtered), [data.id]);\n      }\n      state.isLoading = false;\n    }).addCase(createPlaylist.rejected, function (state) {\n      state.isLoading = false;\n    })\n    // Delete Playlist\n    .addCase(deletePlaylist.pending, function (state) {\n      state.isLoading = true;\n    }).addCase(deletePlaylist.fulfilled, function (state, action) {\n      var id = action.meta.arg.id,\n        success = action.payload.success;\n\n      // Remove the playlist if success\n      if (success === true) {\n        var playlists = state.playlists,\n          filtered = state.filtered;\n        var newPlaylists = _objectSpread({}, playlists);\n        delete newPlaylists[id];\n        // update the list in the store\n        state.playlists = _objectSpread({}, newPlaylists);\n        state.filtered = filtered.filter(function (item) {\n          return item !== id;\n        });\n      }\n      state.isLoading = false;\n    }).addCase(deletePlaylist.rejected, function (state) {\n      state.isLoading = false;\n    })\n    // Bulk Delete\n    .addCase(bulkDelete.pending, function (state) {\n      state.isLoading = true;\n    }).addCase(bulkDelete.fulfilled, function (state) {\n      state.isLoading = false;\n\n      // Empty the selected list\n      state.selected = [];\n    }).addCase(bulkDelete.rejected, function (state) {\n      state.isLoading = false;\n\n      // Empty the selected list\n      state.selected = [];\n    });\n  }\n});\n\n/***************************************************\n *\n * Selectors\n *\n * *************************************************/\n\nvar playlistsState = function playlistsState(state) {\n  return state.playlists;\n};\n\n/**\n * Get playlists object\n *\n * @param {object} playlistsState the playlists object.\n *\n * @return {object}\n */\nvar getPlaylists = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (playlistsState) {\n  return playlistsState.playlists;\n});\n\n/**\n * Get filtered array\n *\n * @param {object} playlistsState the playlists object.\n *\n * @return {array}\n */\nvar getFiltered = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (playlistsState) {\n  return playlistsState.filtered;\n});\n\n/**\n * Checks if the playlist is selected\n *\n * @param {object} playlistsState the playlists object.\n * @param {number} id playlist id\n *\n * @return {boolean}\n */\nvar isPlaylistSelected = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (_, id) {\n  return id;\n}, function (playlistsState, id) {\n  var _playlistsState$selec;\n  return (_playlistsState$selec = playlistsState.selected) === null || _playlistsState$selec === void 0 || (_playlistsState$selec = _playlistsState$selec[id]) === null || _playlistsState$selec === void 0 ? void 0 : _playlistsState$selec.selected;\n});\n\n/**\n * Checks if video is selected\n *\n * @param {object} playlistsState the playlists object.\n * @param {object} ids playlistID & videoID\n *\n * @return {boolean}\n */\nvar isVideoSelected = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (_, ids) {\n  return ids;\n}, function (playlistsState, ids) {\n  var _playlistsState$selec2;\n  var _ref3 = ids !== null && ids !== void 0 ? ids : {},\n    playlistID = _ref3.playlistID,\n    videoID = _ref3.videoID;\n  var videos = ((_playlistsState$selec2 = playlistsState.selected) === null || _playlistsState$selec2 === void 0 || (_playlistsState$selec2 = _playlistsState$selec2[playlistID]) === null || _playlistsState$selec2 === void 0 ? void 0 : _playlistsState$selec2.videos) || [];\n  return videos.includes(videoID);\n});\n\n/**\n * Check of all videos and playlists are selected\n *\n * @param {object} playlistsState the playlists object.\n * @return {boolean}\n *\n */\nvar areAllSelected = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (playlistsState) {\n  var playlists = playlistsState.playlists,\n    selected = playlistsState.selected;\n\n  // return false if at least one playlist is not selected\n  for (var playlistId in playlists) {\n    var _selected$playlistId, _playlists$playlistId, _selected$playlistId2;\n    var isSelected = (selected === null || selected === void 0 || (_selected$playlistId = selected[playlistId]) === null || _selected$playlistId === void 0 ? void 0 : _selected$playlistId.selected) || false;\n    if (!isSelected) {\n      return false;\n    }\n\n    // return false if at least one video is not selected\n    var allVideos = (playlists === null || playlists === void 0 || (_playlists$playlistId = playlists[playlistId]) === null || _playlists$playlistId === void 0 ? void 0 : _playlists$playlistId.videos) || [];\n    var selectedVideos = (selected === null || selected === void 0 || (_selected$playlistId2 = selected[playlistId]) === null || _selected$playlistId2 === void 0 ? void 0 : _selected$playlistId2.videos) || [];\n\n    // It suffices to compare lengths only\n    if (allVideos.length !== selectedVideos.length) {\n      return false;\n    }\n  }\n  return Object.keys(playlists).length > 0;\n});\n\n/**\n * Get selected Playlists & videos\n *\n * @param {object} playlistsState the playlists object.\n *\n * @return {object}\n */\nvar getSelectedPlaylists = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (playlistsState) {\n  return playlistsState.selected;\n});\n\n/**\n * Get Loading status\n *\n * @param {object} playlistsState the playlists object.\n *\n * @return {*}\n */\nvar getLoadingStatus = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (playlistsState) {\n  return playlistsState.isLoading;\n});\n\n// Export actions\nvar _playlistsSlice$actio = playlistsSlice.actions,\n  setPlaylist = _playlistsSlice$actio.setPlaylist,\n  updatePlaylistKey = _playlistsSlice$actio.updatePlaylistKey,\n  togglePlaylist = _playlistsSlice$actio.togglePlaylist,\n  toggleVideo = _playlistsSlice$actio.toggleVideo,\n  toggleAll = _playlistsSlice$actio.toggleAll;\n\n/* harmony default export */ __webpack_exports__.Ay = (playlistsSlice.reducer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9317\n')},4084:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DH: function() { return /* binding */ searchVideos; },\n/* harmony export */   H: function() { return /* binding */ getLoadingStatus; },\n/* harmony export */   Q6: function() { return /* binding */ getFilteredIds; },\n/* harmony export */   fY: function() { return /* binding */ getVideos; },\n/* harmony export */   r2: function() { return /* binding */ initVideos; }\n/* harmony export */ });\n/* unused harmony exports deleteVideo, unAssignVideo, fetchEmbed, createVideo, updateVideo, getEmbed, setFiltered */\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8740);\n/* harmony import */ var _helpers_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9331);\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4214);\n/* harmony import */ var reselect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1081);\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }\n\n\n\n\n\n/**\n * Re-initialize the videos list\n *\n * @return {Promise}\n */\nvar initVideos = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/init\',\n// Redux action type\nfunction (params) {\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restGet */ .B8)({\n    path: \'videos\',\n    params: params\n  });\n});\n\n/**\n * Deletes a video\n *\n * @return {Promise}\n */\nvar deleteVideo = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/delete\',\n// Redux action type\nfunction (data) {\n  var id = data.id;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restDelete */ ._8)({\n    path: "videos/".concat(id)\n  });\n});\n\n/**\n * Delete a video from playlist\n *\n * @return {Promise}\n */\nvar unAssignVideo = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/delete\',\n// Redux action type\nfunction (_ref) {\n  var playlistID = _ref.playlistID,\n    videoID = _ref.videoID;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restDelete */ ._8)({\n    path: "playlists/".concat(playlistID, "/videos"),\n    data: {\n      videos: [videoID]\n    }\n  });\n});\n\n/**\n * Fetch a single embed object using API.\n *\n * Use this only if the embed is not already\n * found in state.\n *\n * @param {object} data Video ID and other args.\n *\n * @return {Promise}\n */\nvar fetchEmbed = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/fetchEmbed\', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(data.id && data.id > 0)) {\n            _context.next = 6;\n            break;\n          }\n          _context.next = 3;\n          return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restGet */ .B8)({\n            path: "videos/".concat(data.id, "/embed"),\n            params: data\n          });\n        case 3:\n          response = _context.sent;\n          // Include the id in response\n          response.id = data.id;\n          return _context.abrupt("return", response);\n        case 6:\n        case "end":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n\n/**\n * Create a video\n *\n * @param {object} video Video object\n *\n * @return {Promise}\n */\nvar createVideo = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/create\', function (data) {\n  var video = data.video;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restPost */ .J8)({\n    path: \'videos\',\n    data: video\n  });\n});\n\n/**\n * Update a video\n *\n * @param {object} video Video object\n *\n * @return {Promise}\n */\nvar updateVideo = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/update\', function (data) {\n  var video = data.video,\n    id = data.id;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restPost */ .J8)({\n    path: "videos/".concat(id),\n    data: video\n  });\n});\n\n/**\n * Search Videos\n *\n * @param {object} search search string\n *\n * @return {Promise}\n */\nvar searchVideos = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/search\', function (data) {\n  var search = data.search;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restGet */ .B8)({\n    path: "videos",\n    params: {\n      search: search,\n      field: \'ids\'\n    }\n  });\n});\nvar videosSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createSlice */ .Z0)({\n  name: \'videos\',\n  initialState: {\n    videos: {},\n    embeds: {},\n    filtered: [],\n    isLoading: false\n  },\n  reducers: {\n    /**\n     * Set a filtered video ids in state.\n     *\n     * It replaces the filtered list with the provided one\n     *\n     * @param {state} state object\n     * @param {object} action object\n     *\n     * @return {object} New State Object\n     */\n    setFiltered: function setFiltered(state, action) {\n      var ids = action.payload.ids;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filtered: ids\n      });\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder\n    // Handling initVideos status\n    .addCase(initVideos.pending, function (state) {\n      // Set Loading\n      state.isLoading = true;\n    }).addCase(initVideos.fulfilled, function (state, action) {\n      state.isLoading = false;\n      var payload = action.payload;\n      if (payload.success && payload.data) {\n        var videos = {};\n        var filtered = [];\n\n        // Setup the list data.\n        payload.data.forEach(function (video) {\n          videos[video.id] = video;\n          filtered.push(video.id);\n        });\n\n        // update the state\n        state.videos = videos;\n        state.filtered = filtered;\n      }\n      state.status = \'success\';\n    }).addCase(initVideos.rejected, function (state) {\n      // Update Status\n      state.status = \'error\';\n    })\n\n    // Handling fetchEmbed\n    .addCase(fetchEmbed.fulfilled, function (state, action) {\n      var embed = {};\n\n      // Update state\n      var payload = action.payload;\n      if (payload !== null && payload !== void 0 && payload.success && payload !== null && payload !== void 0 && payload.data && payload !== null && payload !== void 0 && payload.data.html) {\n        embed = payload.data;\n        var newData = _objectSpread({}, payload.data);\n        newData.id = payload.id;\n\n        // Update the state\n        state.embeds[payload.id] = newData;\n      }\n    })\n\n    // Handling Video Create\n    .addCase(createVideo.fulfilled, function (state, action) {\n      // Update state\n      var payload = action.payload;\n      if (payload !== null && payload !== void 0 && payload.success) {\n        var video = payload.data;\n\n        // Add video to state\n        if (video.id && video.id > 0) {\n          state.videos = _objectSpread(_objectSpread({}, state.videos), {}, _defineProperty({}, video.id, video));\n\n          // Add the id to the filtered list so the video will be displayed\n          state.filtered = [].concat(_toConsumableArray(state.filtered), [video.id]);\n        }\n      }\n    })\n\n    // Handeling Video Update\n    .addCase(updateVideo.fulfilled, function (state, action) {\n      var payload = action.payload;\n      var newVideo = payload.data;\n      if (payload !== null && payload !== void 0 && payload.success) {\n        // Update videos state\n        state.videos = _objectSpread(_objectSpread({}, state.videos), {}, _defineProperty({}, newVideo.id, newVideo));\n      }\n    })\n\n    // Handeling Video Delete\n    .addCase(deleteVideo.fulfilled, function (state, action) {\n      var id = action.meta.arg.id,\n        success = action.payload.success;\n      if (success === true) {\n        var videos = state.videos,\n          filtered = state.filtered;\n\n        // Remove from filtered list\n        state.filtered = filtered.filter(function (item) {\n          return id !== item;\n        });\n\n        // Delete the video from the videos object\n        var newVideos = _objectSpread({}, videos);\n        delete newVideos[id];\n        state.videos = newVideos;\n      }\n    })\n\n    // Handeling Video Search\n    .addCase(searchVideos.pending, function (state, action) {\n      // Set Loading\n      state.isLoading = true;\n    }).addCase(searchVideos.fulfilled, function (state, action) {\n      var _action$payload;\n      var ids = (action === null || action === void 0 || (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.data) || [];\n      state.filtered = ids;\n\n      // Set Loading\n      state.isLoading = false;\n    }).addCase(searchVideos.rejected, function (state, action) {\n      state.isLoading = false;\n    });\n  }\n});\n\n// Selectors\nvar videosState = function videosState(state) {\n  return state.videos;\n};\n\n/**\n * Get video(s) object(s) by id(s)\n *\n * @param {object} videosState\n * @param {array|string} ids videos ids\n *\n * @return {array|object|false}\n */\nvar getVideos = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(videosState, function (_, ids) {\n  return ids;\n}, function (videosState, ids) {\n  var videos = [];\n  if (Array.isArray(ids)) {\n    ids.forEach(function (id) {\n      if (videosState.videos[id]) {\n        videos.push(videosState.videos[id]);\n      }\n    });\n    return videos;\n  } else if (typeof ids === \'string\' || typeof ids === \'number\') {\n    return videosState.videos[ids];\n  } else {\n    // If ids is not provided get all videos\n    return videosState.videos;\n  }\n});\n\n/**\n * Get Filtered IDs\n *\n * @param {object} videosState\n *\n * @return {array}\n */\nvar getFilteredIds = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(videosState, function (videosState) {\n  return videosState.filtered;\n});\n\n/**\n * Get a single embed object\n *\n * @param {object} videosState\n * @param {number} videoId\n *\n * @return {array}\n */\nvar getEmbed = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(videosState, function (_, id) {\n  return id;\n}, function (videosState, id) {\n  return videosState.embeds[id] || false;\n});\n\n/**\n * Get loading status\n *\n * @param {object} videosState the videos state object.\n *\n * @return {boolean}\n */\nvar getLoadingStatus = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(videosState, function (videosState) {\n  return videosState.isLoading;\n});\n\n// Export actions\nvar setFiltered = videosSlice.actions.setFiltered;\n\n/* harmony default export */ __webpack_exports__.Ay = (videosSlice.reducer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4084\n')},5524:function(module){eval('!function(t,e){ true?module.exports=e():0}(this,(function(){"use strict";function t(){return(t=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}return function(){var e,n=[],i={vendor:void 0,id:void 0,src:void 0,thumbnail:void 0,title:void 0,initialized:!1,y:void 0,debounce:250,lazyload:!0,autoplay:!0,initinview:!1,onLoad:function(t){},onAppend:function(t){},onThumbnailLoad:function(t){}},o={regex:{youtube_nocookie:/(?:youtube-nocookie\\.com\\/\\S*(?:(?:\\/e(?:mbed))?\\/|watch\\?(?:\\S*?&?v\\=)))([a-zA-Z0-9_-]{6,11})/,youtube:/(?:youtube\\.com\\/\\S*(?:(?:\\/e(?:mbed))?\\/|watch\\?(?:\\S*?&?v\\=))|youtu\\.be\\/)([a-zA-Z0-9_-]{6,11})/,vimeo:/vimeo\\.com\\/(?:video\\/)?([0-9]*)(?:\\?|)/},condition:{youtube:function(t){return!(!t||11!=t[1].length)&&t[1]},youtube_nocookie:function(t){return!(!t||11!=t[1].length)&&t[1]},vimeo:function(t){return!!(t&&9===t[1].length||8===t[1].length)&&t[1]}},src:{youtube:function(t){return"https://www.youtube.com/embed/".concat(t.id,"/?autoplay=").concat(t.autoplay?"1":"0","&").concat(t.query)},youtube_nocookie:function(t){return"https://www.youtube-nocookie.com/embed/".concat(t.id,"/?autoplay=").concat(t.autoplay?"1":"0","&").concat(t.query)},vimeo:function(t){return"https://player.vimeo.com/video/".concat(t.id,"/?autoplay=").concat(t.autoplay?"1":"0","&").concat(t.query)}},endpoint:function(t){return"https://noembed.com/embed?url=".concat(t.src)},response:{title:function(t){return t.title},thumbnail:function(t){return t.thumbnail_url}}};function a(t){var n=this;if(t instanceof HTMLElement!=!1&&!t.classList.contains("lazyframe--loaded")){var i={el:t,settings:r(t)};i.el.addEventListener("click",(function(){i.el.appendChild(i.iframe);var e=t.querySelectorAll("iframe");i.settings.onAppend.call(n,e[0])})),e.lazyload?c(i):l(i,i.settings.thumbnail)}}function r(n){var i,a,r=Array.prototype.slice.apply(n.attributes).filter((function(t){return""!==t.value})).reduce((function(t,e){return t[0===e.name.indexOf("data-")?e.name.split("data-")[1]:e.name]=e.value,t}),{}),l=t({},e,r,{y:n.offsetTop,originalSrc:r.src,query:(i=r.src,a=i.split("?"),a[1]?a[1]:null)});if(l.vendor){var u=l.src.match(o.regex[l.vendor]);l.id=o.condition[l.vendor](u)}return l}function l(t){var e=this;!function(t){return!(!t.vendor||t.title&&t.thumbnail)}(t.settings)?c(t,!0):function(t,e){var n=o.endpoint(t.settings),i=new XMLHttpRequest;i.open("GET",n,!0),i.onload=function(){if(i.status>=200&&i.status<400){var n=JSON.parse(i.responseText);e(null,[n,t])}else e(!0)},i.onerror=function(){e(!0)},i.send()}(t,(function(n,i){if(!n){var a=i[0],r=i[1];if(r.settings.title||(r.settings.title=o.response.title(a)),!r.settings.thumbnail){var l=o.response.thumbnail(a);r.settings.thumbnail=l,t.settings.onThumbnailLoad.call(e,l)}c(r,!0)}}))}function u(){var t=this,i=window.innerHeight,o=n.length,a=function(e,n){e.settings.initialized=!0,e.el.classList.add("lazyframe--loaded"),o--,l(e),e.settings.initinview&&e.el.click(),e.settings.onLoad.call(t,e)};n.filter((function(t){return t.settings.y<i})).forEach(a);var r,u,c,s,d=(r=function(){m=f<window.pageYOffset,f=window.pageYOffset,m&&n.filter((function(t){return t.settings.y<i+f&&!1===t.settings.initialized})).forEach(a),0===o&&window.removeEventListener("scroll",d,!1)},u=e.debounce,function(){var t=this,e=arguments,n=function(){s=null,c||r.apply(t,e)},i=c&&!s;clearTimeout(s),s=setTimeout(n,u),i&&r.apply(t,e)}),f=0,m=!1;window.addEventListener("scroll",d,!1)}function c(t,i){if(t.iframe=function(t){var e=document.createDocumentFragment(),n=document.createElement("iframe");t.vendor&&(t.src=o.src[t.vendor](t));n.setAttribute("id","lazyframe-".concat(t.id)),n.setAttribute("src",t.src),n.setAttribute("frameborder",0),n.setAttribute("allowfullscreen",""),t.autoplay&&(n.allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture");return e.appendChild(n),e}(t.settings),t.settings.thumbnail&&i&&(t.el.style.backgroundImage="url(".concat(t.settings.thumbnail,")")),t.settings.title&&0===t.el.children.length){var a=document.createDocumentFragment(),r=document.createElement("span");r.className="lazyframe__title",r.innerHTML=t.settings.title,a.appendChild(r),t.el.appendChild(a)}e.lazyload||(t.el.classList.add("lazyframe--loaded"),t.settings.onLoad.call(this,t),n.push(t)),t.settings.initialized||n.push(t)}return function(n){if(e=t({},i,arguments.length<=1?void 0:arguments[1]),"string"==typeof n)for(var o=document.querySelectorAll(n),r=0;r<o.length;r++)a(o[r]);else if(void 0===n.length)a(n);else for(var l=0;l<n.length;l++)a(n[l]);e.lazyload&&u()}}()}));\n//# sourceMappingURL=lazyframe.min.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUyNC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3BtdWRldi12aWRlb3MvLi9ub2RlX21vZHVsZXMvbGF6eWZyYW1lL2Rpc3QvbGF6eWZyYW1lLm1pbi5qcz9iZGRhIl0sInNvdXJjZXNDb250ZW50IjpbIiFmdW5jdGlvbih0LGUpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKGUpOih0PVwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWxUaGlzP2dsb2JhbFRoaXM6dHx8c2VsZikubGF6eWZyYW1lPWUoKX0odGhpcywoZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiB0KCl7cmV0dXJuKHQ9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl7dmFyIG49YXJndW1lbnRzW2VdO2Zvcih2YXIgaSBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLGkpJiYodFtpXT1uW2ldKX1yZXR1cm4gdH0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gZnVuY3Rpb24oKXt2YXIgZSxuPVtdLGk9e3ZlbmRvcjp2b2lkIDAsaWQ6dm9pZCAwLHNyYzp2b2lkIDAsdGh1bWJuYWlsOnZvaWQgMCx0aXRsZTp2b2lkIDAsaW5pdGlhbGl6ZWQ6ITEseTp2b2lkIDAsZGVib3VuY2U6MjUwLGxhenlsb2FkOiEwLGF1dG9wbGF5OiEwLGluaXRpbnZpZXc6ITEsb25Mb2FkOmZ1bmN0aW9uKHQpe30sb25BcHBlbmQ6ZnVuY3Rpb24odCl7fSxvblRodW1ibmFpbExvYWQ6ZnVuY3Rpb24odCl7fX0sbz17cmVnZXg6e3lvdXR1YmVfbm9jb29raWU6Lyg/OnlvdXR1YmUtbm9jb29raWVcXC5jb21cXC9cXFMqKD86KD86XFwvZSg/Om1iZWQpKT9cXC98d2F0Y2hcXD8oPzpcXFMqPyY/dlxcPSkpKShbYS16QS1aMC05Xy1dezYsMTF9KS8seW91dHViZTovKD86eW91dHViZVxcLmNvbVxcL1xcUyooPzooPzpcXC9lKD86bWJlZCkpP1xcL3x3YXRjaFxcPyg/OlxcUyo/Jj92XFw9KSl8eW91dHVcXC5iZVxcLykoW2EtekEtWjAtOV8tXXs2LDExfSkvLHZpbWVvOi92aW1lb1xcLmNvbVxcLyg/OnZpZGVvXFwvKT8oWzAtOV0qKSg/OlxcP3wpL30sY29uZGl0aW9uOnt5b3V0dWJlOmZ1bmN0aW9uKHQpe3JldHVybiEoIXR8fDExIT10WzFdLmxlbmd0aCkmJnRbMV19LHlvdXR1YmVfbm9jb29raWU6ZnVuY3Rpb24odCl7cmV0dXJuISghdHx8MTEhPXRbMV0ubGVuZ3RoKSYmdFsxXX0sdmltZW86ZnVuY3Rpb24odCl7cmV0dXJuISEodCYmOT09PXRbMV0ubGVuZ3RofHw4PT09dFsxXS5sZW5ndGgpJiZ0WzFdfX0sc3JjOnt5b3V0dWJlOmZ1bmN0aW9uKHQpe3JldHVyblwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvXCIuY29uY2F0KHQuaWQsXCIvP2F1dG9wbGF5PVwiKS5jb25jYXQodC5hdXRvcGxheT9cIjFcIjpcIjBcIixcIiZcIikuY29uY2F0KHQucXVlcnkpfSx5b3V0dWJlX25vY29va2llOmZ1bmN0aW9uKHQpe3JldHVyblwiaHR0cHM6Ly93d3cueW91dHViZS1ub2Nvb2tpZS5jb20vZW1iZWQvXCIuY29uY2F0KHQuaWQsXCIvP2F1dG9wbGF5PVwiKS5jb25jYXQodC5hdXRvcGxheT9cIjFcIjpcIjBcIixcIiZcIikuY29uY2F0KHQucXVlcnkpfSx2aW1lbzpmdW5jdGlvbih0KXtyZXR1cm5cImh0dHBzOi8vcGxheWVyLnZpbWVvLmNvbS92aWRlby9cIi5jb25jYXQodC5pZCxcIi8/YXV0b3BsYXk9XCIpLmNvbmNhdCh0LmF1dG9wbGF5P1wiMVwiOlwiMFwiLFwiJlwiKS5jb25jYXQodC5xdWVyeSl9fSxlbmRwb2ludDpmdW5jdGlvbih0KXtyZXR1cm5cImh0dHBzOi8vbm9lbWJlZC5jb20vZW1iZWQ/dXJsPVwiLmNvbmNhdCh0LnNyYyl9LHJlc3BvbnNlOnt0aXRsZTpmdW5jdGlvbih0KXtyZXR1cm4gdC50aXRsZX0sdGh1bWJuYWlsOmZ1bmN0aW9uKHQpe3JldHVybiB0LnRodW1ibmFpbF91cmx9fX07ZnVuY3Rpb24gYSh0KXt2YXIgbj10aGlzO2lmKHQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCE9ITEmJiF0LmNsYXNzTGlzdC5jb250YWlucyhcImxhenlmcmFtZS0tbG9hZGVkXCIpKXt2YXIgaT17ZWw6dCxzZXR0aW5nczpyKHQpfTtpLmVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChmdW5jdGlvbigpe2kuZWwuYXBwZW5kQ2hpbGQoaS5pZnJhbWUpO3ZhciBlPXQucXVlcnlTZWxlY3RvckFsbChcImlmcmFtZVwiKTtpLnNldHRpbmdzLm9uQXBwZW5kLmNhbGwobixlWzBdKX0pKSxlLmxhenlsb2FkP2MoaSk6bChpLGkuc2V0dGluZ3MudGh1bWJuYWlsKX19ZnVuY3Rpb24gcihuKXt2YXIgaSxhLHI9QXJyYXkucHJvdG90eXBlLnNsaWNlLmFwcGx5KG4uYXR0cmlidXRlcykuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm5cIlwiIT09dC52YWx1ZX0pKS5yZWR1Y2UoKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRbMD09PWUubmFtZS5pbmRleE9mKFwiZGF0YS1cIik/ZS5uYW1lLnNwbGl0KFwiZGF0YS1cIilbMV06ZS5uYW1lXT1lLnZhbHVlLHR9KSx7fSksbD10KHt9LGUscix7eTpuLm9mZnNldFRvcCxvcmlnaW5hbFNyYzpyLnNyYyxxdWVyeTooaT1yLnNyYyxhPWkuc3BsaXQoXCI/XCIpLGFbMV0/YVsxXTpudWxsKX0pO2lmKGwudmVuZG9yKXt2YXIgdT1sLnNyYy5tYXRjaChvLnJlZ2V4W2wudmVuZG9yXSk7bC5pZD1vLmNvbmRpdGlvbltsLnZlbmRvcl0odSl9cmV0dXJuIGx9ZnVuY3Rpb24gbCh0KXt2YXIgZT10aGlzOyFmdW5jdGlvbih0KXtyZXR1cm4hKCF0LnZlbmRvcnx8dC50aXRsZSYmdC50aHVtYm5haWwpfSh0LnNldHRpbmdzKT9jKHQsITApOmZ1bmN0aW9uKHQsZSl7dmFyIG49by5lbmRwb2ludCh0LnNldHRpbmdzKSxpPW5ldyBYTUxIdHRwUmVxdWVzdDtpLm9wZW4oXCJHRVRcIixuLCEwKSxpLm9ubG9hZD1mdW5jdGlvbigpe2lmKGkuc3RhdHVzPj0yMDAmJmkuc3RhdHVzPDQwMCl7dmFyIG49SlNPTi5wYXJzZShpLnJlc3BvbnNlVGV4dCk7ZShudWxsLFtuLHRdKX1lbHNlIGUoITApfSxpLm9uZXJyb3I9ZnVuY3Rpb24oKXtlKCEwKX0saS5zZW5kKCl9KHQsKGZ1bmN0aW9uKG4saSl7aWYoIW4pe3ZhciBhPWlbMF0scj1pWzFdO2lmKHIuc2V0dGluZ3MudGl0bGV8fChyLnNldHRpbmdzLnRpdGxlPW8ucmVzcG9uc2UudGl0bGUoYSkpLCFyLnNldHRpbmdzLnRodW1ibmFpbCl7dmFyIGw9by5yZXNwb25zZS50aHVtYm5haWwoYSk7ci5zZXR0aW5ncy50aHVtYm5haWw9bCx0LnNldHRpbmdzLm9uVGh1bWJuYWlsTG9hZC5jYWxsKGUsbCl9YyhyLCEwKX19KSl9ZnVuY3Rpb24gdSgpe3ZhciB0PXRoaXMsaT13aW5kb3cuaW5uZXJIZWlnaHQsbz1uLmxlbmd0aCxhPWZ1bmN0aW9uKGUsbil7ZS5zZXR0aW5ncy5pbml0aWFsaXplZD0hMCxlLmVsLmNsYXNzTGlzdC5hZGQoXCJsYXp5ZnJhbWUtLWxvYWRlZFwiKSxvLS0sbChlKSxlLnNldHRpbmdzLmluaXRpbnZpZXcmJmUuZWwuY2xpY2soKSxlLnNldHRpbmdzLm9uTG9hZC5jYWxsKHQsZSl9O24uZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gdC5zZXR0aW5ncy55PGl9KSkuZm9yRWFjaChhKTt2YXIgcix1LGMscyxkPShyPWZ1bmN0aW9uKCl7bT1mPHdpbmRvdy5wYWdlWU9mZnNldCxmPXdpbmRvdy5wYWdlWU9mZnNldCxtJiZuLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2V0dGluZ3MueTxpK2YmJiExPT09dC5zZXR0aW5ncy5pbml0aWFsaXplZH0pKS5mb3JFYWNoKGEpLDA9PT1vJiZ3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLGQsITEpfSx1PWUuZGVib3VuY2UsZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9YXJndW1lbnRzLG49ZnVuY3Rpb24oKXtzPW51bGwsY3x8ci5hcHBseSh0LGUpfSxpPWMmJiFzO2NsZWFyVGltZW91dChzKSxzPXNldFRpbWVvdXQobix1KSxpJiZyLmFwcGx5KHQsZSl9KSxmPTAsbT0hMTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLGQsITEpfWZ1bmN0aW9uIGModCxpKXtpZih0LmlmcmFtZT1mdW5jdGlvbih0KXt2YXIgZT1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaWZyYW1lXCIpO3QudmVuZG9yJiYodC5zcmM9by5zcmNbdC52ZW5kb3JdKHQpKTtuLnNldEF0dHJpYnV0ZShcImlkXCIsXCJsYXp5ZnJhbWUtXCIuY29uY2F0KHQuaWQpKSxuLnNldEF0dHJpYnV0ZShcInNyY1wiLHQuc3JjKSxuLnNldEF0dHJpYnV0ZShcImZyYW1lYm9yZGVyXCIsMCksbi5zZXRBdHRyaWJ1dGUoXCJhbGxvd2Z1bGxzY3JlZW5cIixcIlwiKSx0LmF1dG9wbGF5JiYobi5hbGxvdz1cImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlXCIpO3JldHVybiBlLmFwcGVuZENoaWxkKG4pLGV9KHQuc2V0dGluZ3MpLHQuc2V0dGluZ3MudGh1bWJuYWlsJiZpJiYodC5lbC5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2U9XCJ1cmwoXCIuY29uY2F0KHQuc2V0dGluZ3MudGh1bWJuYWlsLFwiKVwiKSksdC5zZXR0aW5ncy50aXRsZSYmMD09PXQuZWwuY2hpbGRyZW4ubGVuZ3RoKXt2YXIgYT1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkscj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtyLmNsYXNzTmFtZT1cImxhenlmcmFtZV9fdGl0bGVcIixyLmlubmVySFRNTD10LnNldHRpbmdzLnRpdGxlLGEuYXBwZW5kQ2hpbGQociksdC5lbC5hcHBlbmRDaGlsZChhKX1lLmxhenlsb2FkfHwodC5lbC5jbGFzc0xpc3QuYWRkKFwibGF6eWZyYW1lLS1sb2FkZWRcIiksdC5zZXR0aW5ncy5vbkxvYWQuY2FsbCh0aGlzLHQpLG4ucHVzaCh0KSksdC5zZXR0aW5ncy5pbml0aWFsaXplZHx8bi5wdXNoKHQpfXJldHVybiBmdW5jdGlvbihuKXtpZihlPXQoe30saSxhcmd1bWVudHMubGVuZ3RoPD0xP3ZvaWQgMDphcmd1bWVudHNbMV0pLFwic3RyaW5nXCI9PXR5cGVvZiBuKWZvcih2YXIgbz1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKG4pLHI9MDtyPG8ubGVuZ3RoO3IrKylhKG9bcl0pO2Vsc2UgaWYodm9pZCAwPT09bi5sZW5ndGgpYShuKTtlbHNlIGZvcih2YXIgbD0wO2w8bi5sZW5ndGg7bCsrKWEobltsXSk7ZS5sYXp5bG9hZCYmdSgpfX0oKX0pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxhenlmcmFtZS5taW4uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5524\n')}},__webpack_module_cache__={},deferred,leafPrototypes,getProto;function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(n.exports,n,n.exports,__webpack_require__),n.loaded=!0,n.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=function(e,t,n,l){if(!t){var I=1/0;for(d=0;d<deferred.length;d++){t=deferred[d][0],n=deferred[d][1],l=deferred[d][2];for(var i=!0,c=0;c<t.length;c++)(!1&l||I>=l)&&Object.keys(__webpack_require__.O).every((function(e){return __webpack_require__.O[e](t[c])}))?t.splice(c--,1):(i=!1,l<I&&(I=l));if(i){deferred.splice(d--,1);var g=n();void 0!==g&&(e=g)}}return e}l=l||0;for(var d=deferred.length;d>0&&deferred[d-1][2]>l;d--)deferred[d]=deferred[d-1];deferred[d]=[t,n,l]},__webpack_require__.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return __webpack_require__.d(t,{a:t}),t},getProto=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__},__webpack_require__.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var n=Object.create(null);__webpack_require__.r(n);var l={};leafPrototypes=leafPrototypes||[null,getProto({}),getProto([]),getProto(getProto)];for(var I=2&t&&e;"object"==typeof I&&!~leafPrototypes.indexOf(I);I=getProto(I))Object.getOwnPropertyNames(I).forEach((function(t){l[t]=function(){return e[t]}}));return l.default=function(){return e},__webpack_require__.d(n,l),n},__webpack_require__.d=function(e,t){for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e},__webpack_require__.j=316,function(){var e={316:0};__webpack_require__.O.j=function(t){return 0===e[t]};var t=function(t,n){var l,I,i=n[0],c=n[1],g=n[2],d=0;if(i.some((function(t){return 0!==e[t]}))){for(l in c)__webpack_require__.o(c,l)&&(__webpack_require__.m[l]=c[l]);if(g)var a=g(__webpack_require__)}for(t&&t(n);d<i.length;d++)I=i[d],__webpack_require__.o(e,I)&&e[I]&&e[I][0](),e[I]=0;return __webpack_require__.O(a)},n=self.webpackChunkwpmudev_videos=self.webpackChunkwpmudev_videos||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}();var __webpack_exports__=__webpack_require__.O(void 0,[504,996],(function(){return __webpack_require__(2015)}));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();