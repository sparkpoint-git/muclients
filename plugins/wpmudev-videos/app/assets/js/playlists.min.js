(function(){var __webpack_modules__={135:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bt: function() { return /* reexport safe */ _ListThumb__WEBPACK_IMPORTED_MODULE_8__.B; },\n/* harmony export */   E0: function() { return /* reexport safe */ _ImageTag__WEBPACK_IMPORTED_MODULE_0__.E; },\n/* harmony export */   FM: function() { return /* reexport safe */ _PageFooter__WEBPACK_IMPORTED_MODULE_2__.F; },\n/* harmony export */   S3: function() { return /* reexport safe */ _WhiteLabelBanner__WEBPACK_IMPORTED_MODULE_1__.S; },\n/* harmony export */   c1: function() { return /* reexport safe */ _SortableElements__WEBPACK_IMPORTED_MODULE_7__.c; },\n/* harmony export */   cd: function() { return /* reexport safe */ _UploadThumb__WEBPACK_IMPORTED_MODULE_11__.c; },\n/* harmony export */   fo: function() { return /* reexport safe */ _UserRoles__WEBPACK_IMPORTED_MODULE_6__.f; }\n/* harmony export */ });\n/* harmony import */ var _ImageTag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(8844);\n/* harmony import */ var _WhiteLabelBanner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6057);\n/* harmony import */ var _PageFooter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5132);\n/* harmony import */ var _UpgradeNotice__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(837);\n/* harmony import */ var _ExpiredNotice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(3778);\n/* harmony import */ var _DashNotice__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(1319);\n/* harmony import */ var _UserRoles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(7122);\n/* harmony import */ var _SortableElements__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(3423);\n/* harmony import */ var _ListThumb__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(3603);\n/* harmony import */ var _VideoIframe__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(5841);\n/* harmony import */ var _GoTopButton__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(4460);\n/* harmony import */ var _UploadThumb__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(5320);\n/* harmony import */ var _VideoSearchForm__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(5498);\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM1LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93cG11ZGV2LXZpZGVvcy8uL2FwcC9zcmMvY29tcG9uZW50cy9pbmRleC5qcz8yZDRmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vSW1hZ2VUYWcnO1xuZXhwb3J0ICogZnJvbSAnLi9XaGl0ZUxhYmVsQmFubmVyJztcbmV4cG9ydCAqIGZyb20gJy4vUGFnZUZvb3Rlcic7XG5leHBvcnQgKiBmcm9tICcuL1VwZ3JhZGVOb3RpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9FeHBpcmVkTm90aWNlJztcbmV4cG9ydCAqIGZyb20gJy4vRGFzaE5vdGljZSc7XG5leHBvcnQgKiBmcm9tICcuL1VzZXJSb2xlcyc7XG5leHBvcnQgKiBmcm9tICcuL1NvcnRhYmxlRWxlbWVudHMnO1xuZXhwb3J0ICogZnJvbSAnLi9MaXN0VGh1bWInO1xuZXhwb3J0ICogZnJvbSAnLi9WaWRlb0lmcmFtZSc7XG5leHBvcnQgKiBmcm9tICcuL0dvVG9wQnV0dG9uJztcbmV4cG9ydCAqIGZyb20gJy4vVXBsb2FkVGh1bWInO1xuZXhwb3J0ICogZnJvbSAnLi9WaWRlb1NlYXJjaEZvcm0nOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///135\n")},9571:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $n: function() { return /* reexport safe */ _Button__WEBPACK_IMPORTED_MODULE_11__.$; },\n/* harmony export */   B8: function() { return /* reexport safe */ _List__WEBPACK_IMPORTED_MODULE_19__.B; },\n/* harmony export */   In: function() { return /* reexport safe */ _Icon__WEBPACK_IMPORTED_MODULE_0__.I; },\n/* harmony export */   JU: function() { return /* reexport safe */ _Label__WEBPACK_IMPORTED_MODULE_22__.J; },\n/* harmony export */   K0: function() { return /* reexport safe */ _IconButton__WEBPACK_IMPORTED_MODULE_26__.K; },\n/* harmony export */   Q8: function() { return /* reexport safe */ _MediaUpload__WEBPACK_IMPORTED_MODULE_24__.Q; },\n/* harmony export */   RL: function() { return /* reexport safe */ _StaticNotice__WEBPACK_IMPORTED_MODULE_15__.R; },\n/* harmony export */   Sc: function() { return /* reexport safe */ _Checkbox__WEBPACK_IMPORTED_MODULE_12__.S; },\n/* harmony export */   TM: function() { return /* reexport safe */ _Textarea__WEBPACK_IMPORTED_MODULE_23__.T; },\n/* harmony export */   XI: function() { return /* reexport safe */ _Table__WEBPACK_IMPORTED_MODULE_21__.X; },\n/* harmony export */   Y9: function() { return /* reexport safe */ _Header__WEBPACK_IMPORTED_MODULE_1__.Y; },\n/* harmony export */   ZL: function() { return /* reexport safe */ _Portal__WEBPACK_IMPORTED_MODULE_25__.Z; },\n/* harmony export */   aF: function() { return /* reexport safe */ _Modal__WEBPACK_IMPORTED_MODULE_14__.a; },\n/* harmony export */   az: function() { return /* reexport safe */ _Box__WEBPACK_IMPORTED_MODULE_7__.a; },\n/* harmony export */   ii: function() { return /* reexport safe */ _TopNotice__WEBPACK_IMPORTED_MODULE_4__.i; },\n/* harmony export */   iw: function() { return /* reexport safe */ _WhiteLabelSummary__WEBPACK_IMPORTED_MODULE_18__.i; },\n/* harmony export */   l6: function() { return /* reexport safe */ _Select__WEBPACK_IMPORTED_MODULE_3__.l; },\n/* harmony export */   nD: function() { return /* reexport safe */ _Accordion__WEBPACK_IMPORTED_MODULE_20__.n; },\n/* harmony export */   pd: function() { return /* reexport safe */ _Input__WEBPACK_IMPORTED_MODULE_10__.p; },\n/* harmony export */   wi: function() { return /* reexport safe */ _Footer__WEBPACK_IMPORTED_MODULE_2__.w; }\n/* harmony export */ });\n/* harmony import */ var _Icon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7028);\n/* harmony import */ var _Header__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7347);\n/* harmony import */ var _Footer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(5528);\n/* harmony import */ var _Select__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(8216);\n/* harmony import */ var _TopNotice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(3564);\n/* harmony import */ var _MobileNav__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(6386);\n/* harmony import */ var _SideNav__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(3734);\n/* harmony import */ var _Box__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(9907);\n/* harmony import */ var _Toggle__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(4377);\n/* harmony import */ var _BorderFrame__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(2740);\n/* harmony import */ var _Input__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(2546);\n/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(9590);\n/* harmony import */ var _Checkbox__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(4268);\n/* harmony import */ var _FileUpload__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(8811);\n/* harmony import */ var _Modal__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(6744);\n/* harmony import */ var _StaticNotice__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(9906);\n/* harmony import */ var _ProgressBar__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(4113);\n/* harmony import */ var _RadioTabs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(7385);\n/* harmony import */ var _WhiteLabelSummary__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(5390);\n/* harmony import */ var _List__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(7735);\n/* harmony import */ var _Accordion__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(3057);\n/* harmony import */ var _Table__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(7670);\n/* harmony import */ var _Label__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(6686);\n/* harmony import */ var _Textarea__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(2868);\n/* harmony import */ var _MediaUpload__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(9847);\n/* harmony import */ var _Portal__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(5071);\n/* harmony import */ var _IconButton__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(9850);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTU3MS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3dwbXVkZXYtdmlkZW9zLy4vYXBwL3NyYy9saWIvY29tcG9uZW50cy9pbmRleC5qcz9hYTNjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vSWNvbic7XG5leHBvcnQgKiBmcm9tICcuL0hlYWRlcic7XG5leHBvcnQgKiBmcm9tICcuL0Zvb3Rlcic7XG5leHBvcnQgKiBmcm9tICcuL1NlbGVjdCc7XG5leHBvcnQgKiBmcm9tICcuL1RvcE5vdGljZSc7XG5leHBvcnQgKiBmcm9tICcuL01vYmlsZU5hdic7XG5leHBvcnQgKiBmcm9tICcuL1NpZGVOYXYnO1xuZXhwb3J0ICogZnJvbSAnLi9Cb3gnO1xuZXhwb3J0ICogZnJvbSAnLi9Ub2dnbGUnO1xuZXhwb3J0ICogZnJvbSAnLi9Cb3JkZXJGcmFtZSc7XG5leHBvcnQgKiBmcm9tICcuL0lucHV0JztcbmV4cG9ydCAqIGZyb20gJy4vQnV0dG9uJztcbmV4cG9ydCAqIGZyb20gJy4vQ2hlY2tib3gnO1xuZXhwb3J0ICogZnJvbSAnLi9GaWxlVXBsb2FkJztcbmV4cG9ydCAqIGZyb20gJy4vTW9kYWwnO1xuZXhwb3J0ICogZnJvbSAnLi9TdGF0aWNOb3RpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9Qcm9ncmVzc0Jhcic7XG5leHBvcnQgKiBmcm9tICcuL1JhZGlvVGFicyc7XG5leHBvcnQgKiBmcm9tICcuL1doaXRlTGFiZWxTdW1tYXJ5JztcbmV4cG9ydCAqIGZyb20gJy4vTGlzdCc7XG5leHBvcnQgKiBmcm9tICcuL0FjY29yZGlvbic7XG5leHBvcnQgKiBmcm9tICcuL1RhYmxlJztcbmV4cG9ydCAqIGZyb20gJy4vTGFiZWwnO1xuZXhwb3J0ICogZnJvbSAnLi9UZXh0YXJlYSc7XG5leHBvcnQgKiBmcm9tICcuL01lZGlhVXBsb2FkJztcbmV4cG9ydCAqIGZyb20gJy4vUG9ydGFsJztcbmV4cG9ydCAqIGZyb20gJy4vSWNvbkJ1dHRvbic7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///9571\n")},3754:function(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(6540);\n// EXTERNAL MODULE: ./node_modules/react-dom/client.js\nvar client = __webpack_require__(5338);\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 11 modules\nvar es = __webpack_require__(7040);\n// EXTERNAL MODULE: ./app/src/store/store.js\nvar store = __webpack_require__(9457);\n// EXTERNAL MODULE: ./node_modules/react-router-dom/dist/index.js\nvar dist = __webpack_require__(4976);\n// EXTERNAL MODULE: ./app/src/lib/components/index.js\nvar components = __webpack_require__(9571);\n// EXTERNAL MODULE: ./app/src/lib/hooks/index.js + 4 modules\nvar hooks = __webpack_require__(1635);\n// EXTERNAL MODULE: ./app/src/store/slices/notice.js\nvar notice = __webpack_require__(9472);\n// EXTERNAL MODULE: ./app/src/helpers/api/index.js + 1 modules\nvar api = __webpack_require__(9331);\n// EXTERNAL MODULE: ./node_modules/@wordpress/i18n/build-module/index.js + 10 modules\nvar build_module = __webpack_require__(4214);\n// EXTERNAL MODULE: ./node_modules/react/jsx-runtime.js\nvar jsx_runtime = __webpack_require__(4848);\n;// CONCATENATED MODULE: ./app/src/pages/playlists/partials/SummaryBox/SummaryBox.js\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\n\nvar initialRecentState = (0,build_module.__)(\'Never\', \'wpmudev_vids\');\nfunction SummaryBox() {\n  var _useState = (0,react.useState)(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var _useState3 = (0,react.useState)(initialRecentState),\n    _useState4 = _slicedToArray(_useState3, 2),\n    recentlyUpdated = _useState4[0],\n    setRecentlyUpdated = _useState4[1];\n  var _useState5 = (0,react.useState)(initialRecentState),\n    _useState6 = _slicedToArray(_useState5, 2),\n    recentlyCreated = _useState6[0],\n    setRecentlyCreated = _useState6[1];\n\n  // on mount\n  (0,react.useEffect)(function () {\n    // Update summary stats\n    updateStats();\n  }, []);\n\n  /**\n   * Set the summary stats from the API response.\n   *\n   * @returns {void}\n   */\n  function setStats(data) {\n    var recent = data.recent;\n    var counts = data.count;\n\n    // Last updated playlist.\n    if (recent.updated_playlist.title) {\n      setRecentlyUpdated(recent.updated_playlist.title);\n    }\n\n    // Last created playlist.\n    if (recent.created_playlist.title) {\n      setRecentlyCreated(recent.created_playlist.title);\n    }\n\n    // Total playlist count.\n    if (counts.playlists) {\n      setCount(counts.playlists);\n    }\n  }\n\n  /**\n   * Update the summary stats using the API.\n   *\n   * @returns {void}\n   */\n  function updateStats() {\n    (0,api/* restGet */.B8)({\n      path: \'summary\'\n    }).then(function (response) {\n      if (response.success && response.data) {\n        setStats(response.data);\n      }\n    });\n  }\n\n  // Items\n  var listItems = [{\n    label: (0,build_module.__)(\'Recently created playlist\', \'wpmudev_vids\'),\n    details: recentlyCreated\n  }, {\n    label: (0,build_module.__)(\'Recently updated playlist\', \'wpmudev_vids\'),\n    details: recentlyUpdated\n  }];\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* WhiteLabelSummary */.iw, {\n    isSmall: true,\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* WhiteLabelSummary */.iw.Segment, {\n      children: /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* WhiteLabelSummary */.iw.Details, {\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n          className: "sui-summary-large",\n          children: count\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n          className: "sui-summary-sub",\n          children: (0,build_module.__)(\'Playlists\', \'wpmudev_vids\')\n        })]\n      })\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* WhiteLabelSummary */.iw.Segment, {\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* List */.B8, {\n        items: listItems\n      })\n    })]\n  });\n}\n/* harmony default export */ var SummaryBox_SummaryBox = ((/* unused pure expression or super */ null && (SummaryBox)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/partials/SummaryBox/index.js\n\n// EXTERNAL MODULE: ./node_modules/clipboard/dist/clipboard.js\nvar clipboard = __webpack_require__(7576);\nvar clipboard_default = /*#__PURE__*/__webpack_require__.n(clipboard);\n// EXTERNAL MODULE: ./app/src/components/index.js\nvar src_components = __webpack_require__(135);\n// EXTERNAL MODULE: ./app/src/store/slices/playlists.js\nvar slices_playlists = __webpack_require__(9317);\n// EXTERNAL MODULE: ./app/src/store/slices/videos.js\nvar slices_videos = __webpack_require__(4084);\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(5556);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n// EXTERNAL MODULE: ./node_modules/moment/moment.js\nvar moment = __webpack_require__(5093);\nvar moment_default = /*#__PURE__*/__webpack_require__.n(moment);\n// EXTERNAL MODULE: ./node_modules/classnames/index.js\nvar classnames = __webpack_require__(6942);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/PlaylistVideos/VideoRow.js\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction VideoRow_slicedToArray(r, e) { return VideoRow_arrayWithHoles(r) || VideoRow_iterableToArrayLimit(r, e) || VideoRow_unsupportedIterableToArray(r, e) || VideoRow_nonIterableRest(); }\nfunction VideoRow_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction VideoRow_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return VideoRow_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? VideoRow_arrayLikeToArray(r, a) : void 0; } }\nfunction VideoRow_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction VideoRow_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction VideoRow_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\n\n\n\nfunction VideoRow(_ref) {\n  var playlist = _ref.playlist,\n    video = _ref.video;\n  var dispatch = (0,es/* useDispatch */.wA)();\n  var _useState = (0,react.useState)(false),\n    _useState2 = VideoRow_slicedToArray(_useState, 2),\n    isDeleting = _useState2[0],\n    setIsDeleting = _useState2[1];\n  var _ref2 = playlist !== null && playlist !== void 0 ? playlist : {},\n    playlistID = _ref2.id;\n  var _ref3 = video !== null && video !== void 0 ? video : {},\n    videoID = _ref3.id,\n    video_slug = _ref3.video_slug,\n    video_title = _ref3.video_title,\n    thunmbnail = _ref3.thunmbnail,\n    date = _ref3.date,\n    video_type = _ref3.video_type;\n  var videoSelected = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* isVideoSelected */.V4)(state, {\n      videoID: videoID,\n      playlistID: playlistID\n    });\n  });\n\n  /**\n   * Get the video creation date as per the design.\n   *\n   * @returns {string}\n   */\n  var getDate = function getDate() {\n    // Only if date set.\n    if (date && \'\' !== date) {\n      var formattedDate = moment_default()(date);\n\n      // Format to human time.\n      return formattedDate.format(\'MMMM D/YYYY @ hh:mm A\');\n    } else {\n      return \'\';\n    }\n  };\n\n  /**\n   * Remove the deleted video from playlist and update playlists\n   *\n   * @return {void}\n   */\n  var removeFromPlaylist = function removeFromPlaylist() {\n    var newPlaylist = _objectSpread(_objectSpread({}, playlist), {}, {\n      videos: playlist.videos.filter(function (id) {\n        return id !== videoID;\n      })\n    });\n    dispatch((0,slices_playlists/* setPlaylist */.xu)({\n      playlist: newPlaylist\n    }));\n  };\n\n  /**\n   * Delete video\n   *\n   * @returns {void}\n   */\n  var deleteVideoFromPlaylist = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            setIsDeleting(true);\n            dispatch((0,slices_videos/* unAssignVideo */.oA)({\n              playlistID: playlistID,\n              videoID: videoID\n            })).then(function (response) {\n              var _response$payload;\n              if (response !== null && response !== void 0 && (_response$payload = response.payload) !== null && _response$payload !== void 0 && _response$payload.success) {\n                removeFromPlaylist();\n              }\n              setIsDeleting(false);\n            });\n          case 2:\n          case "end":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n    return function deleteVideoFromPlaylist() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var deleteButtonClasses = classnames_default()({\n    \'sui-button-icon\': true,\n    \'sui-tooltip\': true,\n    \'sui-tooltip-top-right\': true,\n    \'sui-button-onload\': isDeleting\n  });\n\n  /**\n   * Update selected videos list\n   *\n   * @return {void}\n   */\n  var updateVideoSelection = function updateVideoSelection() {\n    dispatch((0,slices_playlists/* toggleVideo */.WM)({\n      videoID: videoID,\n      playlistID: playlistID\n    }));\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Table */.XI.Tr, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Td, {\n      className: "sui-table-item-title",\n      children: /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n        className: "wpmudev-videos-table--title",\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Checkbox */.Sc, {\n          checked: videoSelected,\n          onChange: updateVideoSelection,\n          label: false,\n          id: "wpmudev-playlists-".concat(playlistID, "-videos-item-").concat(videoID)\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* ListThumb */.Bt, {\n          url: thunmbnail === null || thunmbnail === void 0 ? void 0 : thunmbnail.url,\n          icon: video_slug,\n          className: "playlist-video-thumb",\n          isCustom: \'custom\' === video_type\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n          children: video_title\n        })]\n      })\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Td, {\n      className: "wpmudev-videos-table--date",\n      children: getDate()\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Td, {\n      className: "wpmudev-videos-table--actions",\n      children: /*#__PURE__*/(0,jsx_runtime.jsxs)("button", {\n        type: "button",\n        role: "button",\n        className: deleteButtonClasses,\n        "data-tooltip": (0,build_module.__)(\'Remove video from playlist\', \'wpmudev_vids\'),\n        onClick: deleteVideoFromPlaylist,\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n          className: "sui-loading-text",\n          "aria-hidden": "true",\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n            icon: "trash"\n          })\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n          icon: "loader",\n          className: "sui-loading"\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n          className: "sui-screen-reader-text",\n          children: (0,build_module.__)(\'Delete\', \'wpmudev_vids\')\n        })]\n      })\n    })]\n  });\n}\nVideoRow.propTypes = {\n  video: (prop_types_default()).object,\n  playlist: (prop_types_default()).object\n};\n/* harmony default export */ var PlaylistVideos_VideoRow = ((/* unused pure expression or super */ null && (VideoRow)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/PlaylistVideos/PlaylistVideos.js\n/**\n * Library dependencies\n */\n\n\n\n/**\n * Internal dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\n\n\nfunction PlaylistVideos(_ref) {\n  var playlist = _ref.playlist,\n    setCurrentPlaylist = _ref.setCurrentPlaylist,\n    openVideosModal = _ref.openVideosModal;\n  var ids = playlist.videos;\n  var videos = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_videos/* getVideos */.fY)(state, ids);\n  });\n  var hasVideos = !!videos && videos.length > 0;\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az, {\n    children: /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Table */.XI, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Thead, {\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Table */.XI.Tr, {\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Th, {\n            className: "sui-table-item-title",\n            children: (0,build_module.__)(\'Video title\', \'wpmudev_vids\')\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Th, {\n            className: "wpmudev-videos-table--date",\n            children: (0,build_module.__)(\'Date added\', \'wpmudev_vids\')\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Th, {\n            className: "wpmudev-videos-table--actions",\n            children: /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n              className: "sui-screen-reader-text",\n              children: (0,build_module.__)(\'Row actions\', \'wpmudev_vids\')\n            })\n          })]\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Tbody, {\n        children: hasVideos ? videos.map(function (video) {\n          return /*#__PURE__*/(0,jsx_runtime.jsx)(VideoRow, {\n            playlist: playlist,\n            video: video\n          }, video.id);\n        }) : /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Tr, {\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Td, {\n            colSpan: "3",\n            children: (0,build_module.__)(\'No videos assigned.\', \'wpmudev_vids\')\n          })\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Tfoot, {\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Tr, {\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Td, {\n            children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n              onClick: function onClick() {\n                setCurrentPlaylist(playlist);\n                openVideosModal();\n              },\n              color: "blue",\n              icon: "plus",\n              children: (0,build_module.__)(\'Add Video\', \'wpmudev_vids\')\n            })\n          })\n        })\n      })]\n    })\n  });\n}\nPlaylistVideos.defaultProps = {\n  playlist: {},\n  openVisibilityModal: function openVisibilityModal() {\n    return null;\n  },\n  setCurrentPlaylist: function setCurrentPlaylist() {\n    return null;\n  }\n};\nPlaylistVideos.propTypes = {\n  playlist: (prop_types_default()).object,\n  openVisibilityModal: (prop_types_default()).func,\n  setCurrentPlaylist: (prop_types_default()).func\n};\n/* harmony default export */ var PlaylistVideos_PlaylistVideos = ((/* unused pure expression or super */ null && (PlaylistVideos)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/PlaylistVideos/index.js\n\n\n// EXTERNAL MODULE: ./node_modules/interweave/esm/index.js\nvar esm = __webpack_require__(5013);\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/UpgradeNotice/UpgradeNotice.js\n/**\n * Library dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\n\n/* When membership is not valid for videos */\n\nfunction UpgradeNotice() {\n  var videos = window.ivtVars.urls.videos;\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* StaticNotice */.RL, {\n    type: "purple",\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      children: (0,build_module.__)("You don\'t have any custom videos available to add to this playlist. You can unlock WPMU DEV white-labeled video tutorials by activating a full membership. Click the button below for more information on the WPMU DEV pricing structure.", \'wpmudev_vids\')\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      style: {\n        display: \'none\'\n      },\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(esm/* Interweave */.BW, {\n        content: (0,build_module/* sprintf */.nv)((0,build_module.__)(\'<strong>Note:</strong> You can still <a href="%s">create and add custom videos</a> to this playlist.\', \'wmpudev_vids\'), videos)\n      })\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)("a", {\n        href: "https://wpmudev.com/project/unbranded-video-tutorials/?utm_source=integrated_video_tutorials&utm_medium=plugin&utm_campaign=integrated_video_tutorials_notice_upgrade",\n        target: "_blank",\n        className: "sui-button sui-button-purple",\n        children: (0,build_module.__)(\'Get Full Membership\', \'wpmudev_vids\')\n      })\n    })]\n  });\n}\n/* harmony default export */ var UpgradeNotice_UpgradeNotice = ((/* unused pure expression or super */ null && (UpgradeNotice)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/UpgradeNotice/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/ExpiredNotice/ExpiredNotice.js\n/**\n * Library dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\n\n/* When no custom videos are found and Dash plugin is inactive */\n\nfunction ExpiredNotice() {\n  var videos = window.ivtVars.urls.videos;\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* StaticNotice */.RL, {\n    type: "purple",\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(esm/* Interweave */.BW, {\n        content: sprintf((0,build_module.__)("WPMU DEV Videos are locked. To continue displaying WPMU DEV\'s white label tutorial videos to your customers, renew your membership today.", \'wmpudev_vids\'), videos)\n      })\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)("a", {\n        href: "https://wpmudev.com/?utm_source=integrated_video_tutorials&utm_medium=plugin&utm_campaign=integrated_video_tutorials_notice_renew",\n        target: "_blank",\n        className: "sui-button sui-button-purple",\n        children: (0,build_module.__)(\'Renew Membership\', \'wpmudev_vids\')\n      })\n    })]\n  });\n}\n/* harmony default export */ var ExpiredNotice_ExpiredNotice = ((/* unused pure expression or super */ null && (ExpiredNotice)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/ExpiredNotice/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/RenewNotice/RenewNotice.js\n/**\n * Library dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\n\n/* When membership is not valid for videos */\n\nfunction RenewNotice() {\n  var videos = window.ivtVars.urls.videos;\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* StaticNotice */.RL, {\n    type: "purple",\n    children: [/*#__PURE__*/(0,jsx_runtime.jsxs)("p", {\n      children: [(0,build_module.__)("You don\'t have any custom videos available to add to this playlist. To unlock WPMU DEV tutorial videos you\'ll need to renew your membership. ", \'wpmudev_vids\'), /*#__PURE__*/(0,jsx_runtime.jsx)(esm/* Interweave */.BW, {\n        content: (0,build_module/* sprintf */.nv)((0,build_module.__)(\'Note: You can still <a href="%s">create and add custom videos</a> to this playlist.\', \'wmpudev_vids\'), videos)\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)("a", {\n        href: "https://wpmudev.com/project/unbranded-video-tutorials/?utm_source=integrated_video_tutorials&utm_medium=plugin&utm_campaign=integrated_video_tutorials_notice_upgrade",\n        target: "_blank",\n        className: "sui-button sui-button-purple",\n        children: (0,build_module.__)(\'Renew Membership\', \'wpmudev_vids\')\n      })\n    })]\n  });\n}\n/* harmony default export */ var RenewNotice_RenewNotice = ((/* unused pure expression or super */ null && (RenewNotice)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/RenewNotice/index.js\n\n// EXTERNAL MODULE: ./app/src/helpers/utils/utils.js\nvar utils = __webpack_require__(7755);\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/DashNotice/DashNotice.js\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\nfunction DashNotice() {\n  var _window$ivtVars;\n  // Global Variables\n  var _ref = (_window$ivtVars = window.ivtVars) !== null && _window$ivtVars !== void 0 ? _window$ivtVars : {},\n    _ref$urls = _ref.urls,\n    dash_install = _ref$urls.dash_install,\n    plugins = _ref$urls.plugins,\n    dash_login = _ref$urls.dash_login,\n    videos = _ref$urls.videos;\n\n  /**\n   * Get labels and links for the notice.\n   *\n   * Based on the status of WPMUDEV Dash plugin status,\n   * set the labels and links for the notice.\n   *\n   * @return {*}\n   */\n  function getLabels() {\n    if (!(0,utils/* dashInstalled */.v9)()) {\n      return {\n        desc: (0,build_module.__)(\'WPMU DEV videos are locked, and you only have access to custom videos because the WPMU DEV Dashboard plugin is not installed. Install and log into the WPMU DEV dashboard plugin to unlock the complete library of WPMU DEV video tutorials.\', \'wpmudev_vids\'),\n        button: (0,build_module.__)(\'Install Plugin\', \'wpmudev_vids\'),\n        link: dash_install,\n        target: \'_blank\'\n      };\n    } else if (!(0,utils/* dashActive */.n4)()) {\n      return {\n        desc: (0,build_module.__)(\'WPMU DEV videos are locked, and you only have access to custom videos because the WPMU DEV Dashboard plugin is not active. Activate the WPMU DEV dashboard plugin to unlock the complete library of WPMU DEV video tutorials.\', \'wpmudev_vids\'),\n        button: (0,build_module.__)(\'Activate Plugin\', \'wpmudev_vids\'),\n        link: plugins,\n        target: \'_self\'\n      };\n    } else {\n      return {\n        desc: (0,build_module.__)(\'WPMU DEV videos are locked and you only have access to custom videos in Video Tutorials page. Log into the plugin to begin setting up your video tutorials.\', \'wpmudev_vids\'),\n        button: (0,build_module.__)(\'Login\', \'wpmudev_vids\'),\n        link: dash_login,\n        target: \'_self\'\n      };\n    }\n  }\n  var labels = getLabels();\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* StaticNotice */.RL, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      children: labels.desc\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)("a", {\n        className: "sui-button sui-button-blue",\n        target: labels.target,\n        href: labels.link,\n        children: labels.button\n      })\n    })]\n  });\n}\n/* harmony default export */ var DashNotice_DashNotice = ((/* unused pure expression or super */ null && (DashNotice)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/DashNotice/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/VideoSearchInput/VideoSearchInput.js\nfunction VideoSearchInput_slicedToArray(r, e) { return VideoSearchInput_arrayWithHoles(r) || VideoSearchInput_iterableToArrayLimit(r, e) || VideoSearchInput_unsupportedIterableToArray(r, e) || VideoSearchInput_nonIterableRest(); }\nfunction VideoSearchInput_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction VideoSearchInput_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return VideoSearchInput_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? VideoSearchInput_arrayLikeToArray(r, a) : void 0; } }\nfunction VideoSearchInput_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction VideoSearchInput_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction VideoSearchInput_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n\n/**\n * Internal dependencies\n */\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\n\nfunction VideoSearchInput(_ref) {\n  var id = _ref.id;\n  var dispatch = (0,es/* useDispatch */.wA)();\n  var _useState = (0,react.useState)(\'\'),\n    _useState2 = VideoSearchInput_slicedToArray(_useState, 2),\n    search = _useState2[0],\n    setSearch = _useState2[1];\n  var _useDebouncedValue = (0,hooks/* useDebouncedValue */.o)({\n      value: search,\n      delay: 300\n    }),\n    _useDebouncedValue2 = VideoSearchInput_slicedToArray(_useDebouncedValue, 2),\n    debouncedSearch = _useDebouncedValue2[0],\n    setDebouncedSearch = _useDebouncedValue2[1];\n  (0,react.useEffect)(function () {\n    searchVideos();\n  }, [debouncedSearch]);\n  var updateSearch = function updateSearch(value) {\n    // Update search value\n    setSearch(value);\n\n    // Update debounced value\n    setDebouncedSearch(value);\n  };\n\n  /**\n   * Search the videos and filter.\n   *\n   * Get the video ids using the search term\n   * and sync back to parent.\n   *\n   */\n  var searchVideos = function searchVideos() {\n    (0,api/* restGet */.B8)({\n      path: \'videos\',\n      params: {\n        search: search,\n        field: \'ids\'\n      }\n    }).then(function (response) {\n      if (response.success && response.data) {\n        // Update the filtered ids.\n        dispatch((0,slices_videos/* setFiltered */.kZ)({\n          ids: response.data\n        }));\n      }\n    });\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Input */.pd, {\n    icon: "magnifying-glass-search",\n    value: search,\n    onChange: updateSearch,\n    placeholder: (0,build_module.__)(\'Search videos\', \'wpmudev_videos\'),\n    id: id\n  });\n}\nVideoSearchInput.propTypes = {\n  id: \'id\'\n};\nVideoSearchInput.propTypes = {\n  id: (prop_types_default()).string\n};\n/* harmony default export */ var VideoSearchInput_VideoSearchInput = ((/* unused pure expression or super */ null && (VideoSearchInput)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/VideoSearchInput/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/VideosList/VideosList.js\nfunction VideosList_slicedToArray(r, e) { return VideosList_arrayWithHoles(r) || VideosList_iterableToArrayLimit(r, e) || VideosList_unsupportedIterableToArray(r, e) || VideosList_nonIterableRest(); }\nfunction VideosList_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction VideosList_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return VideosList_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? VideosList_arrayLikeToArray(r, a) : void 0; } }\nfunction VideosList_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction VideosList_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction VideosList_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\n\nfunction VideosList(_ref) {\n  var playlist = _ref.playlist,\n    setVideoCount = _ref.setVideoCount,\n    setCurrentPlaylist = _ref.setCurrentPlaylist;\n  // list of added videos to the playlist\n  var _ref2 = playlist !== null && playlist !== void 0 ? playlist : {},\n    videos = _ref2.videos;\n\n  // Number of videos added\n  var _ref3 = videos !== null && videos !== void 0 ? videos : [],\n    length = _ref3.length;\n\n  // Displayed count\n  var _useState = (0,react.useState)(0),\n    _useState2 = VideosList_slicedToArray(_useState, 2),\n    displayedCount = _useState2[0],\n    setDisplayedCount = _useState2[1];\n\n  // Filtered Videos Ids\n  var filteredIds = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_videos/* getFilteredIds */.Q6)(state);\n  });\n\n  // Videos objects list\n  var filteredVideos = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_videos/* getVideos */.fY)(state, filteredIds);\n  });\n\n  // Videos Provided for members\n  var defaultVideos = filteredVideos.filter(function (video) {\n    return video.video_type === \'default\';\n  });\n\n  // Custom videos added by admin\n  var customVideos = filteredVideos.filter(function (video) {\n    return video.video_type !== \'default\';\n  });\n\n  // Update displayed count\n  (0,react.useEffect)(function () {\n    var count = length;\n    if (!showDefaultVideos()) {\n      // Videos without defaultVideos\n      var displayedVideos = videos === null || videos === void 0 ? void 0 : videos.filter(function (item) {\n        return !defaultVideos.some(function (obj) {\n          return obj.id === item;\n        });\n      });\n\n      // Count without default videos\n      count = displayedVideos === null || displayedVideos === void 0 ? void 0 : displayedVideos.length;\n      setDisplayedCount(count);\n    } else {\n      setDisplayedCount(count);\n    }\n  }, [videos]);\n\n  // Update videos count variable\n  (0,react.useEffect)(function () {\n    var count = 0;\n    if (showDefaultVideos()) {\n      var _videos$default, _videos$custom;\n      count = (videos === null || videos === void 0 || (_videos$default = videos.default) === null || _videos$default === void 0 ? void 0 : _videos$default.length) + (videos === null || videos === void 0 || (_videos$custom = videos.custom) === null || _videos$custom === void 0 ? void 0 : _videos$custom.length);\n      setVideoCount(count);\n    } else {\n      var _videos$custom2;\n      count = videos === null || videos === void 0 || (_videos$custom2 = videos.custom) === null || _videos$custom2 === void 0 ? void 0 : _videos$custom2.length;\n      setVideoCount(count);\n    }\n  }, [defaultVideos, customVideos]);\n\n  /**\n   * Check if current membership is valid.\n   *\n   * Default videos are available only if current\n   * membership is valid.\n   *\n   * @return {boolean}\n   */\n  var showDefaultVideos = function showDefaultVideos() {\n    return (0,utils/* validMember */.xH)() && (0,utils/* dashConnected */.YT)();\n  };\n\n  /**\n   * Check if videos are not empty.\n   *\n   * @since 1.8.2\n   *\n   * @return {boolean}\n   */\n  var videosAvailable = function videosAvailable() {\n    return defaultVideos.length && showDefaultVideos() || customVideos.length;\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n    children: videosAvailable() ? /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Table */.XI, {\n      isFlushed: true,\n      className: "wpmudev-videos-table-videos",\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Thead, {\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Table */.XI.Tr, {\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Th, {\n            className: "wpmudev-videos-table-videos--cell-left",\n            children: (0,build_module.__)(\'Videos\', \'wpmudev_vids\')\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Th, {\n            className: "wpmudev-videos-table-videos--cell-right",\n            "aria-live": "assertive",\n            children: (0,build_module/* sprintf */.nv)((0,build_module.__)(\'%s videos selected\', \'wpmudev_vids\'), displayedCount)\n          })]\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Table */.XI.Tbody, {\n        children: [customVideos.map(function (video) {\n          return /*#__PURE__*/(0,jsx_runtime.jsx)(VideoListRow, {\n            playlist: playlist,\n            video: video,\n            setCurrentPlaylist: setCurrentPlaylist\n          }, video.id);\n        }), showDefaultVideos() && defaultVideos.map(function (video) {\n          return /*#__PURE__*/(0,jsx_runtime.jsx)(VideoListRow, {\n            playlist: playlist,\n            video: video,\n            setCurrentPlaylist: setCurrentPlaylist\n          }, video.id);\n        })]\n      })]\n    }) :\n    // Display Nothing if there\'re no videos\n    \'\'\n  });\n}\nVideosList.defaultProps = {\n  playlist: {},\n  setVideoCount: function setVideoCount() {\n    return null;\n  },\n  setCurrentPlaylist: function setCurrentPlaylist() {\n    return null;\n  }\n};\nVideosList.propTypes = {\n  playlist: (prop_types_default()).object,\n  setVideoCount: (prop_types_default()).func,\n  setCurrentPlaylist: (prop_types_default()).func\n};\n/* harmony default export */ var VideosList_VideosList = ((/* unused pure expression or super */ null && (VideosList)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/VideosList/VideoListRow.js\nfunction VideoListRow_typeof(o) { "@babel/helpers - typeof"; return VideoListRow_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, VideoListRow_typeof(o); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || VideoListRow_unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return VideoListRow_arrayLikeToArray(r); }\nfunction VideoListRow_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction VideoListRow_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? VideoListRow_ownKeys(Object(t), !0).forEach(function (r) { VideoListRow_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : VideoListRow_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction VideoListRow_defineProperty(e, r, t) { return (r = VideoListRow_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction VideoListRow_toPropertyKey(t) { var i = VideoListRow_toPrimitive(t, "string"); return "symbol" == VideoListRow_typeof(i) ? i : i + ""; }\nfunction VideoListRow_toPrimitive(t, r) { if ("object" != VideoListRow_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != VideoListRow_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction VideoListRow_slicedToArray(r, e) { return VideoListRow_arrayWithHoles(r) || VideoListRow_iterableToArrayLimit(r, e) || VideoListRow_unsupportedIterableToArray(r, e) || VideoListRow_nonIterableRest(); }\nfunction VideoListRow_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction VideoListRow_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return VideoListRow_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? VideoListRow_arrayLikeToArray(r, a) : void 0; } }\nfunction VideoListRow_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction VideoListRow_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction VideoListRow_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\n\nfunction VideoListRow(_ref) {\n  var video = _ref.video,\n    playlist = _ref.playlist,\n    setCurrentPlaylist = _ref.setCurrentPlaylist;\n  var _useState = (0,react.useState)(false),\n    _useState2 = VideoListRow_slicedToArray(_useState, 2),\n    buttonIsHovered = _useState2[0],\n    setButtonIsHovered = _useState2[1];\n  var _ref2 = playlist !== null && playlist !== void 0 ? playlist : {},\n    videos = _ref2.videos;\n  var _ref3 = video !== null && video !== void 0 ? video : {},\n    id = _ref3.id,\n    video_slug = _ref3.video_slug,\n    thumbnail = _ref3.thumbnail,\n    video_title = _ref3.video_title,\n    video_type = _ref3.video_type;\n  var _ref4 = thumbnail !== null && thumbnail !== void 0 ? thumbnail : {},\n    url = _ref4.url;\n\n  /**\n   * Check if the current video is already added.\n   *\n   * @returns {boolean}\n   */\n  var isAdded = function isAdded() {\n    return videos === null || videos === void 0 ? void 0 : videos.includes(id);\n  };\n\n  /**\n   * Remove a video from the playlist.\n   *\n   * @returns {void}\n   */\n  var removeVideo = function removeVideo() {\n    var newPlaylist = VideoListRow_objectSpread(VideoListRow_objectSpread({}, playlist), {}, {\n      videos: videos.filter(function (id) {\n        return id !== video.id;\n      })\n    });\n    setCurrentPlaylist(newPlaylist);\n  };\n\n  /**\n   * Adds the video to the playlist\n   *\n   * @returns {void}\n   */\n  var addVideo = function addVideo() {\n    var newPlaylist = VideoListRow_objectSpread({}, playlist);\n    if (!(videos !== null && videos !== void 0 && videos.includes(video === null || video === void 0 ? void 0 : video.id))) {\n      newPlaylist[\'videos\'] = [].concat(_toConsumableArray(videos), [video === null || video === void 0 ? void 0 : video.id]);\n    }\n    setCurrentPlaylist(newPlaylist);\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Table */.XI.Tr, {\n    "aria-live": "polite",\n    children: [/*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Table */.XI.Td, {\n      className: "wpmudev-videos-table-videos--cell-left sui-table-item-title",\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* ListThumb */.Bt, {\n        url: url,\n        icon: video_slug,\n        className: "playlist-video-thumb-wide",\n        isCustom: \'custom\' === video_type\n      }), video_title]\n    }), isAdded() && /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Table */.XI.Td, {\n      className: "wpmudev-videos-table-videos--cell-right wpmudev-videos-table-videos--show-mobiles",\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n        disabled: true,\n        icon: "check",\n        children: (0,build_module.__)(\'Added\', \'wpmudev_vids\')\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n        icon: "trash",\n        color: "red",\n        type: "ghost",\n        onClick: removeVideo,\n        children: (0,build_module.__)(\'Remove\', \'wpmudev_vids\')\n      })]\n    }), isAdded() && /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Table */.XI.Td, {\n      className: "wpmudev-videos-table-videos--cell-right wpmudev-videos-table-videos--show-desktop",\n      children: [buttonIsHovered && /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n        onMouseLeave: function onMouseLeave() {\n          return setButtonIsHovered(false);\n        },\n        color: "red",\n        icon: "trash",\n        onClick: removeVideo,\n        children: (0,build_module.__)(\'Remove\', \'wpmudev_vids\')\n      }), !buttonIsHovered && /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n        onMouseEnter: function onMouseEnter() {\n          return setButtonIsHovered(true);\n        },\n        icon: "check",\n        children: (0,build_module.__)(\'Added\', \'wpmudev_vids\')\n      })]\n    }), !isAdded() && /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Table */.XI.Td, {\n      className: "wpmudev-videos-table-videos--cell-right",\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n        onClick: addVideo,\n        icon: "plus",\n        type: "ghost",\n        children: (0,build_module.__)(\'Add\', \'wpmudev_vids\')\n      })\n    })]\n  });\n}\n/* harmony default export */ var VideosList_VideoListRow = ((/* unused pure expression or super */ null && (VideoListRow)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/VideosList/index.js\n\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/PlaylistTitle/PlaylistTitle.js\n/**\n * Library depenedencies\n */\n\n\n/**\n * External dependencies\n */\n\n\n\nfunction PlaylistTitle(_ref) {\n  var modalID = _ref.modalID,\n    title = _ref.title,\n    onChange = _ref.onChange;\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n    className: "sui-form-field",\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Label */.JU, {\n      id: "".concat(modalID, "-playlist-title-label"),\n      htmlFor: "".concat(modalID, "-playlist-title"),\n      children: (0,build_module.__)(\'Playlist name\', \'wpmudev_vids\')\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Input */.pd, {\n      placeholder: (0,build_module.__)(\'E.g. New playlist\', \'wpmudev_vids\'),\n      id: "".concat(modalID, "-playlist-title"),\n      value: title,\n      onChange: onChange\n    })]\n  });\n}\nPlaylistTitle.defaultProps = {\n  modalID: \'modal-id\',\n  title: \'Title\',\n  onChange: function onChange() {\n    return null;\n  }\n};\nPlaylistTitle.propTypes = {\n  modalID: (prop_types_default()).string,\n  title: (prop_types_default()).string,\n  onChange: (prop_types_default()).func\n};\n/* harmony default export */ var PlaylistTitle_PlaylistTitle = ((/* unused pure expression or super */ null && (PlaylistTitle)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/PlaylistTitle/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/PlaylistDesc/PlaylistDesc.js\n/**\n * Library dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\n\nfunction PlaylistDesc(_ref) {\n  var modalID = _ref.modalID,\n    onChange = _ref.onChange,\n    description = _ref.description;\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n    className: "sui-form-field",\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Label */.JU, {\n      htmlFor: "".concat(modalID, "-playlist-desc"),\n      id: "".concat(modalID, "-playlist-desc-label"),\n      children: (0,build_module.__)(\'Playlist description\', \'wpmudev_vids\')\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Textarea */.TM, {\n      id: "".concat(modalID, "-playlist-desc"),\n      "aria-labelledby": "".concat(modalID, "-playlist-desc-label"),\n      "aria-describedby": "".concat(modalID, "-playlist-desc-desc"),\n      value: description,\n      onChange: onChange\n    })]\n  });\n}\nPlaylistDesc.defaultProps = {\n  modalID: \'modal-id\',\n  description: \'description\',\n  onChange: function onChange() {\n    return null;\n  }\n};\nPlaylistDesc.propTypes = {\n  modalID: (prop_types_default()).string,\n  description: (prop_types_default()).string,\n  onChange: (prop_types_default()).func\n};\n/* harmony default export */ var PlaylistDesc_PlaylistDesc = ((/* unused pure expression or super */ null && (PlaylistDesc)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/PlaylistDesc/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/DropDown/DropDown.js\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\n\n\nfunction DropDown(_ref) {\n  var openEditModal = _ref.openEditModal,\n    openVisibilityModal = _ref.openVisibilityModal,\n    setCurrentPlaylist = _ref.setCurrentPlaylist,\n    openVideosModal = _ref.openVideosModal,\n    openDeleteModal = _ref.openDeleteModal,\n    playlist = _ref.playlist;\n  var dispatch = (0,es/* useDispatch */.wA)();\n  var isCustom = \'custom\' === playlist.playlist_type;\n\n  /**\n   * Displays a notice that shortcode was copied successfully\n   *\n   * @return {void}\n   */\n  var displayCopyNotice = function displayCopyNotice() {\n    dispatch((0,notice/* addNotice */.Mp)({\n      message: (0,build_module.__)(\'Shortcode has been copied successfully.\', \'wpmudev_vids\')\n    }));\n  };\n\n  // Playlist shortcode\n  var shortcode = "[wpmudev-video group=\\"".concat(playlist.slug, "\\"]");\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(jsx_runtime.Fragment, {\n    children: /*#__PURE__*/(0,jsx_runtime.jsxs)("ul", {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)("button", {\n          onClick: function onClick() {\n            setCurrentPlaylist(playlist);\n            openEditModal();\n          },\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n            icon: "pencil"\n          }), (0,build_module.__)(\'Edit\', \'wpmudev_vids\')]\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)("button", {\n          onClick: function onClick() {\n            setCurrentPlaylist(playlist);\n            openVideosModal();\n          },\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n            icon: "align-justify"\n          }), (0,build_module.__)(\'Add videos\', \'wpmudev_vids\')]\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)("button", {\n          onClick: function onClick() {\n            setCurrentPlaylist(playlist);\n            openVisibilityModal();\n          },\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n            icon: "widget-settings-config"\n          }), (0,build_module.__)(\'Visibility settings\', \'wpmudev_vids\')]\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)("button", {\n          className: "ivt-copy-shortcode",\n          onClick: displayCopyNotice,\n          "data-clipboard-text": shortcode,\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n            icon: "code"\n          }), (0,build_module.__)(\'Copy shortcode\', \'wpmudev_vids\')]\n        })\n      }), isCustom && /*#__PURE__*/(0,jsx_runtime.jsx)("li", {\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)("button", {\n          onClick: function onClick() {\n            setCurrentPlaylist(playlist);\n            openDeleteModal();\n          },\n          className: "wpmudev-videos-red",\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n            icon: "trash"\n          }), (0,build_module.__)(\'Delete\', \'wpmudev_vids\')]\n        })\n      })]\n    })\n  });\n}\nDropDown.defaultProps = {\n  openEditModal: function openEditModal() {\n    return null;\n  },\n  openVisibilityModal: function openVisibilityModal() {\n    return null;\n  },\n  setCurrentPlaylist: function setCurrentPlaylist() {\n    return null;\n  },\n  openVideosModal: function openVideosModal() {\n    return null;\n  },\n  openDeleteModal: function openDeleteModal() {\n    return null;\n  },\n  playlist: {}\n};\nDropDown.propTypes = {\n  openEditModal: (prop_types_default()).func,\n  openVisibilityModal: (prop_types_default()).func,\n  setCurrentPlaylist: (prop_types_default()).func,\n  openVideosModal: (prop_types_default()).func,\n  openDeleteModal: (prop_types_default()).func,\n  playlist: (prop_types_default()).object\n};\n/* harmony default export */ var DropDown_DropDown = ((/* unused pure expression or super */ null && (DropDown)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/DropDown/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/components/index.js\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/partials/Playlists/PlaylistItem.js\nfunction PlaylistItem_slicedToArray(r, e) { return PlaylistItem_arrayWithHoles(r) || PlaylistItem_iterableToArrayLimit(r, e) || PlaylistItem_unsupportedIterableToArray(r, e) || PlaylistItem_nonIterableRest(); }\nfunction PlaylistItem_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction PlaylistItem_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return PlaylistItem_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? PlaylistItem_arrayLikeToArray(r, a) : void 0; } }\nfunction PlaylistItem_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction PlaylistItem_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction PlaylistItem_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\n\nfunction PlaylistItem(_ref) {\n  var playlist = _ref.playlist,\n    openEditModal = _ref.openEditModal,\n    setCurrentPlaylist = _ref.setCurrentPlaylist,\n    openVisibilityModal = _ref.openVisibilityModal,\n    openVideosModal = _ref.openVideosModal,\n    openDeleteModal = _ref.openDeleteModal;\n  var id = playlist.id,\n    title = playlist.title,\n    description = playlist.description,\n    thumbnail = playlist.thumbnail;\n  var dispatch = (0,es/* useDispatch */.wA)();\n  var playlistSelected = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* isPlaylistSelected */.ko)(state, id);\n  });\n  var _useState = (0,react.useState)(),\n    _useState2 = PlaylistItem_slicedToArray(_useState, 2),\n    checkboxPortal = _useState2[0],\n    setCheckboxPortal = _useState2[1];\n  var portalRef = (0,react.useRef)();\n\n  /**\n   * Select or deselect a playlist\n   *\n   * @return {void}\n   */\n  var updatePlaylistSelection = function updatePlaylistSelection(val) {\n    dispatch((0,slices_playlists/* togglePlaylist */.fk)({\n      id: id,\n      checked: val\n    }));\n  };\n  (0,react.useEffect)(function () {\n    setCheckboxPortal(portalRef.current);\n  }, [portalRef]);\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Portal */.ZL, {\n      container: checkboxPortal,\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Checkbox */.Sc, {\n        label: false,\n        checked: playlistSelected,\n        onChange: updatePlaylistSelection,\n        id: "wpmudev-playlists-item-".concat(id)\n      })\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Accordion */.nD.Item, {\n      className: "wpmudev-videos-accordion",\n      id: "wpmudev-videos-playlist-item-".concat(id),\n      "data-id": id,\n      children: [/*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Accordion */.nD.Header, {\n        children: [/*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Accordion */.nD.Title, {\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n            className: "sui-icon-drag sui-md sortable",\n            "aria-hidden": "true"\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n            ref: portalRef\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* ListThumb */.Bt, {\n            url: thumbnail === null || thumbnail === void 0 ? void 0 : thumbnail.url,\n            className: "playlist-thumb",\n            hideIcon: true\n          }), title]\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Accordion */.nD.Date, {\n          children: description\n        }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Accordion */.nD.AutoCol, {\n          children: [/*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n            className: "sui-dropdown sui-accordion-item-action",\n            children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* IconButton */.K0, {\n              className: "sui-dropdown-anchor",\n              icon: "widget-settings-config",\n              outlined: false\n            }), /*#__PURE__*/(0,jsx_runtime.jsx)(DropDown, {\n              playlist: playlist,\n              openEditModal: openEditModal,\n              openVisibilityModal: openVisibilityModal,\n              setCurrentPlaylist: setCurrentPlaylist,\n              openVideosModal: openVideosModal,\n              openDeleteModal: openDeleteModal\n            })]\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* IconButton */.K0, {\n            className: "sui-accordion-open-indicator",\n            icon: "chevron-down",\n            "aria-label": (0,build_module.__)(\'Open Item\', \'wpmudev_vids\'),\n            label: (0,build_module.__)(\'Open Item\', \'wpmudev_vids\'),\n            outlined: false\n          })]\n        })]\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Accordion */.nD.Body, {\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)(PlaylistVideos, {\n          openVideosModal: openVideosModal,\n          setCurrentPlaylist: setCurrentPlaylist,\n          playlist: playlist\n        })\n      })]\n    })]\n  });\n}\nPlaylistItem.defaultProps = {\n  playlist: {},\n  editModalID: \'\',\n  openEditModal: function openEditModal() {\n    return null;\n  },\n  closeEditModal: function closeEditModal() {\n    return null;\n  },\n  openDeleteModal: function openDeleteModal() {\n    return null;\n  },\n  setCurrentPlaylist: function setCurrentPlaylist() {\n    return null;\n  }\n};\nPlaylistItem.propTypes = {\n  playlist: (prop_types_default()).object,\n  editModalID: (prop_types_default()).string,\n  openEditModal: (prop_types_default()).func,\n  closeEditModal: (prop_types_default()).func,\n  openDeleteModal: (prop_types_default()).func,\n  setCurrentPlaylist: (prop_types_default()).func\n};\n/* harmony default export */ var Playlists_PlaylistItem = (/*#__PURE__*/(/* unused pure expression or super */ null && (React.memo(PlaylistItem))));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/modals/EditPlaylist.js\nfunction EditPlaylist_typeof(o) { "@babel/helpers - typeof"; return EditPlaylist_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, EditPlaylist_typeof(o); }\nfunction EditPlaylist_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction EditPlaylist_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? EditPlaylist_ownKeys(Object(t), !0).forEach(function (r) { EditPlaylist_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : EditPlaylist_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction EditPlaylist_defineProperty(e, r, t) { return (r = EditPlaylist_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction EditPlaylist_toPropertyKey(t) { var i = EditPlaylist_toPrimitive(t, "string"); return "symbol" == EditPlaylist_typeof(i) ? i : i + ""; }\nfunction EditPlaylist_toPrimitive(t, r) { if ("object" != EditPlaylist_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != EditPlaylist_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\nfunction EditPlaylist(_ref) {\n  var playlist = _ref.playlist,\n    modalID = _ref.modalID,\n    closeModal = _ref.closeModal,\n    setCurrentPlaylist = _ref.setCurrentPlaylist;\n  var dispatch = (0,es/* useDispatch */.wA)();\n  var isSaving = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* getLoadingStatus */.H)(state);\n  });\n  var _ref2 = playlist !== null && playlist !== void 0 ? playlist : {},\n    title = _ref2.title,\n    description = _ref2.description,\n    thumbnail = _ref2.thumbnail;\n\n  /**\n   * Updates playlist title\n   *\n   * @return {void}\n   */\n  var updatePlaylistTitle = function updatePlaylistTitle(value) {\n    setCurrentPlaylist(EditPlaylist_objectSpread(EditPlaylist_objectSpread({}, playlist), {}, {\n      title: value\n    }));\n  };\n\n  /**\n   * Updates playlist description\n   *\n   * @return {void}\n   */\n  var updatePlaylistDesc = function updatePlaylistDesc(value) {\n    setCurrentPlaylist(EditPlaylist_objectSpread(EditPlaylist_objectSpread({}, playlist), {}, {\n      description: value\n    }));\n  };\n\n  /**\n   * Updates playlist thumbnail\n   *\n   * @return {void}\n   */\n  var updatePlaylistThumb = function updatePlaylistThumb(value) {\n    setCurrentPlaylist(EditPlaylist_objectSpread(EditPlaylist_objectSpread({}, playlist), {}, {\n      thumbnail: value\n    }));\n  };\n\n  /**\n   * Save Changes\n   *\n   * @return {void}\n   */\n  var saveChanges = function saveChanges() {\n    var _ref3 = playlist !== null && playlist !== void 0 ? playlist : {},\n      id = _ref3.id,\n      title = _ref3.title,\n      description = _ref3.description,\n      thumbnail = _ref3.thumbnail;\n    dispatch((0,slices_playlists/* savePlaylist */.SX)({\n      id: id,\n      playlist: {\n        title: title,\n        description: description,\n        thumbnail: thumbnail.id\n      }\n    })).then(function (response) {\n      var _response$payload;\n      if (response !== null && response !== void 0 && (_response$payload = response.payload) !== null && _response$payload !== void 0 && _response$payload.success) {\n        var _response$payload2;\n        // Close the modal\n        closeModal();\n\n        // Show Succssful Notice\n        dispatch((0,notice/* addNotice */.Mp)({\n          message: (0,build_module/* sprintf */.nv)((0,build_module.__)(\'Playlist “%s” updated successfully.\', \'wpmudev_vids\'), response === null || response === void 0 || (_response$payload2 = response.payload) === null || _response$payload2 === void 0 || (_response$payload2 = _response$payload2.data) === null || _response$payload2 === void 0 ? void 0 : _response$payload2.title)\n        }));\n      } else {\n        // Show Error Notice\n        dispatch((0,notice/* addNotice */.Mp)({\n          message: (0,build_module.__)(\'Updating playlist failed..\', \'wpmudev_vids\'),\n          type: \'error\'\n        }));\n      }\n    });\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Header, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* IconButton */.K0, {\n        className: "sui-button-float--right",\n        icon: "close",\n        onClick: closeModal,\n        size: "md",\n        outlined: false,\n        label: (0,build_module.__)(\'Close this dialog.\', \'wpmudev_vids\')\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("h3", {\n        id: "".concat(modalID, "-title"),\n        className: "sui-box-title",\n        children: (0,build_module.__)(\'Edit Playlist\', \'wpmudev_vids\')\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Body, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Row, {\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Col2, {\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(PlaylistTitle, {\n            title: title,\n            onChange: updatePlaylistTitle,\n            modalID: modalID\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)(PlaylistDesc, {\n            description: description,\n            onChange: updatePlaylistDesc,\n            modalID: modalID\n          })]\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Row, {\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Col2, {\n          children: [/*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n            className: "sui-form-field wpmudev-videos-field--thumbnail",\n            children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Label */.JU, {\n              children: (0,build_module.__)(\'Playlist thumbnail image\', \'wpmudev_vids\')\n            }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n              className: "sui-description",\n              children: (0,build_module.__)("Add a custom thumbnail to your playlist, otherwise we\'ll just use the first video\'s thumbnail.", \'wpmudev_vids\')\n            })]\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* UploadThumb */.cd, {\n            thumbnail: Array.isArray(thumbnail) ? {} : thumbnail,\n            onSelect: updatePlaylistThumb,\n            modalID: modalID\n          })]\n        })\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Footer, {\n      isFlatten: true,\n      isCentered: true,\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n        color: "blue",\n        isLoading: isSaving,\n        disabled: isSaving,\n        onLoadingText: (0,build_module.__)(\'Saving Changes\', \'wpmudev_vids\'),\n        onClick: saveChanges,\n        children: (0,build_module.__)(\'Save Changes\', \'wpmudev_vids\')\n      })\n    })]\n  });\n}\n/* harmony default export */ var modals_EditPlaylist = ((/* unused pure expression or super */ null && (EditPlaylist)));\n// EXTERNAL MODULE: ./app/src/store/slices/settings.js\nvar settings = __webpack_require__(9569);\n;// CONCATENATED MODULE: ./app/src/pages/playlists/modals/VisibilitySettings.js\nfunction VisibilitySettings_typeof(o) { "@babel/helpers - typeof"; return VisibilitySettings_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, VisibilitySettings_typeof(o); }\nvar _window$ivtModuleVars, _window$ivtVars;\nfunction VisibilitySettings_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction VisibilitySettings_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? VisibilitySettings_ownKeys(Object(t), !0).forEach(function (r) { VisibilitySettings_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : VisibilitySettings_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction VisibilitySettings_defineProperty(e, r, t) { return (r = VisibilitySettings_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction VisibilitySettings_toPropertyKey(t) { var i = VisibilitySettings_toPrimitive(t, "string"); return "symbol" == VisibilitySettings_typeof(i) ? i : i + ""; }\nfunction VisibilitySettings_toPrimitive(t, r) { if ("object" != VisibilitySettings_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != VisibilitySettings_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n/**\n * External Depnedencies\n */\n\n\n\n\n// Global Variables\n\nvar _ref = (_window$ivtModuleVars = window.ivtModuleVars) !== null && _window$ivtModuleVars !== void 0 ? _window$ivtModuleVars : {},\n  locations = _ref.locations;\nvar _ref2 = (_window$ivtVars = window.ivtVars) !== null && _window$ivtVars !== void 0 ? _window$ivtVars : {},\n  VisibilitySettings_settings = _ref2.urls.settings;\nfunction VisibilitySettings(_ref3) {\n  var playlist = _ref3.playlist,\n    setCurrentPlaylist = _ref3.setCurrentPlaylist,\n    closeModal = _ref3.closeModal,\n    modalID = _ref3.modalID;\n  var dispatch = (0,es/* useDispatch */.wA)();\n  var _ref4 = playlist !== null && playlist !== void 0 ? playlist : {},\n    id = _ref4.id,\n    playlist_roles = _ref4.playlist_roles,\n    playlist_locations = _ref4.playlist_locations;\n  var contextualHelp = (0,es/* useSelector */.d4)(function (state) {\n    return (0,settings/* getOption */.om)(state, \'contextual_help\');\n  });\n  var isSaving = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* getLoadingStatus */.H)(state);\n  });\n\n  /**\n   * Update playlist state with new roles\n   */\n  var updatePlaylistRoles = function updatePlaylistRoles(roles) {\n    var newPlaylist = VisibilitySettings_objectSpread(VisibilitySettings_objectSpread({}, playlist), {}, {\n      playlist_roles: roles\n    });\n    setCurrentPlaylist(newPlaylist);\n  };\n\n  /**\n   * Update playlist locations\n   */\n  var updatePlaylistLocations = function updatePlaylistLocations(locations) {\n    var newPlaylist = VisibilitySettings_objectSpread(VisibilitySettings_objectSpread({}, playlist), {}, {\n      playlist_locations: locations\n    });\n    setCurrentPlaylist(newPlaylist);\n  };\n\n  /**\n   * Save Changes\n   */\n  var saveChanges = function saveChanges() {\n    dispatch((0,slices_playlists/* savePlaylist */.SX)({\n      id: id,\n      playlist: {\n        locations: playlist_locations,\n        roles: playlist_roles\n      }\n    })).then(function (response) {\n      var _response$payload;\n      if (response !== null && response !== void 0 && (_response$payload = response.payload) !== null && _response$payload !== void 0 && _response$payload.success) {\n        // close the modal\n        closeModal();\n\n        // Show Succssful Notice\n        dispatch((0,notice/* addNotice */.Mp)({\n          message: (0,build_module.__)(\'Playlist settings updated successfully.\', \'wpmudev_vids\')\n        }));\n      } else {\n        // Show Error Notice\n        dispatch((0,notice/* addNotice */.Mp)({\n          message: (0,build_module.__)(\'Playlist settings update failed.\', \'wpmudev_vids\'),\n          type: \'error\'\n        }));\n      }\n    });\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Header, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* IconButton */.K0, {\n        className: "sui-button-float--right",\n        icon: "close",\n        onClick: closeModal,\n        size: "md",\n        outlined: false,\n        label: (0,build_module.__)(\'Close this dialog.\', \'wpmudev_vids\')\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("h3", {\n        id: "".concat(modalID, "-title"),\n        className: "sui-box-title",\n        children: (0,build_module.__)(\'Visibility settings\', \'wpmudev_vids\')\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Body, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n        children: (0,build_module.__)(\'Control which user roles are able to see this playlist, in addition to where it will be displayed as an available WordPress widget\', \'wpmudev_vids\')\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Row, {\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Col2, {\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Label, {\n            children: (0,build_module.__)(\'Permissions\', \'wpmudev_vids\')\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Description, {\n            children: (0,build_module.__)(\'Choose which user roles will be able to view this playlist.\', \'wpmudev_vids\')\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* UserRoles */.fo, {\n            rolesValues: playlist_roles,\n            onChange: updatePlaylistRoles\n          })]\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Row, {\n        children: /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Col2, {\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Label, {\n            children: (0,build_module.__)(\'Location\', \'wpmudev_vids\')\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Description, {\n            children: (0,build_module.__)(\'Choose which default locations will show this video playlist to the user roles selected above.\', \'wpmudev_vids\')\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n            className: "sui-form-field",\n            "v-if": "showLocationSettings",\n            children: !!contextualHelp ? /*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n              children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Label */.JU, {\n                htmlFor: "wpmudev-videos-playlist-location",\n                children: (0,build_module.__)(\'Choose WP Admin pages\', \'wpmudev_vids\')\n              }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Select */.l6, {\n                id: "wpmudev-videos-playlist-location",\n                labelID: "wpmudev-videos-playlist-location-label",\n                options: locations,\n                multiple: true,\n                value: playlist_locations,\n                placeholder: (0,build_module.__)(\'Choose WP Admin pages\', \'wpmudev_vids\'),\n                onChange: updatePlaylistLocations,\n                parentElement: modalID\n              })]\n            }) : /*#__PURE__*/(0,jsx_runtime.jsx)(components/* StaticNotice */.RL, {\n              children: /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n                children: /*#__PURE__*/(0,jsx_runtime.jsx)(esm/* Interweave */.BW, {\n                  content: sprintf((0,build_module.__)(\'To configure locations for this playlist, please enable the <a href="%s">Add Videos to Contextual Help</a> feature on the Settings page.\', \'wpmudev_vid\'), VisibilitySettings_settings)\n                })\n              })\n            })\n          })]\n        })\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Footer, {\n      isCentered: true,\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n        isLoading: isSaving,\n        disabled: isSaving,\n        onClick: saveChanges,\n        onLoadingText: (0,build_module.__)(\'Saving Changes\', \'wpmudev_vids\'),\n        color: "blue",\n        children: (0,build_module.__)(\'Save Changes\', \'wpmudev_vids\')\n      })\n    })]\n  });\n}\n/* harmony default export */ var modals_VisibilitySettings = ((/* unused pure expression or super */ null && (VisibilitySettings)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/modals/AddVideos.js\nfunction AddVideos_slicedToArray(r, e) { return AddVideos_arrayWithHoles(r) || AddVideos_iterableToArrayLimit(r, e) || AddVideos_unsupportedIterableToArray(r, e) || AddVideos_nonIterableRest(); }\nfunction AddVideos_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction AddVideos_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return AddVideos_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? AddVideos_arrayLikeToArray(r, a) : void 0; } }\nfunction AddVideos_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction AddVideos_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction AddVideos_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\n\nfunction AddVideos(_ref) {\n  var modalID = _ref.modalID,\n    closeModal = _ref.closeModal,\n    playlist = _ref.playlist,\n    setCurrentPlaylist = _ref.setCurrentPlaylist;\n  var dispatch = (0,es/* useDispatch */.wA)();\n  var _ref2 = playlist !== null && playlist !== void 0 ? playlist : {},\n    id = _ref2.id,\n    videos = _ref2.videos;\n  var _useState = (0,react.useState)(0),\n    _useState2 = AddVideos_slicedToArray(_useState, 2),\n    videoCount = _useState2[0],\n    setVideoCount = _useState2[1];\n  var isSaving = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* getLoadingStatus */.H)(state);\n  });\n  var BoxHeaderClasses = classnames_default()(\'sui-box-header\', \'sui-flatten\', \'sui-content-center\', \'sui-spacing-top--60\', \'sui-spacing-sides--100\');\n\n  /**\n   * Check if we need to show the membership upgrade notice.\n   */\n  var showUpgradeNotice = !(0,utils/* expiredMember */.gL)() && !(0,utils/* validMember */.xH)() && (0,utils/* dashConnected */.YT)() && (typeof videoCount === \'undefined\' || videoCount <= 0);\n\n  /**\n   * Check if we need to show the membership expired notice.\n   */\n  var showExpiredNotice = (0,utils/* expiredMember */.gL)() && (0,utils/* dashConnected */.YT)() && (typeof videoCount === \'undefined\' || videoCount <= 0);\n\n  /**\n   * Save Changes\n   */\n  var saveChanges = function saveChanges() {\n    dispatch((0,slices_playlists/* savePlaylist */.SX)({\n      id: id,\n      playlist: {\n        videos: videos\n      }\n    })).then(function (response) {\n      var _response$payload;\n      if (response !== null && response !== void 0 && (_response$payload = response.payload) !== null && _response$payload !== void 0 && _response$payload.success) {\n        // close the modal\n        closeModal();\n\n        // Show Successful Notice\n        dispatch((0,notice/* addNotice */.Mp)({\n          message: (0,build_module.__)(\'Playlist videos updated successfully.\', \'wpmudev_vids\')\n        }));\n      } else {\n        // show error message\n        dispatch((0,notice/* addNotice */.Mp)({\n          message: (0,build_module.__)(\'Could not update the playlist videos. Please try again.\', \'wpmudev_vids\'),\n          type: \'error\'\n        }));\n      }\n    });\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)("button", {\n      className: "sui-screen-reader-text",\n      onClick: closeModal,\n      children: (0,build_module.__)(\'Close this dialog.\', \'wpmudev_vids\')\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Header, {\n      className: BoxHeaderClasses,\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* WhiteLabelBanner */.S3, {\n        src: "modal/modal-header-videos.png",\n        alt: (0,build_module.__)(\'Add videos\', \'wpmudev_vids\')\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* IconButton */.K0, {\n        className: "sui-button-float--right",\n        icon: "close",\n        onClick: closeModal,\n        size: "md",\n        outlined: false,\n        label: (0,build_module.__)(\'Close this dialog.\', \'wpmudev_vids\')\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("h3", {\n        id: "".concat(modalID, "-title"),\n        className: "sui-box-title sui-lg",\n        children: (0,build_module.__)(\'Add videos\', \'wpmudev_vids\')\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n        id: "".concat(modalID, "-desc"),\n        className: "sui-description",\n        children: (0,build_module.__)(\'Choose which videos you want to assign to this playlist. You can add as many as you like.\', \'wpmudev_vids\')\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Body, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(VideoSearchInput, {\n        setVideoCount: setVideoCount\n      }), showUpgradeNotice && /*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)(UpgradeNotice, {})]\n      }), !showUpgradeNotice && showExpiredNotice && /*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)("br", {}), /*#__PURE__*/(0,jsx_runtime.jsx)(RenewNotice, {})]\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(VideosList, {\n      setCurrentPlaylist: setCurrentPlaylist,\n      playlist: playlist,\n      setVideoCount: setVideoCount\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Footer, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n        type: "ghost",\n        onClick: closeModal,\n        children: (0,build_module.__)(\'Cancel\', \'wpmudev_vids\')\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Right, {\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n          isLoading: isSaving,\n          disabled: isSaving,\n          onClick: saveChanges,\n          onLoadingText: (0,build_module.__)(\'Adding Videos\', \'wpmudev_vids\'),\n          children: (0,build_module.__)(\'Add videos\', \'wpmudev_vids\')\n        })\n      })]\n    })]\n  });\n}\n/* harmony default export */ var modals_AddVideos = ((/* unused pure expression or super */ null && (AddVideos)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/modals/slides/PlaylistSettings.js\nfunction PlaylistSettings_typeof(o) { "@babel/helpers - typeof"; return PlaylistSettings_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, PlaylistSettings_typeof(o); }\nfunction PlaylistSettings_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction PlaylistSettings_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? PlaylistSettings_ownKeys(Object(t), !0).forEach(function (r) { PlaylistSettings_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : PlaylistSettings_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction PlaylistSettings_defineProperty(e, r, t) { return (r = PlaylistSettings_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction PlaylistSettings_toPropertyKey(t) { var i = PlaylistSettings_toPrimitive(t, "string"); return "symbol" == PlaylistSettings_typeof(i) ? i : i + ""; }\nfunction PlaylistSettings_toPrimitive(t, r) { if ("object" != PlaylistSettings_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != PlaylistSettings_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\n/**\n * Library components\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n/**\n * External dependencies\n */\n\n\n\nfunction PlaylistSettings(_ref) {\n  var modalID = _ref.modalID,\n    playlist = _ref.playlist,\n    setPlaylist = _ref.setPlaylist,\n    closeModal = _ref.closeModal;\n  var thumbnail = playlist.thumbnail,\n    description = playlist.description,\n    title = playlist.title;\n  /**\n   * Updates playlist title\n   *\n   * @return {void}\n   */\n  var updatePlaylistTitle = function updatePlaylistTitle(value) {\n    setPlaylist(PlaylistSettings_objectSpread(PlaylistSettings_objectSpread({}, playlist), {}, {\n      title: value\n    }));\n  };\n\n  /**\n   * Updates playlist description\n   *\n   * @return {void}\n   */\n  var updatePlaylistDesc = function updatePlaylistDesc(value) {\n    setPlaylist(PlaylistSettings_objectSpread(PlaylistSettings_objectSpread({}, playlist), {}, {\n      description: value\n    }));\n  };\n\n  /**\n   * Updates playlist thumbnail\n   *\n   * @return {void}\n   */\n  var updatePlaylistThumb = function updatePlaylistThumb(value) {\n    setPlaylist(PlaylistSettings_objectSpread(PlaylistSettings_objectSpread({}, playlist), {}, {\n      thumbnail: value\n    }));\n  };\n  var BoxHeaderClasses = classnames_default()(\'sui-box-header\', \'sui-flatten\', \'sui-content-center\', \'sui-spacing-top--60\', \'sui-spacing-sides--100\');\n  return /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n    id: "".concat(modalID, "-playlist-settings"),\n    className: "sui-modal-slide sui-active sui-loaded",\n    children: /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Header, {\n        className: BoxHeaderClasses,\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* WhiteLabelBanner */.S3, {\n          src: "modal/modal-header-videos.png",\n          alt: (0,build_module.__)(\'Create a new playlist\', \'wpmudev_vids\')\n        }), /*#__PURE__*/(0,jsx_runtime.jsxs)("button", {\n          onClick: closeModal,\n          className: classnames_default()(\'sui-button-icon\', \'sui-button-float--right\'),\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n            icon: "close",\n            size: "md"\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n            className: "sui-screen-reader-text",\n            children: (0,build_module.__)(\'Close this dialog.\', \'wpmudev_vids\')\n          })]\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("h3", {\n          id: "".concat(modalID, "-title"),\n          className: "sui-box-title sui-lg",\n          children: (0,build_module.__)(\'Create a new playlist\', \'wpmudev_vids\')\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n          id: "".concat(modalID, "-desc"),\n          className: "sui-description",\n          children: (0,build_module.__)(\'Choose a title, description and custom thumbnail for your playlist and then start adding videos to it.\', \'wpmudev_vids\')\n        })]\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Body, {\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)(PlaylistTitle, {\n          title: title,\n          onChange: updatePlaylistTitle,\n          modalID: modalID\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(PlaylistDesc, {\n          description: description,\n          onChange: updatePlaylistDesc,\n          modalID: modalID\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("hr", {\n          className: "wpmudev-videos-break"\n        }), /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n          className: "sui-form-field wpmudev-videos-field--thumbnail",\n          children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Label */.JU, {\n            children: (0,build_module.__)(\'Playlist thumbnail image\', \'wpmudev_vids\')\n          }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n            className: "sui-description",\n            children: (0,build_module.__)("Add a custom thumbnail to your playlist, otherwise we\'ll just use the first video\'s thumbnail.", \'wpmudev_vids\')\n          })]\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* UploadThumb */.cd, {\n          thumbnail: thumbnail,\n          onSelect: updatePlaylistThumb,\n          modalID: modalID\n        })]\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Footer, {\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n          type: "ghost",\n          onClick: closeModal,\n          children: (0,build_module.__)(\'Cancel\', \'wpmudev_vids\')\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Right, {\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n            disabled: !title,\n            "data-modal-slide": "".concat(modalID, "-playlist-videos"),\n            "data-modal-slide-intro": "next",\n            children: (0,build_module.__)(\'Continue\', \'wpmudev_vids\')\n          })\n        })]\n      })]\n    })\n  });\n}\n/* harmony default export */ var slides_PlaylistSettings = ((/* unused pure expression or super */ null && (PlaylistSettings)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/modals/slides/PlaylistVideos.js\nfunction PlaylistVideos_slicedToArray(r, e) { return PlaylistVideos_arrayWithHoles(r) || PlaylistVideos_iterableToArrayLimit(r, e) || PlaylistVideos_unsupportedIterableToArray(r, e) || PlaylistVideos_nonIterableRest(); }\nfunction PlaylistVideos_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction PlaylistVideos_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return PlaylistVideos_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? PlaylistVideos_arrayLikeToArray(r, a) : void 0; } }\nfunction PlaylistVideos_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction PlaylistVideos_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction PlaylistVideos_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\n\nfunction slides_PlaylistVideos_PlaylistVideos(_ref) {\n  var modalID = _ref.modalID,\n    closeModal = _ref.closeModal,\n    playlist = _ref.playlist,\n    setPlaylist = _ref.setPlaylist,\n    errorMessage = _ref.errorMessage,\n    setErrorMessage = _ref.setErrorMessage;\n  var dispatch = (0,es/* useDispatch */.wA)();\n  var _ref2 = playlist !== null && playlist !== void 0 ? playlist : {},\n    title = _ref2.title,\n    description = _ref2.description,\n    videos = _ref2.videos,\n    locations = _ref2.locations,\n    thumbnail = _ref2.thumbnail;\n  var _useState = (0,react.useState)(0),\n    _useState2 = PlaylistVideos_slicedToArray(_useState, 2),\n    videoCount = _useState2[0],\n    setVideoCount = _useState2[1];\n  var isSaving = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* getLoadingStatus */.H)(state);\n  });\n  var BoxHeaderClasses = classnames_default()(\'sui-box-header\', \'sui-flatten\', \'sui-content-center\', \'sui-spacing-top--60\', \'sui-spacing-sides--100\');\n\n  /**\n   * Check if we need to show the membership upgrade notice.\n   */\n  var showUpgradeNotice = !(0,utils/* expiredMember */.gL)() && !(0,utils/* validMember */.xH)() && (0,utils/* dashConnected */.YT)() && videoCount <= 0;\n\n  /**\n   * Check if we need to show the membership expired notice.\n   */\n  var showExpiredNotice = (0,utils/* expiredMember */.gL)() && (0,utils/* dashConnected */.YT)() && videoCount <= 0;\n\n  /**\n   * Get error message.\n   *\n   * @since 1.8.4\n   *\n   * @return {string}\n   */\n  var getErrorMessage = function getErrorMessage() {\n    return !!errorMessage ? errorMessage : (0,build_module.__)(\'Could not create the playlist. Please try again.\', \'wpmudev_vids\');\n  };\n\n  /**\n   * Scroll to top of the modal.\n   *\n   * Use this to show error messages after scrolling\n   * down for the form submit.\n   *\n   * @since 1.8.4\n   */\n  var scrollTop = function scrollTop() {\n    document.getElementById(\'wpmudev-videos-playlist-create-modal\').scrollIntoView({\n      behavior: \'smooth\',\n      block: \'start\',\n      inline: \'nearest\'\n    });\n  };\n\n  /**\n   * Create the playlist\n   */\n  var submitPlaylist = function submitPlaylist() {\n    dispatch((0,slices_playlists/* createPlaylist */.Nt)({\n      playlist: {\n        title: title,\n        description: description,\n        videos: videos || [],\n        locations: locations || [],\n        thumbnail: thumbnail.id || 0\n      }\n    })).then(function (response) {\n      var _response$payload = response.payload,\n        success = _response$payload.success,\n        data = _response$payload.data;\n      if (success === true) {\n        // close the modal\n        closeModal();\n\n        // Show Successful Notice\n        dispatch((0,notice/* addNotice */.Mp)({\n          message: (0,build_module.__)(\'Playlist created successfully.\', \'wpmudev_vids\'),\n          dismiss: true\n        }));\n      } else if (data) {\n        // If error message available from reponse.\n        if (data !== null && data !== void 0 && data.params) {\n          var error = Object.values(data.params)[0];\n          setErrorMessage(error);\n\n          // Scroll top to see the error message\n          scrollTop();\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n    id: "".concat(modalID, "-playlist-videos"),\n    className: "sui-modal-slide",\n    children: /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az, {\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n        className: "sui-screen-reader-text",\n        onClick: closeModal,\n        children: (0,build_module.__)(\'Close this dialog.\', \'wpmudev_vids\')\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Header, {\n        className: BoxHeaderClasses,\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* WhiteLabelBanner */.S3, {\n          src: "modal/modal-header-videos.png",\n          alt: (0,build_module.__)(\'Create a new playlist\', \'wpmudev_vids\')\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* IconButton */.K0, {\n          className: "sui-button-float--right",\n          icon: "close",\n          onClick: closeModal,\n          size: "md",\n          outlined: false,\n          label: (0,build_module.__)(\'Close this dialog.\', \'wpmudev_vids\')\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* IconButton */.K0, {\n          className: "sui-button-float--left",\n          icon: "chevron-left",\n          "data-modal-slide": "".concat(modalID, "-playlist-settings"),\n          "data-modal-slide-intro": "back",\n          size: "md",\n          outlined: false,\n          label: (0,build_module.__)(\'Go back to previous slide.\', \'wpmudev_vids\')\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("h3", {\n          id: "".concat(modalID, "-title"),\n          className: "sui-box-title sui-lg",\n          children: (0,build_module.__)(\'Create a new playlist\', \'wpmudev_vids\')\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n          id: "".concat(modalID, "-desc"),\n          className: "sui-description",\n          children: (0,build_module.__)(\'Choose which videos you want to assign to this playlist. You can add as many as you like.\', \'wpmudev_vids\')\n        })]\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Body, {\n        children: [!!errorMessage && /*#__PURE__*/(0,jsx_runtime.jsx)(components/* StaticNotice */.RL, {\n          type: "error",\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n            children: getErrorMessage()\n          })\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(VideoSearchInput, {\n          setVideoCount: setVideoCount\n        }), showUpgradeNotice && /*#__PURE__*/(0,jsx_runtime.jsx)(UpgradeNotice, {}), !showUpgradeNotice && showExpiredNotice && /*#__PURE__*/(0,jsx_runtime.jsx)(ExpiredNotice, {})]\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(VideosList, {\n        setCurrentPlaylist: setPlaylist,\n        playlist: playlist,\n        setVideoCount: setVideoCount\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Footer, {\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n          type: "ghost",\n          "data-modal-slide-intro": "back",\n          "data-modal-slide": "".concat(modalID, "-playlist-settings"),\n          children: (0,build_module.__)(\'Back\', \'wpmudev_vids\')\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az.Right, {\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n            isLoading: isSaving,\n            disabled: isSaving,\n            onClick: submitPlaylist,\n            onLoadingText: (0,build_module.__)(\'Creating Playlist\', \'wpmudev_vids\'),\n            children: (0,build_module.__)(\'Create Playlist\', \'wpmudev_vids\')\n          })\n        })]\n      })]\n    })\n  });\n}\n/* harmony default export */ var slides_PlaylistVideos = ((/* unused pure expression or super */ null && (slides_PlaylistVideos_PlaylistVideos)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/modals/slides/index.js\n\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/modals/CreatePlaylist.js\nfunction CreatePlaylist_slicedToArray(r, e) { return CreatePlaylist_arrayWithHoles(r) || CreatePlaylist_iterableToArrayLimit(r, e) || CreatePlaylist_unsupportedIterableToArray(r, e) || CreatePlaylist_nonIterableRest(); }\nfunction CreatePlaylist_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction CreatePlaylist_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return CreatePlaylist_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? CreatePlaylist_arrayLikeToArray(r, a) : void 0; } }\nfunction CreatePlaylist_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction CreatePlaylist_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction CreatePlaylist_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Internal dependencies\n */\n\n\n/**\n * External dependencies\n */\n\n\n// Playlist data structure\n\nvar emptyPlaylist = {\n  title: \'\',\n  description: \'\',\n  videos: [],\n  locations: [],\n  thumbnail: {\n    id: 0,\n    file: \'\',\n    url: \'\'\n  },\n  type: \'custom\'\n};\nfunction CreatePlaylist(_ref) {\n  var modalID = _ref.modalID,\n    closeModal = _ref.closeModal;\n  var _useState = (0,react.useState)(emptyPlaylist),\n    _useState2 = CreatePlaylist_slicedToArray(_useState, 2),\n    playlist = _useState2[0],\n    setPlaylist = _useState2[1];\n  var _useState3 = (0,react.useState)(\'\'),\n    _useState4 = CreatePlaylist_slicedToArray(_useState3, 2),\n    errorMessage = _useState4[0],\n    setErrorMessage = _useState4[1];\n\n  /**\n   * close and resets modal state\n   *\n   * @return {void}\n   */\n  var closeAndReset = function closeAndReset() {\n    // Reset state\n    setPlaylist(emptyPlaylist);\n    setErrorMessage(\'\');\n\n    // Close the modal\n    closeModal();\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(PlaylistSettings, {\n      modalID: modalID,\n      closeModal: closeAndReset,\n      playlist: playlist,\n      setPlaylist: setPlaylist\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(slides_PlaylistVideos_PlaylistVideos, {\n      modalID: modalID,\n      playlist: playlist,\n      setPlaylist: setPlaylist,\n      closeModal: closeAndReset,\n      errorMessage: errorMessage,\n      setErrorMessage: setErrorMessage\n    })]\n  });\n}\n/* harmony default export */ var modals_CreatePlaylist = ((/* unused pure expression or super */ null && (CreatePlaylist)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/modals/DeletePlaylist.js\n/**\n * Library components\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\nfunction DeletePlaylist(_ref) {\n  var _playlist$videos;\n  var playlist = _ref.playlist,\n    closeModal = _ref.closeModal,\n    modalID = _ref.modalID;\n  var id = playlist.id;\n  var dispatch = (0,es/* useDispatch */.wA)();\n  var isDeleting = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* getLoadingStatus */.H)(state);\n  });\n  var boxHeaderClasses = classnames_default()(\'sui-box-header\', \'sui-flatten\', \'sui-content-center\', \'sui-spacing-top--60\');\n  var videosCount = (playlist === null || playlist === void 0 || (_playlist$videos = playlist.videos) === null || _playlist$videos === void 0 ? void 0 : _playlist$videos.length) || 0;\n\n  /**\n   * Delete the playlist\n   *\n   * @return {void}\n   */\n  var onDelete = function onDelete() {\n    dispatch((0,slices_playlists/* deletePlaylist */.ag)({\n      id: id\n    })).then(function (response) {\n      var payload = response.payload;\n      if ((payload === null || payload === void 0 ? void 0 : payload.success) === true) {\n        // close the modal\n        closeModal();\n\n        // Show success notice\n        dispatch((0,notice/* addNotice */.Mp)({\n          message: (0,build_module.__)(\'Playlist deleted successfully.\', \'wpmudev_vids\')\n        }));\n      } else {\n        // Show error notice\n        dispatch((0,notice/* addNotice */.Mp)({\n          message: response.payload.data,\n          type: \'error\'\n        }));\n      }\n    });\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Header, {\n      className: boxHeaderClasses,\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* IconButton */.K0, {\n        className: "sui-button-float--right",\n        icon: "close",\n        onClick: closeModal,\n        size: "md",\n        outlined: false,\n        label: (0,build_module.__)(\'Close this dialog.\', \'wpmudev_vids\')\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("h3", {\n        id: modalID,\n        className: "sui-box-title sui-lg",\n        children: (0,build_module.__)(\'Delete playlist\', \'wpmudev_vids\')\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("p", {\n        id: "".concat(modalID, "-desc"),\n        className: "sui-description",\n        children: (0,build_module/* sprintf */.nv)((0,build_module.__)(\'This playlist contains %d video(s). These videos will be unassigned from this playlist. Are you sure you want to delete this playlist?\'), videosCount)\n      })]\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)(components/* Box */.az.Footer, {\n      isFlatten: true,\n      isCentered: true,\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n        type: "ghost",\n        onClick: closeModal,\n        children: (0,build_module.__)(\'Cancel\', \'wpmudev_vids\')\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n        id: "".concat(modalID, "-submit"),\n        color: "red",\n        onClick: onDelete,\n        onLoadingText: (0,build_module.__)(\'Deleting\', \'wpmudev_vids\'),\n        disabled: isDeleting,\n        isLoading: isDeleting,\n        type: "ghost",\n        children: (0,build_module.__)(\'Delete\', \'wpmudev_vids\')\n      })]\n    })]\n  });\n}\n/* harmony default export */ var modals_DeletePlaylist = ((/* unused pure expression or super */ null && (DeletePlaylist)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/modals/index.js\n\n\n\n\n\n// EXTERNAL MODULE: ./node_modules/react-router/dist/index.js\nvar react_router_dist = __webpack_require__(7767);\n;// CONCATENATED MODULE: ./app/src/pages/playlists/partials/Playlists/Playlists.js\nfunction Playlists_slicedToArray(r, e) { return Playlists_arrayWithHoles(r) || Playlists_iterableToArrayLimit(r, e) || Playlists_unsupportedIterableToArray(r, e) || Playlists_nonIterableRest(); }\nfunction Playlists_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction Playlists_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return Playlists_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? Playlists_arrayLikeToArray(r, a) : void 0; } }\nfunction Playlists_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction Playlists_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction Playlists_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\nfunction Playlists() {\n  // dispatch function\n  var dispatch = (0,es/* useDispatch */.wA)();\n\n  // Filtered List\n  var _useState = (0,react.useState)([]),\n    _useState2 = Playlists_slicedToArray(_useState, 2),\n    filteredList = _useState2[0],\n    setFilteredList = _useState2[1];\n\n  // Playlist being edited\n  var _useState3 = (0,react.useState)({}),\n    _useState4 = Playlists_slicedToArray(_useState3, 2),\n    currentPlaylist = _useState4[0],\n    setCurrentPlaylist = _useState4[1];\n\n  // Checked playlists and videos\n  var _useState5 = (0,react.useState)({}),\n    _useState6 = Playlists_slicedToArray(_useState5, 2),\n    selected = _useState6[0],\n    setSelected = _useState6[1];\n\n  // playlists object\n  var playlists = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* getPlaylists */.Eo)(state);\n  });\n\n  // playlist ids to filter playlists\n  var filtered = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* getFiltered */.A1)(state);\n  });\n\n  // Loading state\n  var isLoading = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* getLoadingStatus */.H)(state);\n  });\n\n  // Edit Modal\n  var editModalID = \'wpmudev-videos-playlist-edit-modal\';\n  var _useModal = (0,hooks/* useModal */.h)({\n      id: editModalID,\n      onClose: function onClose() {\n        return setCurrentPlaylist({});\n      }\n    }),\n    _useModal2 = Playlists_slicedToArray(_useModal, 2),\n    openEditModal = _useModal2[0],\n    closeEditModal = _useModal2[1];\n\n  // Visibility Modal\n  var visibilityModalID = \'wpmudev-videos-playlist-settings-modal\';\n  var _useModal3 = (0,hooks/* useModal */.h)({\n      id: visibilityModalID,\n      onClose: function onClose() {\n        return setCurrentPlaylist({});\n      }\n    }),\n    _useModal4 = Playlists_slicedToArray(_useModal3, 2),\n    openVisibilityModal = _useModal4[0],\n    closeVisibilityModal = _useModal4[1];\n\n  // Videos Modal\n  var videosModalID = \'wpmudev-videos-playlist-videos-modal\';\n  var _useModal5 = (0,hooks/* useModal */.h)({\n      id: videosModalID,\n      onClose: function onClose() {\n        return setCurrentPlaylist({});\n      }\n    }),\n    _useModal6 = Playlists_slicedToArray(_useModal5, 2),\n    openVideosModal = _useModal6[0],\n    closeVideosModal = _useModal6[1];\n\n  // Delete Modal\n  var deleteModalID = \'wpmudev-videos-playlist-delete-modal\';\n  var _useModal7 = (0,hooks/* useModal */.h)({\n      id: deleteModalID,\n      onClose: function onClose() {\n        return setCurrentPlaylist({});\n      }\n    }),\n    _useModal8 = Playlists_slicedToArray(_useModal7, 2),\n    openDeleteModal = _useModal8[0],\n    closeDeleteModal = _useModal8[1];\n  (0,react.useEffect)(function () {\n    var newFilteredList = [];\n\n    // Only if filtered is an array.\n    if (Array.isArray(filtered)) {\n      filtered.forEach(function (id) {\n        if (playlists[id]) {\n          newFilteredList.push(playlists[id]);\n        }\n      });\n    }\n    setFilteredList(newFilteredList);\n  }, [playlists, filtered]);\n\n  // Initialize clipboard library\n  (0,react.useEffect)(function () {\n    new (clipboard_default())(\'.ivt-copy-shortcode\');\n  }, []);\n\n  /**\n   * Handle order change of the playlist.\n   *\n   * @param {object} event Event\n   *\n   */\n  var onChangeOrder = function onChangeOrder(event) {\n    // Get moved playlist ID.\n    var playlistID = event.item.getAttribute(\'data-id\');\n    dispatch((0,slices_playlists/* orderChange */.FN)({\n      playlistID: playlistID,\n      oldIndex: event.oldIndex,\n      newIndex: event.newIndex\n    }));\n  };\n  var playlistsHasInitiated = filteredList.length > 0;\n  var location = (0,react_router_dist/* useLocation */.zy)();\n\n  // Handling routes coming from dashboard page\n  (0,react.useEffect)(function () {\n    if (playlistsHasInitiated) {\n      var pathname = location.pathname;\n\n      // regex to match with url pathname for multiple actions\n      var pattern = /^(\\/(videos|edit|settings))\\/(\\d+)$/;\n      var matches = pathname.match(pattern);\n      if (matches) {\n        var _matches = Playlists_slicedToArray(matches, 4),\n          action = _matches[2],\n          playlistID = _matches[3];\n\n        // videos: open add videos model\n        if (playlists[playlistID] && action === \'videos\') {\n          setCurrentPlaylist(playlists[playlistID]);\n          openVideosModal();\n          return;\n        }\n        // edit: Open edit modal\n        if (playlists[playlistID] && action === \'edit\') {\n          setCurrentPlaylist(playlists[playlistID]);\n          openEditModal();\n        }\n\n        // settings: Open visibility settings modal\n        if (playlists[playlistID] && action === \'settings\') {\n          setCurrentPlaylist(playlists[playlistID]);\n          openVisibilityModal();\n        }\n      }\n    }\n  }, [playlistsHasInitiated]);\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)(jsx_runtime.Fragment, {\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Modal */.aF, {\n      size: "lg",\n      id: editModalID,\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(EditPlaylist, {\n        modalID: editModalID,\n        openModal: openEditModal,\n        closeModal: closeEditModal,\n        playlist: currentPlaylist,\n        setCurrentPlaylist: setCurrentPlaylist\n      })\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Modal */.aF, {\n      id: visibilityModalID,\n      size: "lg",\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(VisibilitySettings, {\n        modalID: visibilityModalID,\n        closeModal: closeVisibilityModal,\n        playlist: currentPlaylist,\n        setCurrentPlaylist: setCurrentPlaylist\n      })\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Modal */.aF, {\n      id: videosModalID,\n      size: "lg",\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(AddVideos, {\n        modalID: videosModalID,\n        closeModal: closeVideosModal,\n        playlist: currentPlaylist,\n        setCurrentPlaylist: setCurrentPlaylist\n      })\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Modal */.aF, {\n      id: deleteModalID,\n      size: "sm",\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(DeletePlaylist, {\n        modalID: deleteModalID,\n        closeModal: closeDeleteModal,\n        playlist: currentPlaylist\n      })\n    }), isLoading && /*#__PURE__*/(0,jsx_runtime.jsx)(PlaylistsLoader, {}), !isLoading && /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Accordion */.nD, {\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* SortableElements */.c1, {\n        onUpdate: onChangeOrder,\n        children: filteredList === null || filteredList === void 0 ? void 0 : filteredList.map(function (playlist) {\n          return /*#__PURE__*/(0,jsx_runtime.jsx)(PlaylistItem, {\n            openEditModal: openEditModal,\n            openVisibilityModal: openVisibilityModal,\n            openVideosModal: openVideosModal,\n            openDeleteModal: openDeleteModal,\n            playlist: playlist,\n            selected: selected,\n            setSelected: setSelected,\n            setCurrentPlaylist: setCurrentPlaylist\n          }, playlist.id);\n        })\n      })\n    })]\n  });\n}\n/* harmony default export */ var Playlists_Playlists = ((/* unused pure expression or super */ null && (Playlists)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/partials/Playlists/index.js\n\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/partials/PlaylistsLoader/PlaylistsLoader.js\n/**\n * Library dependencies\n */\n\n\n/**\n * External components\n */\n\n\nfunction PlaylistsLoader() {\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n    className: "wpmudev-videos-loader sui-box",\n    children: [/*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n      className: "wpmudev-videos-loader--mask",\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Icon */.In, {\n        icon: "loader",\n        animate: true\n      }), (0,build_module.__)(\'Loading...\', \'wpmudev_vids\')]\n    }), /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n      className: "wpmudev-videos-loader--content",\n      "aria-hidden": "true",\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n        className: "wpmudev-videos-loader--checkbox"\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n        className: "wpmudev-videos-loader--image"\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n        className: "wpmudev-videos-loader--name",\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)("span", {})\n      }), /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n        className: "wpmudev-videos-loader--actions",\n        children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* IconButton */.K0, {\n          tag: "div",\n          outlined: false,\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n            className: "sui-icon-widget-settings-config",\n            "aria-hidden": "true"\n          })\n        }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* IconButton */.K0, {\n          tag: "div",\n          outlined: false,\n          children: /*#__PURE__*/(0,jsx_runtime.jsx)("span", {\n            className: "sui-icon-chevron-down",\n            "aria-hidden": "true"\n          })\n        })]\n      })]\n    })]\n  });\n}\n/* harmony default export */ var PlaylistsLoader_PlaylistsLoader = ((/* unused pure expression or super */ null && (PlaylistsLoader)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/partials/PlaylistsLoader/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/partials/BulkActions/BulkActions.js\nfunction BulkActions_slicedToArray(r, e) { return BulkActions_arrayWithHoles(r) || BulkActions_iterableToArrayLimit(r, e) || BulkActions_unsupportedIterableToArray(r, e) || BulkActions_nonIterableRest(); }\nfunction BulkActions_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction BulkActions_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return BulkActions_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? BulkActions_arrayLikeToArray(r, a) : void 0; } }\nfunction BulkActions_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction BulkActions_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction BulkActions_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\nfunction BulkActions() {\n  var _useState = (0,react.useState)(\'\'),\n    _useState2 = BulkActions_slicedToArray(_useState, 2),\n    action = _useState2[0],\n    setAction = _useState2[1];\n  var dispatch = (0,es/* useDispatch */.wA)();\n  var selectedPlaylists = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* getSelectedPlaylists */.dC)(state);\n  });\n  var allSelected = (0,es/* useSelector */.d4)(function (state) {\n    return (0,slices_playlists/* areAllSelected */.tc)(state);\n  });\n  var _useState3 = (0,react.useState)(false),\n    _useState4 = BulkActions_slicedToArray(_useState3, 2),\n    isDeleting = _useState4[0],\n    setIsDeleting = _useState4[1];\n  var options = {\n    delete: (0,build_module.__)(\'Delete\', \'wpmudev_vids\')\n  };\n\n  /**\n   * Bulk Delete Selected playlists & videos\n   *\n   * @return {void}\n   */\n  var applyActions = function applyActions() {\n    setIsDeleting(true);\n    dispatch((0,slices_playlists/* bulkDelete */.QY)({\n      selected: selectedPlaylists\n    })).then(function (response) {\n      if (response.payload.success && response.payload.data) {\n        // Reload playlists\n        dispatch((0,slices_playlists/* initPlaylists */.cM)());\n\n        // Reload videos\n        dispatch((0,slices_videos/* initVideos */.r2)());\n      }\n    }).finally(function () {\n      setIsDeleting(false);\n    });\n  };\n\n  /**\n   * Conditions to disable button\n   *\n   * @returns {boolean}\n   */\n  var isDisabled = function isDisabled() {\n    return action === \'\' || Object.keys(selectedPlaylists).length === 0;\n  };\n\n  /**\n   * Update checked status\n   *\n   * @returns {void}\n   */\n  var updateAllSelection = function updateAllSelection(value) {\n    dispatch((0,slices_playlists/* toggleAll */.E9)({\n      checked: value\n    }));\n  };\n  return /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Box */.az, {\n    className: "sui-box-sticky",\n    children: /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n      className: "sui-box-search",\n      children: [/*#__PURE__*/(0,jsx_runtime.jsx)("label", {\n        htmlFor: "wpmudev-videos-playlists-bulk-check",\n        className: "sui-checkbox",\n        children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Checkbox */.Sc, {\n          id: "wpmudev-videos-playlists-bulk-check",\n          label: false,\n          checked: allSelected,\n          onChange: updateAllSelection\n        })\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Select */.l6, {\n        value: action,\n        onChange: setAction,\n        placeholder: (0,build_module.__)(\'Bulk actions\', \'wpmudev_vids\'),\n        options: options,\n        id: "wpmudev-videos-playlists-bulk-actions",\n        isSmall: true,\n        className: "sui-select-inline",\n        dataWidth: "120px"\n      }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n        onLoadingText: (0,build_module.__)(\'Processing\', \'wpmudev_vids\'),\n        icon: "check",\n        disabled: isDisabled(),\n        onClick: applyActions,\n        isLoading: isDeleting,\n        children: (0,build_module.__)(\'Apply\', \'wpmudev_vids\')\n      })]\n    })\n  });\n}\n/* harmony default export */ var BulkActions_BulkActions = ((/* unused pure expression or super */ null && (BulkActions)));\n;// CONCATENATED MODULE: ./app/src/pages/playlists/partials/BulkActions/index.js\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/partials/index.js\n\n\n\n\n;// CONCATENATED MODULE: ./app/src/pages/playlists/App.js\nfunction App_slicedToArray(r, e) { return App_arrayWithHoles(r) || App_iterableToArrayLimit(r, e) || App_unsupportedIterableToArray(r, e) || App_nonIterableRest(); }\nfunction App_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction App_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return App_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? App_arrayLikeToArray(r, a) : void 0; } }\nfunction App_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction App_iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction App_arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n/**\n * Library dependencies\n */\n\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * External dependencies\n */\n\n\n\n\n\nfunction App() {\n  var _window$ivtVars;\n  var currentNotice = (0,es/* useSelector */.d4)(function (state) {\n    return (0,notice/* getCurrentNotice */.Og)(state);\n  });\n  var dispatch = (0,es/* useDispatch */.wA)();\n\n  // Notice Data\n  var id = currentNotice.id,\n    message = currentNotice.message,\n    type = currentNotice.type,\n    dismiss = currentNotice.dismiss;\n\n  // CreatePlaylist Modal\n  var playlistModalID = \'wpmudev-videos-playlist-create-modal\';\n  var _useModal = (0,hooks/* useModal */.h)({\n      id: playlistModalID\n    }),\n    _useModal2 = App_slicedToArray(_useModal, 2),\n    openPlaylistModal = _useModal2[0],\n    closePlaylistModal = _useModal2[1];\n\n  /**\n   * Check if current membership needs an upgrade.\n   *\n   * @return {boolean}\n   */\n  function shouldUpgrade() {\n    return !(0,utils/* expiredMember */.gL)() && !(0,utils/* validMember */.xH)() && (0,utils/* dashConnected */.YT)();\n  }\n\n  /**\n   * Load data on mount\n   */\n  (0,react.useEffect)(function () {\n    // Load videos\n    dispatch((0,slices_videos/* initVideos */.r2)());\n\n    // Load Playlists\n    dispatch((0,slices_playlists/* initPlaylists */.cM)());\n  }, []);\n\n  // Global Variables\n  var _ref = (_window$ivtVars = window.ivtVars) !== null && _window$ivtVars !== void 0 ? _window$ivtVars : {},\n    hide_doc_link = _ref.whitelabel.hide_doc_link;\n  var location = (0,react_router_dist/* useLocation */.zy)();\n\n  // Handling routes coming from dashboard\n  (0,react.useEffect)(function () {\n    var pathname = location.pathname;\n    if (pathname.slice(1) === \'create\') {\n      openPlaylistModal();\n    }\n  }, []);\n  return /*#__PURE__*/(0,jsx_runtime.jsxs)("div", {\n    className: "sui-wrap",\n    children: [/*#__PURE__*/(0,jsx_runtime.jsx)(components/* Modal */.aF, {\n      size: "lg",\n      id: playlistModalID,\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(CreatePlaylist, {\n        closeModal: closePlaylistModal,\n        modalID: playlistModalID\n      })\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Header */.Y9, {\n      showDocLink: !hide_doc_link,\n      docLink: "https://wpmudev.com/docs/wpmu-dev-plugins/integrated-video-tutorials/",\n      docText: (0,build_module.__)(\'View Documentation\', \'wpmudev_vids\'),\n      title: (0,build_module.__)(\'Playlists\', \'wpmudev_vids\'),\n      actionsLeft: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* Button */.$n, {\n        onClick: openPlaylistModal,\n        icon: "plus",\n        color: "blue",\n        children: (0,build_module.__)(\'Create Playlist\', \'wpmudev_vids\')\n      })\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)("div", {\n      className: "sui-floating-notices",\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(components/* TopNotice */.ii, {\n        id: id,\n        dismiss: dismiss,\n        message: message,\n        type: type,\n        label: (0,build_module.__)(\'Dismiss this notice\', \'wpmudev_vids\')\n      })\n    }), /*#__PURE__*/(0,jsx_runtime.jsx)(SummaryBox, {}), shouldUpgrade() && /*#__PURE__*/(0,jsx_runtime.jsx)(UpgradeNotice, {}), !shouldUpgrade() && (0,utils/* expiredMember */.gL)() && /*#__PURE__*/(0,jsx_runtime.jsx)(ExpiredNotice, {}), !shouldUpgrade() && !(0,utils/* expiredMember */.gL)() && !(0,utils/* validMember */.xH)() && /*#__PURE__*/(0,jsx_runtime.jsx)(DashNotice, {}), /*#__PURE__*/(0,jsx_runtime.jsx)(BulkActions, {}), /*#__PURE__*/(0,jsx_runtime.jsx)(Playlists, {}), /*#__PURE__*/(0,jsx_runtime.jsx)(src_components/* PageFooter */.FM, {})]\n  });\n}\n/* harmony default export */ var playlists_App = (App);\n;// CONCATENATED MODULE: ./app/src/pages/playlists/main.js\n\n\n\n\n\n\n\nvar root = client.createRoot(document.getElementById(\'wpmudev-videos-playlists-app\'));\nroot.render( /*#__PURE__*/(0,jsx_runtime.jsx)(react.StrictMode, {\n  children: /*#__PURE__*/(0,jsx_runtime.jsx)(es/* Provider */.Kq, {\n    store: store/* default */.A,\n    children: /*#__PURE__*/(0,jsx_runtime.jsx)(dist/* HashRouter */.I9, {\n      children: /*#__PURE__*/(0,jsx_runtime.jsx)(playlists_App, {})\n    })\n  })\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3754\n')},9317:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A1: function() { return /* binding */ getFiltered; },\n/* harmony export */   E9: function() { return /* binding */ toggleAll; },\n/* harmony export */   Eo: function() { return /* binding */ getPlaylists; },\n/* harmony export */   FN: function() { return /* binding */ orderChange; },\n/* harmony export */   H: function() { return /* binding */ getLoadingStatus; },\n/* harmony export */   Nt: function() { return /* binding */ createPlaylist; },\n/* harmony export */   QY: function() { return /* binding */ bulkDelete; },\n/* harmony export */   SX: function() { return /* binding */ savePlaylist; },\n/* harmony export */   V4: function() { return /* binding */ isVideoSelected; },\n/* harmony export */   WM: function() { return /* binding */ toggleVideo; },\n/* harmony export */   ag: function() { return /* binding */ deletePlaylist; },\n/* harmony export */   cM: function() { return /* binding */ initPlaylists; },\n/* harmony export */   dC: function() { return /* binding */ getSelectedPlaylists; },\n/* harmony export */   fk: function() { return /* binding */ togglePlaylist; },\n/* harmony export */   ko: function() { return /* binding */ isPlaylistSelected; },\n/* harmony export */   tc: function() { return /* binding */ areAllSelected; },\n/* harmony export */   xu: function() { return /* binding */ setPlaylist; }\n/* harmony export */ });\n/* unused harmony export updatePlaylistKey */\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8740);\n/* harmony import */ var _helpers_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9331);\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4214);\n/* harmony import */ var reselect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1081);\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }\n\n\n\n\n\n/***************************************************\n *\n * Asynchronous Requests\n *\n * *************************************************/\n/**\n * Initialize the playlist list\n *\n * @return {Promise}\n */\nvar initPlaylists = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'playlists/init\',\n// Redux action type\nfunction (params) {\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restGet */ .B8)({\n    path: \'playlists\',\n    params: params\n  });\n});\n\n/**\n * Save a single playlist changes to database\n *\n * @return {Promise}\n */\nvar savePlaylist = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'playlists/updateSinglePlaylist\',\n// Redux action type\nfunction (data) {\n  var playlist = data.playlist,\n    id = data.id;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restPost */ .J8)({\n    path: "playlists/".concat(id),\n    data: playlist\n  });\n});\n\n/**\n * Create a new playlist\n *\n * @return {Promise}\n */\nvar createPlaylist = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'playlists/createPlaylist\',\n/*#__PURE__*/\n// Redux action type\nfunction () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data, _ref) {\n    var rejectWithValue, playlist;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          rejectWithValue = _ref.rejectWithValue;\n          playlist = data.playlist;\n          _context.prev = 2;\n          _context.next = 5;\n          return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restPost */ .J8)({\n            path: "playlists",\n            data: playlist\n          });\n        case 5:\n          return _context.abrupt("return", _context.sent);\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context["catch"](2);\n          return _context.abrupt("return", rejectWithValue(_context.t0));\n        case 11:\n        case "end":\n          return _context.stop();\n      }\n    }, _callee, null, [[2, 8]]);\n  }));\n  return function (_x, _x2) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n\n/**\n * Change Playlist Order\n *\n * @return {void}\n */\nvar orderChange = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'playlists/changePlaylistOrder\',\n// Redux action type\n\nfunction (data) {\n  var playlistID = data.playlistID,\n    oldIndex = data.oldIndex,\n    newIndex = data.newIndex;\n  if (playlistID > 0 && oldIndex !== newIndex) {\n    (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restGet */ .B8)({\n      path: \'playlists/reorder\',\n      params: {\n        playlist: playlistID,\n        from: oldIndex,\n        to: newIndex\n      }\n    });\n  }\n});\n\n/**\n * Delete a playlist\n *\n * @return {Promise}\n */\nvar deletePlaylist = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'playlists/deletePlaylist\',\n// Redux action type\nfunction (data) {\n  var id = data.id;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restDelete */ ._8)({\n    path: "playlists/".concat(id)\n  });\n});\n\n/**\n * Bulk delete playlists & videos\n *\n * @return {Promise}\n */\nvar bulkDelete = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'playlists/bulkDelete\',\n// Redux action type\nfunction (data) {\n  var selected = data.selected;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restPost */ .J8)({\n    path: "playlists/bulk-actions",\n    data: {\n      action: \'delete\',\n      items: selected\n    }\n  });\n});\n\n/***************************************************\n *\n * Playlists Slice\n *\n * *************************************************/\nvar playlistsSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createSlice */ .Z0)({\n  name: \'playlists\',\n  /***************************************************\n   *\n   * Initial State\n   *\n   * *************************************************/\n\n  initialState: {\n    playlists: {},\n    filtered: [],\n    selected: {},\n    isLoading: false\n  },\n  /***************************************************\n   *\n   * Reducers\n   *\n   * *************************************************/\n  reducers: {\n    /**\n     * Update a single playlist in the playlists list\n     *\n     * If playlist exist, it will replace the playlist object,\n     * if not, it will add the playlist object.\n     *\n     * @param {object} state Current state.\n     * @param {object} action action data.\n     */\n    setPlaylist: function setPlaylist(state, action) {\n      var playlist = action.payload.playlist;\n      var playlists = state.playlists;\n      var newPlaylists = _objectSpread(_objectSpread({}, playlists), {}, _defineProperty({}, playlist.id, playlist));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        playlists: newPlaylists\n      });\n    },\n    /**\n     * Select or deselect a playlist ( checkbox )\n     *\n     * @return {void}\n     */\n    togglePlaylist: function togglePlaylist(state, action) {\n      var _state$playlists, _selected$id;\n      var _action$payload = action.payload,\n        checked = _action$payload.checked,\n        id = _action$payload.id;\n      var allVideos = (_state$playlists = state.playlists) === null || _state$playlists === void 0 || (_state$playlists = _state$playlists[id]) === null || _state$playlists === void 0 ? void 0 : _state$playlists.videos;\n\n      // The new selected object\n      var selected = _objectSpread(_objectSpread({}, state.selected), {}, _defineProperty({}, id, {\n        selected: checked,\n        videos: checked && allVideos || []\n      }));\n\n      // If playlist is not selected and no videos are selected,\n      // remove the playlist\n      if ((selected === null || selected === void 0 || (_selected$id = selected[id]) === null || _selected$id === void 0 || (_selected$id = _selected$id.videos) === null || _selected$id === void 0 ? void 0 : _selected$id.length) === 0 && !checked) {\n        delete selected[id];\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: selected\n      });\n    },\n    /**\n     * Select or de-select all playlists and videos ( checkbox )\n     *\n     * @return {void}\n     */\n    toggleAll: function toggleAll(state, action) {\n      var checked = action.payload.checked;\n      var playlists = state.playlists;\n\n      // The new selected object\n      var newSelected = {};\n      if (checked === true) {\n        Object.keys(playlists).forEach(function (id) {\n          newSelected[id] = {\n            selected: true,\n            videos: (playlists === null || playlists === void 0 ? void 0 : playlists[id].videos) || []\n          };\n        });\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: newSelected\n      });\n    },\n    /**\n     * Update selected videos list ( checkbox )\n     *\n     * @return {void}\n     */\n    toggleVideo: function toggleVideo(state, action) {\n      var _selected$playlistID, _selected$playlistID2;\n      var _action$payload2 = action.payload,\n        videoID = _action$payload2.videoID,\n        playlistID = _action$payload2.playlistID;\n      var selected = state.selected;\n      var videos = (selected === null || selected === void 0 || (_selected$playlistID = selected[playlistID]) === null || _selected$playlistID === void 0 ? void 0 : _selected$playlistID.videos) || [];\n\n      // The new selected object\n      var newSelected = {};\n\n      // The new videos array\n      var newVideos = [];\n\n      // Toggle video\n      if (videos.includes(videoID)) {\n        // Remove video if it exists\n        newVideos = videos.filter(function (el) {\n          return el !== videoID;\n        });\n      } else {\n        // Add video if it doesn\'t exist\n        newVideos = [].concat(_toConsumableArray(videos), [videoID]);\n      }\n      var isPlaylistSelected = (selected === null || selected === void 0 || (_selected$playlistID2 = selected[playlistID]) === null || _selected$playlistID2 === void 0 ? void 0 : _selected$playlistID2.selected) || false;\n\n      // Update selected object\n      newSelected = _objectSpread(_objectSpread({}, selected), {}, _defineProperty({}, playlistID, {\n        selected: isPlaylistSelected,\n        videos: newVideos\n      }));\n\n      /* If playlist is not selected and no video is selected,\n      remove the playlist */\n      if (newVideos.length === 0 && !isPlaylistSelected) {\n        delete newSelected[playlistID];\n      }\n\n      // Set the state\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: newSelected\n      });\n    }\n  },\n  /***************************************************\n   *\n   * Extra Reducers\n   *\n   * Manage of asynchronous requests states\n   *\n   * *************************************************/\n  extraReducers: function extraReducers(builder) {\n    builder\n    // Playlists Init\n    .addCase(initPlaylists.pending, function (state) {\n      state.isLoading = true;\n    }).addCase(initPlaylists.fulfilled, function (state, action) {\n      state.isLoading = false;\n      var payload = action.payload;\n      if (payload.success && payload.data) {\n        var playlists = {};\n        var filtered = [];\n\n        // Setup the list data.\n        payload.data.forEach(function (playlist) {\n          playlists[playlist.id] = playlist;\n          filtered.push(playlist.id);\n        });\n\n        // update the state\n        state.playlists = playlists;\n        state.filtered = filtered;\n      }\n    }).addCase(initPlaylists.rejected, function (state) {\n      state.isLoading = false;\n    })\n    // Save Playlist\n    .addCase(savePlaylist.pending, function (state) {\n      state.isLoading = true;\n    }).addCase(savePlaylist.fulfilled, function (state, action) {\n      var data = action.payload.data;\n      var playlists = state.playlists;\n      var newPlaylists = _objectSpread(_objectSpread({}, playlists), {}, _defineProperty({}, data.id, data));\n      state.isLoading = false;\n      state.playlists = newPlaylists;\n    }).addCase(savePlaylist.rejected, function (state) {\n      state.isLoading = false;\n    })\n    // Create Playlist\n    .addCase(createPlaylist.pending, function (state) {\n      state.isLoading = true;\n    }).addCase(createPlaylist.fulfilled, function (state, action) {\n      var _action$payload3 = action.payload,\n        data = _action$payload3.data,\n        success = _action$payload3.success;\n      if (success && data) {\n        var playlists = state.playlists,\n          filtered = state.filtered;\n        // update the list in the store\n        state.playlists = _objectSpread(_objectSpread({}, playlists), {}, _defineProperty({}, data.id, data));\n        state.filtered = [].concat(_toConsumableArray(filtered), [data.id]);\n      }\n      state.isLoading = false;\n    }).addCase(createPlaylist.rejected, function (state) {\n      state.isLoading = false;\n    })\n    // Delete Playlist\n    .addCase(deletePlaylist.pending, function (state) {\n      state.isLoading = true;\n    }).addCase(deletePlaylist.fulfilled, function (state, action) {\n      var id = action.meta.arg.id,\n        success = action.payload.success;\n\n      // Remove the playlist if success\n      if (success === true) {\n        var playlists = state.playlists,\n          filtered = state.filtered;\n        var newPlaylists = _objectSpread({}, playlists);\n        delete newPlaylists[id];\n        // update the list in the store\n        state.playlists = _objectSpread({}, newPlaylists);\n        state.filtered = filtered.filter(function (item) {\n          return item !== id;\n        });\n      }\n      state.isLoading = false;\n    }).addCase(deletePlaylist.rejected, function (state) {\n      state.isLoading = false;\n    })\n    // Bulk Delete\n    .addCase(bulkDelete.pending, function (state) {\n      state.isLoading = true;\n    }).addCase(bulkDelete.fulfilled, function (state) {\n      state.isLoading = false;\n\n      // Empty the selected list\n      state.selected = [];\n    }).addCase(bulkDelete.rejected, function (state) {\n      state.isLoading = false;\n\n      // Empty the selected list\n      state.selected = [];\n    });\n  }\n});\n\n/***************************************************\n *\n * Selectors\n *\n * *************************************************/\n\nvar playlistsState = function playlistsState(state) {\n  return state.playlists;\n};\n\n/**\n * Get playlists object\n *\n * @param {object} playlistsState the playlists object.\n *\n * @return {object}\n */\nvar getPlaylists = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (playlistsState) {\n  return playlistsState.playlists;\n});\n\n/**\n * Get filtered array\n *\n * @param {object} playlistsState the playlists object.\n *\n * @return {array}\n */\nvar getFiltered = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (playlistsState) {\n  return playlistsState.filtered;\n});\n\n/**\n * Checks if the playlist is selected\n *\n * @param {object} playlistsState the playlists object.\n * @param {number} id playlist id\n *\n * @return {boolean}\n */\nvar isPlaylistSelected = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (_, id) {\n  return id;\n}, function (playlistsState, id) {\n  var _playlistsState$selec;\n  return (_playlistsState$selec = playlistsState.selected) === null || _playlistsState$selec === void 0 || (_playlistsState$selec = _playlistsState$selec[id]) === null || _playlistsState$selec === void 0 ? void 0 : _playlistsState$selec.selected;\n});\n\n/**\n * Checks if video is selected\n *\n * @param {object} playlistsState the playlists object.\n * @param {object} ids playlistID & videoID\n *\n * @return {boolean}\n */\nvar isVideoSelected = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (_, ids) {\n  return ids;\n}, function (playlistsState, ids) {\n  var _playlistsState$selec2;\n  var _ref3 = ids !== null && ids !== void 0 ? ids : {},\n    playlistID = _ref3.playlistID,\n    videoID = _ref3.videoID;\n  var videos = ((_playlistsState$selec2 = playlistsState.selected) === null || _playlistsState$selec2 === void 0 || (_playlistsState$selec2 = _playlistsState$selec2[playlistID]) === null || _playlistsState$selec2 === void 0 ? void 0 : _playlistsState$selec2.videos) || [];\n  return videos.includes(videoID);\n});\n\n/**\n * Check of all videos and playlists are selected\n *\n * @param {object} playlistsState the playlists object.\n * @return {boolean}\n *\n */\nvar areAllSelected = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (playlistsState) {\n  var playlists = playlistsState.playlists,\n    selected = playlistsState.selected;\n\n  // return false if at least one playlist is not selected\n  for (var playlistId in playlists) {\n    var _selected$playlistId, _playlists$playlistId, _selected$playlistId2;\n    var isSelected = (selected === null || selected === void 0 || (_selected$playlistId = selected[playlistId]) === null || _selected$playlistId === void 0 ? void 0 : _selected$playlistId.selected) || false;\n    if (!isSelected) {\n      return false;\n    }\n\n    // return false if at least one video is not selected\n    var allVideos = (playlists === null || playlists === void 0 || (_playlists$playlistId = playlists[playlistId]) === null || _playlists$playlistId === void 0 ? void 0 : _playlists$playlistId.videos) || [];\n    var selectedVideos = (selected === null || selected === void 0 || (_selected$playlistId2 = selected[playlistId]) === null || _selected$playlistId2 === void 0 ? void 0 : _selected$playlistId2.videos) || [];\n\n    // It suffices to compare lengths only\n    if (allVideos.length !== selectedVideos.length) {\n      return false;\n    }\n  }\n  return Object.keys(playlists).length > 0;\n});\n\n/**\n * Get selected Playlists & videos\n *\n * @param {object} playlistsState the playlists object.\n *\n * @return {object}\n */\nvar getSelectedPlaylists = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (playlistsState) {\n  return playlistsState.selected;\n});\n\n/**\n * Get Loading status\n *\n * @param {object} playlistsState the playlists object.\n *\n * @return {*}\n */\nvar getLoadingStatus = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(playlistsState, function (playlistsState) {\n  return playlistsState.isLoading;\n});\n\n// Export actions\nvar _playlistsSlice$actio = playlistsSlice.actions,\n  setPlaylist = _playlistsSlice$actio.setPlaylist,\n  updatePlaylistKey = _playlistsSlice$actio.updatePlaylistKey,\n  togglePlaylist = _playlistsSlice$actio.togglePlaylist,\n  toggleVideo = _playlistsSlice$actio.toggleVideo,\n  toggleAll = _playlistsSlice$actio.toggleAll;\n\n/* harmony default export */ __webpack_exports__.Ay = (playlistsSlice.reducer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9317\n')},4084:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Q6: function() { return /* binding */ getFilteredIds; },\n/* harmony export */   fY: function() { return /* binding */ getVideos; },\n/* harmony export */   kZ: function() { return /* binding */ setFiltered; },\n/* harmony export */   oA: function() { return /* binding */ unAssignVideo; },\n/* harmony export */   r2: function() { return /* binding */ initVideos; }\n/* harmony export */ });\n/* unused harmony exports deleteVideo, fetchEmbed, createVideo, updateVideo, searchVideos, getEmbed, getLoadingStatus */\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8740);\n/* harmony import */ var _helpers_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(9331);\n/* harmony import */ var _wordpress_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(4214);\n/* harmony import */ var reselect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(1081);\nfunction _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }\nfunction _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }\nfunction _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a \'" + n + "\' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }\n\n\n\n\n\n/**\n * Re-initialize the videos list\n *\n * @return {Promise}\n */\nvar initVideos = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/init\',\n// Redux action type\nfunction (params) {\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restGet */ .B8)({\n    path: \'videos\',\n    params: params\n  });\n});\n\n/**\n * Deletes a video\n *\n * @return {Promise}\n */\nvar deleteVideo = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/delete\',\n// Redux action type\nfunction (data) {\n  var id = data.id;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restDelete */ ._8)({\n    path: "videos/".concat(id)\n  });\n});\n\n/**\n * Delete a video from playlist\n *\n * @return {Promise}\n */\nvar unAssignVideo = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/delete\',\n// Redux action type\nfunction (_ref) {\n  var playlistID = _ref.playlistID,\n    videoID = _ref.videoID;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restDelete */ ._8)({\n    path: "playlists/".concat(playlistID, "/videos"),\n    data: {\n      videos: [videoID]\n    }\n  });\n});\n\n/**\n * Fetch a single embed object using API.\n *\n * Use this only if the embed is not already\n * found in state.\n *\n * @param {object} data Video ID and other args.\n *\n * @return {Promise}\n */\nvar fetchEmbed = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/fetchEmbed\', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(data) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!(data.id && data.id > 0)) {\n            _context.next = 6;\n            break;\n          }\n          _context.next = 3;\n          return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restGet */ .B8)({\n            path: "videos/".concat(data.id, "/embed"),\n            params: data\n          });\n        case 3:\n          response = _context.sent;\n          // Include the id in response\n          response.id = data.id;\n          return _context.abrupt("return", response);\n        case 6:\n        case "end":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}());\n\n/**\n * Create a video\n *\n * @param {object} video Video object\n *\n * @return {Promise}\n */\nvar createVideo = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/create\', function (data) {\n  var video = data.video;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restPost */ .J8)({\n    path: \'videos\',\n    data: video\n  });\n});\n\n/**\n * Update a video\n *\n * @param {object} video Video object\n *\n * @return {Promise}\n */\nvar updateVideo = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/update\', function (data) {\n  var video = data.video,\n    id = data.id;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restPost */ .J8)({\n    path: "videos/".concat(id),\n    data: video\n  });\n});\n\n/**\n * Search Videos\n *\n * @param {object} search search string\n *\n * @return {Promise}\n */\nvar searchVideos = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createAsyncThunk */ .zD)(\'videos/search\', function (data) {\n  var search = data.search;\n  return (0,_helpers_api__WEBPACK_IMPORTED_MODULE_0__/* .restGet */ .B8)({\n    path: "videos",\n    params: {\n      search: search,\n      field: \'ids\'\n    }\n  });\n});\nvar videosSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_2__/* .createSlice */ .Z0)({\n  name: \'videos\',\n  initialState: {\n    videos: {},\n    embeds: {},\n    filtered: [],\n    isLoading: false\n  },\n  reducers: {\n    /**\n     * Set a filtered video ids in state.\n     *\n     * It replaces the filtered list with the provided one\n     *\n     * @param {state} state object\n     * @param {object} action object\n     *\n     * @return {object} New State Object\n     */\n    setFiltered: function setFiltered(state, action) {\n      var ids = action.payload.ids;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filtered: ids\n      });\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder\n    // Handling initVideos status\n    .addCase(initVideos.pending, function (state) {\n      // Set Loading\n      state.isLoading = true;\n    }).addCase(initVideos.fulfilled, function (state, action) {\n      state.isLoading = false;\n      var payload = action.payload;\n      if (payload.success && payload.data) {\n        var videos = {};\n        var filtered = [];\n\n        // Setup the list data.\n        payload.data.forEach(function (video) {\n          videos[video.id] = video;\n          filtered.push(video.id);\n        });\n\n        // update the state\n        state.videos = videos;\n        state.filtered = filtered;\n      }\n      state.status = \'success\';\n    }).addCase(initVideos.rejected, function (state) {\n      // Update Status\n      state.status = \'error\';\n    })\n\n    // Handling fetchEmbed\n    .addCase(fetchEmbed.fulfilled, function (state, action) {\n      var embed = {};\n\n      // Update state\n      var payload = action.payload;\n      if (payload !== null && payload !== void 0 && payload.success && payload !== null && payload !== void 0 && payload.data && payload !== null && payload !== void 0 && payload.data.html) {\n        embed = payload.data;\n        var newData = _objectSpread({}, payload.data);\n        newData.id = payload.id;\n\n        // Update the state\n        state.embeds[payload.id] = newData;\n      }\n    })\n\n    // Handling Video Create\n    .addCase(createVideo.fulfilled, function (state, action) {\n      // Update state\n      var payload = action.payload;\n      if (payload !== null && payload !== void 0 && payload.success) {\n        var video = payload.data;\n\n        // Add video to state\n        if (video.id && video.id > 0) {\n          state.videos = _objectSpread(_objectSpread({}, state.videos), {}, _defineProperty({}, video.id, video));\n\n          // Add the id to the filtered list so the video will be displayed\n          state.filtered = [].concat(_toConsumableArray(state.filtered), [video.id]);\n        }\n      }\n    })\n\n    // Handeling Video Update\n    .addCase(updateVideo.fulfilled, function (state, action) {\n      var payload = action.payload;\n      var newVideo = payload.data;\n      if (payload !== null && payload !== void 0 && payload.success) {\n        // Update videos state\n        state.videos = _objectSpread(_objectSpread({}, state.videos), {}, _defineProperty({}, newVideo.id, newVideo));\n      }\n    })\n\n    // Handeling Video Delete\n    .addCase(deleteVideo.fulfilled, function (state, action) {\n      var id = action.meta.arg.id,\n        success = action.payload.success;\n      if (success === true) {\n        var videos = state.videos,\n          filtered = state.filtered;\n\n        // Remove from filtered list\n        state.filtered = filtered.filter(function (item) {\n          return id !== item;\n        });\n\n        // Delete the video from the videos object\n        var newVideos = _objectSpread({}, videos);\n        delete newVideos[id];\n        state.videos = newVideos;\n      }\n    })\n\n    // Handeling Video Search\n    .addCase(searchVideos.pending, function (state, action) {\n      // Set Loading\n      state.isLoading = true;\n    }).addCase(searchVideos.fulfilled, function (state, action) {\n      var _action$payload;\n      var ids = (action === null || action === void 0 || (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.data) || [];\n      state.filtered = ids;\n\n      // Set Loading\n      state.isLoading = false;\n    }).addCase(searchVideos.rejected, function (state, action) {\n      state.isLoading = false;\n    });\n  }\n});\n\n// Selectors\nvar videosState = function videosState(state) {\n  return state.videos;\n};\n\n/**\n * Get video(s) object(s) by id(s)\n *\n * @param {object} videosState\n * @param {array|string} ids videos ids\n *\n * @return {array|object|false}\n */\nvar getVideos = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(videosState, function (_, ids) {\n  return ids;\n}, function (videosState, ids) {\n  var videos = [];\n  if (Array.isArray(ids)) {\n    ids.forEach(function (id) {\n      if (videosState.videos[id]) {\n        videos.push(videosState.videos[id]);\n      }\n    });\n    return videos;\n  } else if (typeof ids === \'string\' || typeof ids === \'number\') {\n    return videosState.videos[ids];\n  } else {\n    // If ids is not provided get all videos\n    return videosState.videos;\n  }\n});\n\n/**\n * Get Filtered IDs\n *\n * @param {object} videosState\n *\n * @return {array}\n */\nvar getFilteredIds = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(videosState, function (videosState) {\n  return videosState.filtered;\n});\n\n/**\n * Get a single embed object\n *\n * @param {object} videosState\n * @param {number} videoId\n *\n * @return {array}\n */\nvar getEmbed = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(videosState, function (_, id) {\n  return id;\n}, function (videosState, id) {\n  return videosState.embeds[id] || false;\n});\n\n/**\n * Get loading status\n *\n * @param {object} videosState the videos state object.\n *\n * @return {boolean}\n */\nvar getLoadingStatus = (0,reselect__WEBPACK_IMPORTED_MODULE_3__/* .createSelector */ .Mz)(videosState, function (videosState) {\n  return videosState.isLoading;\n});\n\n// Export actions\nvar setFiltered = videosSlice.actions.setFiltered;\n\n/* harmony default export */ __webpack_exports__.Ay = (videosSlice.reducer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4084\n')},5524:function(module){eval('!function(t,e){ true?module.exports=e():0}(this,(function(){"use strict";function t(){return(t=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}return function(){var e,n=[],i={vendor:void 0,id:void 0,src:void 0,thumbnail:void 0,title:void 0,initialized:!1,y:void 0,debounce:250,lazyload:!0,autoplay:!0,initinview:!1,onLoad:function(t){},onAppend:function(t){},onThumbnailLoad:function(t){}},o={regex:{youtube_nocookie:/(?:youtube-nocookie\\.com\\/\\S*(?:(?:\\/e(?:mbed))?\\/|watch\\?(?:\\S*?&?v\\=)))([a-zA-Z0-9_-]{6,11})/,youtube:/(?:youtube\\.com\\/\\S*(?:(?:\\/e(?:mbed))?\\/|watch\\?(?:\\S*?&?v\\=))|youtu\\.be\\/)([a-zA-Z0-9_-]{6,11})/,vimeo:/vimeo\\.com\\/(?:video\\/)?([0-9]*)(?:\\?|)/},condition:{youtube:function(t){return!(!t||11!=t[1].length)&&t[1]},youtube_nocookie:function(t){return!(!t||11!=t[1].length)&&t[1]},vimeo:function(t){return!!(t&&9===t[1].length||8===t[1].length)&&t[1]}},src:{youtube:function(t){return"https://www.youtube.com/embed/".concat(t.id,"/?autoplay=").concat(t.autoplay?"1":"0","&").concat(t.query)},youtube_nocookie:function(t){return"https://www.youtube-nocookie.com/embed/".concat(t.id,"/?autoplay=").concat(t.autoplay?"1":"0","&").concat(t.query)},vimeo:function(t){return"https://player.vimeo.com/video/".concat(t.id,"/?autoplay=").concat(t.autoplay?"1":"0","&").concat(t.query)}},endpoint:function(t){return"https://noembed.com/embed?url=".concat(t.src)},response:{title:function(t){return t.title},thumbnail:function(t){return t.thumbnail_url}}};function a(t){var n=this;if(t instanceof HTMLElement!=!1&&!t.classList.contains("lazyframe--loaded")){var i={el:t,settings:r(t)};i.el.addEventListener("click",(function(){i.el.appendChild(i.iframe);var e=t.querySelectorAll("iframe");i.settings.onAppend.call(n,e[0])})),e.lazyload?c(i):l(i,i.settings.thumbnail)}}function r(n){var i,a,r=Array.prototype.slice.apply(n.attributes).filter((function(t){return""!==t.value})).reduce((function(t,e){return t[0===e.name.indexOf("data-")?e.name.split("data-")[1]:e.name]=e.value,t}),{}),l=t({},e,r,{y:n.offsetTop,originalSrc:r.src,query:(i=r.src,a=i.split("?"),a[1]?a[1]:null)});if(l.vendor){var u=l.src.match(o.regex[l.vendor]);l.id=o.condition[l.vendor](u)}return l}function l(t){var e=this;!function(t){return!(!t.vendor||t.title&&t.thumbnail)}(t.settings)?c(t,!0):function(t,e){var n=o.endpoint(t.settings),i=new XMLHttpRequest;i.open("GET",n,!0),i.onload=function(){if(i.status>=200&&i.status<400){var n=JSON.parse(i.responseText);e(null,[n,t])}else e(!0)},i.onerror=function(){e(!0)},i.send()}(t,(function(n,i){if(!n){var a=i[0],r=i[1];if(r.settings.title||(r.settings.title=o.response.title(a)),!r.settings.thumbnail){var l=o.response.thumbnail(a);r.settings.thumbnail=l,t.settings.onThumbnailLoad.call(e,l)}c(r,!0)}}))}function u(){var t=this,i=window.innerHeight,o=n.length,a=function(e,n){e.settings.initialized=!0,e.el.classList.add("lazyframe--loaded"),o--,l(e),e.settings.initinview&&e.el.click(),e.settings.onLoad.call(t,e)};n.filter((function(t){return t.settings.y<i})).forEach(a);var r,u,c,s,d=(r=function(){m=f<window.pageYOffset,f=window.pageYOffset,m&&n.filter((function(t){return t.settings.y<i+f&&!1===t.settings.initialized})).forEach(a),0===o&&window.removeEventListener("scroll",d,!1)},u=e.debounce,function(){var t=this,e=arguments,n=function(){s=null,c||r.apply(t,e)},i=c&&!s;clearTimeout(s),s=setTimeout(n,u),i&&r.apply(t,e)}),f=0,m=!1;window.addEventListener("scroll",d,!1)}function c(t,i){if(t.iframe=function(t){var e=document.createDocumentFragment(),n=document.createElement("iframe");t.vendor&&(t.src=o.src[t.vendor](t));n.setAttribute("id","lazyframe-".concat(t.id)),n.setAttribute("src",t.src),n.setAttribute("frameborder",0),n.setAttribute("allowfullscreen",""),t.autoplay&&(n.allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture");return e.appendChild(n),e}(t.settings),t.settings.thumbnail&&i&&(t.el.style.backgroundImage="url(".concat(t.settings.thumbnail,")")),t.settings.title&&0===t.el.children.length){var a=document.createDocumentFragment(),r=document.createElement("span");r.className="lazyframe__title",r.innerHTML=t.settings.title,a.appendChild(r),t.el.appendChild(a)}e.lazyload||(t.el.classList.add("lazyframe--loaded"),t.settings.onLoad.call(this,t),n.push(t)),t.settings.initialized||n.push(t)}return function(n){if(e=t({},i,arguments.length<=1?void 0:arguments[1]),"string"==typeof n)for(var o=document.querySelectorAll(n),r=0;r<o.length;r++)a(o[r]);else if(void 0===n.length)a(n);else for(var l=0;l<n.length;l++)a(n[l]);e.lazyload&&u()}}()}));\n//# sourceMappingURL=lazyframe.min.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUyNC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd3BtdWRldi12aWRlb3MvLi9ub2RlX21vZHVsZXMvbGF6eWZyYW1lL2Rpc3QvbGF6eWZyYW1lLm1pbi5qcz9iZGRhIl0sInNvdXJjZXNDb250ZW50IjpbIiFmdW5jdGlvbih0LGUpe1wib2JqZWN0XCI9PXR5cGVvZiBleHBvcnRzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlP21vZHVsZS5leHBvcnRzPWUoKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKGUpOih0PVwidW5kZWZpbmVkXCIhPXR5cGVvZiBnbG9iYWxUaGlzP2dsb2JhbFRoaXM6dHx8c2VsZikubGF6eWZyYW1lPWUoKX0odGhpcywoZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiB0KCl7cmV0dXJuKHQ9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTE7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl7dmFyIG49YXJndW1lbnRzW2VdO2Zvcih2YXIgaSBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLGkpJiYodFtpXT1uW2ldKX1yZXR1cm4gdH0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gZnVuY3Rpb24oKXt2YXIgZSxuPVtdLGk9e3ZlbmRvcjp2b2lkIDAsaWQ6dm9pZCAwLHNyYzp2b2lkIDAsdGh1bWJuYWlsOnZvaWQgMCx0aXRsZTp2b2lkIDAsaW5pdGlhbGl6ZWQ6ITEseTp2b2lkIDAsZGVib3VuY2U6MjUwLGxhenlsb2FkOiEwLGF1dG9wbGF5OiEwLGluaXRpbnZpZXc6ITEsb25Mb2FkOmZ1bmN0aW9uKHQpe30sb25BcHBlbmQ6ZnVuY3Rpb24odCl7fSxvblRodW1ibmFpbExvYWQ6ZnVuY3Rpb24odCl7fX0sbz17cmVnZXg6e3lvdXR1YmVfbm9jb29raWU6Lyg/OnlvdXR1YmUtbm9jb29raWVcXC5jb21cXC9cXFMqKD86KD86XFwvZSg/Om1iZWQpKT9cXC98d2F0Y2hcXD8oPzpcXFMqPyY/dlxcPSkpKShbYS16QS1aMC05Xy1dezYsMTF9KS8seW91dHViZTovKD86eW91dHViZVxcLmNvbVxcL1xcUyooPzooPzpcXC9lKD86bWJlZCkpP1xcL3x3YXRjaFxcPyg/OlxcUyo/Jj92XFw9KSl8eW91dHVcXC5iZVxcLykoW2EtekEtWjAtOV8tXXs2LDExfSkvLHZpbWVvOi92aW1lb1xcLmNvbVxcLyg/OnZpZGVvXFwvKT8oWzAtOV0qKSg/OlxcP3wpL30sY29uZGl0aW9uOnt5b3V0dWJlOmZ1bmN0aW9uKHQpe3JldHVybiEoIXR8fDExIT10WzFdLmxlbmd0aCkmJnRbMV19LHlvdXR1YmVfbm9jb29raWU6ZnVuY3Rpb24odCl7cmV0dXJuISghdHx8MTEhPXRbMV0ubGVuZ3RoKSYmdFsxXX0sdmltZW86ZnVuY3Rpb24odCl7cmV0dXJuISEodCYmOT09PXRbMV0ubGVuZ3RofHw4PT09dFsxXS5sZW5ndGgpJiZ0WzFdfX0sc3JjOnt5b3V0dWJlOmZ1bmN0aW9uKHQpe3JldHVyblwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvXCIuY29uY2F0KHQuaWQsXCIvP2F1dG9wbGF5PVwiKS5jb25jYXQodC5hdXRvcGxheT9cIjFcIjpcIjBcIixcIiZcIikuY29uY2F0KHQucXVlcnkpfSx5b3V0dWJlX25vY29va2llOmZ1bmN0aW9uKHQpe3JldHVyblwiaHR0cHM6Ly93d3cueW91dHViZS1ub2Nvb2tpZS5jb20vZW1iZWQvXCIuY29uY2F0KHQuaWQsXCIvP2F1dG9wbGF5PVwiKS5jb25jYXQodC5hdXRvcGxheT9cIjFcIjpcIjBcIixcIiZcIikuY29uY2F0KHQucXVlcnkpfSx2aW1lbzpmdW5jdGlvbih0KXtyZXR1cm5cImh0dHBzOi8vcGxheWVyLnZpbWVvLmNvbS92aWRlby9cIi5jb25jYXQodC5pZCxcIi8/YXV0b3BsYXk9XCIpLmNvbmNhdCh0LmF1dG9wbGF5P1wiMVwiOlwiMFwiLFwiJlwiKS5jb25jYXQodC5xdWVyeSl9fSxlbmRwb2ludDpmdW5jdGlvbih0KXtyZXR1cm5cImh0dHBzOi8vbm9lbWJlZC5jb20vZW1iZWQ/dXJsPVwiLmNvbmNhdCh0LnNyYyl9LHJlc3BvbnNlOnt0aXRsZTpmdW5jdGlvbih0KXtyZXR1cm4gdC50aXRsZX0sdGh1bWJuYWlsOmZ1bmN0aW9uKHQpe3JldHVybiB0LnRodW1ibmFpbF91cmx9fX07ZnVuY3Rpb24gYSh0KXt2YXIgbj10aGlzO2lmKHQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCE9ITEmJiF0LmNsYXNzTGlzdC5jb250YWlucyhcImxhenlmcmFtZS0tbG9hZGVkXCIpKXt2YXIgaT17ZWw6dCxzZXR0aW5nczpyKHQpfTtpLmVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLChmdW5jdGlvbigpe2kuZWwuYXBwZW5kQ2hpbGQoaS5pZnJhbWUpO3ZhciBlPXQucXVlcnlTZWxlY3RvckFsbChcImlmcmFtZVwiKTtpLnNldHRpbmdzLm9uQXBwZW5kLmNhbGwobixlWzBdKX0pKSxlLmxhenlsb2FkP2MoaSk6bChpLGkuc2V0dGluZ3MudGh1bWJuYWlsKX19ZnVuY3Rpb24gcihuKXt2YXIgaSxhLHI9QXJyYXkucHJvdG90eXBlLnNsaWNlLmFwcGx5KG4uYXR0cmlidXRlcykuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm5cIlwiIT09dC52YWx1ZX0pKS5yZWR1Y2UoKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRbMD09PWUubmFtZS5pbmRleE9mKFwiZGF0YS1cIik/ZS5uYW1lLnNwbGl0KFwiZGF0YS1cIilbMV06ZS5uYW1lXT1lLnZhbHVlLHR9KSx7fSksbD10KHt9LGUscix7eTpuLm9mZnNldFRvcCxvcmlnaW5hbFNyYzpyLnNyYyxxdWVyeTooaT1yLnNyYyxhPWkuc3BsaXQoXCI/XCIpLGFbMV0/YVsxXTpudWxsKX0pO2lmKGwudmVuZG9yKXt2YXIgdT1sLnNyYy5tYXRjaChvLnJlZ2V4W2wudmVuZG9yXSk7bC5pZD1vLmNvbmRpdGlvbltsLnZlbmRvcl0odSl9cmV0dXJuIGx9ZnVuY3Rpb24gbCh0KXt2YXIgZT10aGlzOyFmdW5jdGlvbih0KXtyZXR1cm4hKCF0LnZlbmRvcnx8dC50aXRsZSYmdC50aHVtYm5haWwpfSh0LnNldHRpbmdzKT9jKHQsITApOmZ1bmN0aW9uKHQsZSl7dmFyIG49by5lbmRwb2ludCh0LnNldHRpbmdzKSxpPW5ldyBYTUxIdHRwUmVxdWVzdDtpLm9wZW4oXCJHRVRcIixuLCEwKSxpLm9ubG9hZD1mdW5jdGlvbigpe2lmKGkuc3RhdHVzPj0yMDAmJmkuc3RhdHVzPDQwMCl7dmFyIG49SlNPTi5wYXJzZShpLnJlc3BvbnNlVGV4dCk7ZShudWxsLFtuLHRdKX1lbHNlIGUoITApfSxpLm9uZXJyb3I9ZnVuY3Rpb24oKXtlKCEwKX0saS5zZW5kKCl9KHQsKGZ1bmN0aW9uKG4saSl7aWYoIW4pe3ZhciBhPWlbMF0scj1pWzFdO2lmKHIuc2V0dGluZ3MudGl0bGV8fChyLnNldHRpbmdzLnRpdGxlPW8ucmVzcG9uc2UudGl0bGUoYSkpLCFyLnNldHRpbmdzLnRodW1ibmFpbCl7dmFyIGw9by5yZXNwb25zZS50aHVtYm5haWwoYSk7ci5zZXR0aW5ncy50aHVtYm5haWw9bCx0LnNldHRpbmdzLm9uVGh1bWJuYWlsTG9hZC5jYWxsKGUsbCl9YyhyLCEwKX19KSl9ZnVuY3Rpb24gdSgpe3ZhciB0PXRoaXMsaT13aW5kb3cuaW5uZXJIZWlnaHQsbz1uLmxlbmd0aCxhPWZ1bmN0aW9uKGUsbil7ZS5zZXR0aW5ncy5pbml0aWFsaXplZD0hMCxlLmVsLmNsYXNzTGlzdC5hZGQoXCJsYXp5ZnJhbWUtLWxvYWRlZFwiKSxvLS0sbChlKSxlLnNldHRpbmdzLmluaXRpbnZpZXcmJmUuZWwuY2xpY2soKSxlLnNldHRpbmdzLm9uTG9hZC5jYWxsKHQsZSl9O24uZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gdC5zZXR0aW5ncy55PGl9KSkuZm9yRWFjaChhKTt2YXIgcix1LGMscyxkPShyPWZ1bmN0aW9uKCl7bT1mPHdpbmRvdy5wYWdlWU9mZnNldCxmPXdpbmRvdy5wYWdlWU9mZnNldCxtJiZuLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIHQuc2V0dGluZ3MueTxpK2YmJiExPT09dC5zZXR0aW5ncy5pbml0aWFsaXplZH0pKS5mb3JFYWNoKGEpLDA9PT1vJiZ3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLGQsITEpfSx1PWUuZGVib3VuY2UsZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9YXJndW1lbnRzLG49ZnVuY3Rpb24oKXtzPW51bGwsY3x8ci5hcHBseSh0LGUpfSxpPWMmJiFzO2NsZWFyVGltZW91dChzKSxzPXNldFRpbWVvdXQobix1KSxpJiZyLmFwcGx5KHQsZSl9KSxmPTAsbT0hMTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLGQsITEpfWZ1bmN0aW9uIGModCxpKXtpZih0LmlmcmFtZT1mdW5jdGlvbih0KXt2YXIgZT1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksbj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaWZyYW1lXCIpO3QudmVuZG9yJiYodC5zcmM9by5zcmNbdC52ZW5kb3JdKHQpKTtuLnNldEF0dHJpYnV0ZShcImlkXCIsXCJsYXp5ZnJhbWUtXCIuY29uY2F0KHQuaWQpKSxuLnNldEF0dHJpYnV0ZShcInNyY1wiLHQuc3JjKSxuLnNldEF0dHJpYnV0ZShcImZyYW1lYm9yZGVyXCIsMCksbi5zZXRBdHRyaWJ1dGUoXCJhbGxvd2Z1bGxzY3JlZW5cIixcIlwiKSx0LmF1dG9wbGF5JiYobi5hbGxvdz1cImFjY2VsZXJvbWV0ZXI7IGF1dG9wbGF5OyBlbmNyeXB0ZWQtbWVkaWE7IGd5cm9zY29wZTsgcGljdHVyZS1pbi1waWN0dXJlXCIpO3JldHVybiBlLmFwcGVuZENoaWxkKG4pLGV9KHQuc2V0dGluZ3MpLHQuc2V0dGluZ3MudGh1bWJuYWlsJiZpJiYodC5lbC5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2U9XCJ1cmwoXCIuY29uY2F0KHQuc2V0dGluZ3MudGh1bWJuYWlsLFwiKVwiKSksdC5zZXR0aW5ncy50aXRsZSYmMD09PXQuZWwuY2hpbGRyZW4ubGVuZ3RoKXt2YXIgYT1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCkscj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtyLmNsYXNzTmFtZT1cImxhenlmcmFtZV9fdGl0bGVcIixyLmlubmVySFRNTD10LnNldHRpbmdzLnRpdGxlLGEuYXBwZW5kQ2hpbGQociksdC5lbC5hcHBlbmRDaGlsZChhKX1lLmxhenlsb2FkfHwodC5lbC5jbGFzc0xpc3QuYWRkKFwibGF6eWZyYW1lLS1sb2FkZWRcIiksdC5zZXR0aW5ncy5vbkxvYWQuY2FsbCh0aGlzLHQpLG4ucHVzaCh0KSksdC5zZXR0aW5ncy5pbml0aWFsaXplZHx8bi5wdXNoKHQpfXJldHVybiBmdW5jdGlvbihuKXtpZihlPXQoe30saSxhcmd1bWVudHMubGVuZ3RoPD0xP3ZvaWQgMDphcmd1bWVudHNbMV0pLFwic3RyaW5nXCI9PXR5cGVvZiBuKWZvcih2YXIgbz1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKG4pLHI9MDtyPG8ubGVuZ3RoO3IrKylhKG9bcl0pO2Vsc2UgaWYodm9pZCAwPT09bi5sZW5ndGgpYShuKTtlbHNlIGZvcih2YXIgbD0wO2w8bi5sZW5ndGg7bCsrKWEobltsXSk7ZS5sYXp5bG9hZCYmdSgpfX0oKX0pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxhenlmcmFtZS5taW4uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///5524\n')},5358:function(e,t,l){var n={"./af":5177,"./af.js":5177,"./ar":1509,"./ar-dz":1488,"./ar-dz.js":1488,"./ar-kw":8676,"./ar-kw.js":8676,"./ar-ly":2353,"./ar-ly.js":2353,"./ar-ma":4496,"./ar-ma.js":4496,"./ar-ps":6947,"./ar-ps.js":6947,"./ar-sa":2682,"./ar-sa.js":2682,"./ar-tn":9756,"./ar-tn.js":9756,"./ar.js":1509,"./az":5533,"./az.js":5533,"./be":8959,"./be.js":8959,"./bg":7777,"./bg.js":7777,"./bm":4903,"./bm.js":4903,"./bn":1290,"./bn-bd":7357,"./bn-bd.js":7357,"./bn.js":1290,"./bo":1545,"./bo.js":1545,"./br":1470,"./br.js":1470,"./bs":4429,"./bs.js":4429,"./ca":7306,"./ca.js":7306,"./cs":6464,"./cs.js":6464,"./cv":3635,"./cv.js":3635,"./cy":4226,"./cy.js":4226,"./da":3601,"./da.js":3601,"./de":7853,"./de-at":6111,"./de-at.js":6111,"./de-ch":4697,"./de-ch.js":4697,"./de.js":7853,"./dv":708,"./dv.js":708,"./el":4691,"./el.js":4691,"./en-au":3872,"./en-au.js":3872,"./en-ca":5917,"./en-ca.js":5917,"./en-gb":6195,"./en-gb.js":6195,"./en-ie":6584,"./en-ie.js":6584,"./en-il":5543,"./en-il.js":5543,"./en-in":9033,"./en-in.js":9033,"./en-nz":9402,"./en-nz.js":9402,"./en-sg":3004,"./en-sg.js":3004,"./eo":2934,"./eo.js":2934,"./es":7650,"./es-do":838,"./es-do.js":838,"./es-mx":7730,"./es-mx.js":7730,"./es-us":6575,"./es-us.js":6575,"./es.js":7650,"./et":3035,"./et.js":3035,"./eu":3508,"./eu.js":3508,"./fa":119,"./fa.js":119,"./fi":527,"./fi.js":527,"./fil":5995,"./fil.js":5995,"./fo":2477,"./fo.js":2477,"./fr":3117,"./fr-ca":6435,"./fr-ca.js":6435,"./fr-ch":7892,"./fr-ch.js":7892,"./fr.js":3117,"./fy":7071,"./fy.js":7071,"./ga":1734,"./ga.js":1734,"./gd":217,"./gd.js":217,"./gl":7329,"./gl.js":7329,"./gom-deva":2124,"./gom-deva.js":2124,"./gom-latn":3383,"./gom-latn.js":3383,"./gu":5050,"./gu.js":5050,"./he":1713,"./he.js":1713,"./hi":3861,"./hi.js":3861,"./hr":6308,"./hr.js":6308,"./hu":609,"./hu.js":609,"./hy-am":7160,"./hy-am.js":7160,"./id":4063,"./id.js":4063,"./is":9374,"./is.js":9374,"./it":8383,"./it-ch":1827,"./it-ch.js":1827,"./it.js":8383,"./ja":3827,"./ja.js":3827,"./jv":9722,"./jv.js":9722,"./ka":1794,"./ka.js":1794,"./kk":7088,"./kk.js":7088,"./km":6870,"./km.js":6870,"./kn":4451,"./kn.js":4451,"./ko":3164,"./ko.js":3164,"./ku":8174,"./ku-kmr":6181,"./ku-kmr.js":6181,"./ku.js":8174,"./ky":8474,"./ky.js":8474,"./lb":9680,"./lb.js":9680,"./lo":5867,"./lo.js":5867,"./lt":5766,"./lt.js":5766,"./lv":9532,"./lv.js":9532,"./me":8076,"./me.js":8076,"./mi":1848,"./mi.js":1848,"./mk":306,"./mk.js":306,"./ml":3739,"./ml.js":3739,"./mn":9053,"./mn.js":9053,"./mr":6169,"./mr.js":6169,"./ms":3386,"./ms-my":2297,"./ms-my.js":2297,"./ms.js":3386,"./mt":7075,"./mt.js":7075,"./my":2264,"./my.js":2264,"./nb":2274,"./nb.js":2274,"./ne":8235,"./ne.js":8235,"./nl":2572,"./nl-be":3784,"./nl-be.js":3784,"./nl.js":2572,"./nn":4566,"./nn.js":4566,"./oc-lnc":9330,"./oc-lnc.js":9330,"./pa-in":9849,"./pa-in.js":9849,"./pl":4418,"./pl.js":4418,"./pt":9834,"./pt-br":8303,"./pt-br.js":8303,"./pt.js":9834,"./ro":4457,"./ro.js":4457,"./ru":2271,"./ru.js":2271,"./sd":1221,"./sd.js":1221,"./se":3478,"./se.js":3478,"./si":7538,"./si.js":7538,"./sk":5784,"./sk.js":5784,"./sl":6637,"./sl.js":6637,"./sq":6794,"./sq.js":6794,"./sr":5719,"./sr-cyrl":3322,"./sr-cyrl.js":3322,"./sr.js":5719,"./ss":6e3,"./ss.js":6e3,"./sv":1011,"./sv.js":1011,"./sw":8367,"./sw.js":8367,"./ta":1025,"./ta.js":1025,"./te":1885,"./te.js":1885,"./tet":8861,"./tet.js":8861,"./tg":6571,"./tg.js":6571,"./th":5802,"./th.js":5802,"./tk":9527,"./tk.js":9527,"./tl-ph":9231,"./tl-ph.js":9231,"./tlh":1052,"./tlh.js":1052,"./tr":5096,"./tr.js":5096,"./tzl":9846,"./tzl.js":9846,"./tzm":1765,"./tzm-latn":7711,"./tzm-latn.js":7711,"./tzm.js":1765,"./ug-cn":8414,"./ug-cn.js":8414,"./uk":6618,"./uk.js":6618,"./ur":158,"./ur.js":158,"./uz":7609,"./uz-latn":2475,"./uz-latn.js":2475,"./uz.js":7609,"./vi":1135,"./vi.js":1135,"./x-pseudo":4051,"./x-pseudo.js":4051,"./yo":2218,"./yo.js":2218,"./zh-cn":2648,"./zh-cn.js":2648,"./zh-hk":1632,"./zh-hk.js":1632,"./zh-mo":1541,"./zh-mo.js":1541,"./zh-tw":304,"./zh-tw.js":304};function i(e){var t=I(e);return l(t)}function I(e){if(!l.o(n,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}i.keys=function(){return Object.keys(n)},i.resolve=I,e.exports=i,i.id=5358}},__webpack_module_cache__={},deferred,leafPrototypes,getProto;function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var l=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e].call(l.exports,l,l.exports,__webpack_require__),l.loaded=!0,l.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=function(e,t,l,n){if(!t){var i=1/0;for(d=0;d<deferred.length;d++){t=deferred[d][0],l=deferred[d][1],n=deferred[d][2];for(var I=!0,c=0;c<t.length;c++)(!1&n||i>=n)&&Object.keys(__webpack_require__.O).every((function(e){return __webpack_require__.O[e](t[c])}))?t.splice(c--,1):(I=!1,n<i&&(i=n));if(I){deferred.splice(d--,1);var g=l();void 0!==g&&(e=g)}}return e}n=n||0;for(var d=deferred.length;d>0&&deferred[d-1][2]>n;d--)deferred[d]=deferred[d-1];deferred[d]=[t,l,n]},__webpack_require__.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return __webpack_require__.d(t,{a:t}),t},getProto=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__},__webpack_require__.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var l=Object.create(null);__webpack_require__.r(l);var n={};leafPrototypes=leafPrototypes||[null,getProto({}),getProto([]),getProto(getProto)];for(var i=2&t&&e;"object"==typeof i&&!~leafPrototypes.indexOf(i);i=getProto(i))Object.getOwnPropertyNames(i).forEach((function(t){n[t]=function(){return e[t]}}));return n.default=function(){return e},__webpack_require__.d(l,n),l},__webpack_require__.d=function(e,t){for(var l in t)__webpack_require__.o(t,l)&&!__webpack_require__.o(e,l)&&Object.defineProperty(e,l,{enumerable:!0,get:t[l]})},__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),__webpack_require__.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e},__webpack_require__.j=488,function(){var e={488:0};__webpack_require__.O.j=function(t){return 0===e[t]};var t=function(t,l){var n,i,I=l[0],c=l[1],g=l[2],d=0;if(I.some((function(t){return 0!==e[t]}))){for(n in c)__webpack_require__.o(c,n)&&(__webpack_require__.m[n]=c[n]);if(g)var s=g(__webpack_require__)}for(t&&t(l);d<I.length;d++)i=I[d],__webpack_require__.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return __webpack_require__.O(s)},l=self.webpackChunkwpmudev_videos=self.webpackChunkwpmudev_videos||[];l.forEach(t.bind(null,0)),l.push=t.bind(null,l.push.bind(l))}();var __webpack_exports__=__webpack_require__.O(void 0,[504,996],(function(){return __webpack_require__(3754)}));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();