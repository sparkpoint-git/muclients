<?php
/*
 * Plugin Name: Ignyte Chatbot
 * Description: A customizable chatbot powered by Ignyte AI.
 * Version: 2.0.0
 * Author: Ignyte
 * Author URI: https://sparkpoint.online
 * License: GPL-2.0+
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

/**
 * Enqueues scripts and styles for the chatbot and localizes data.
 */
function ignyte_chatbot_enqueue_assets() {
    // It's good practice to define the asset path and URL
    $plugin_dir_path = plugin_dir_path(__FILE__);
    $plugin_dir_url = plugin_dir_url(__FILE__);

    // Use filemtime for cache-busting
    $js_version = filemtime($plugin_dir_path . 'assets/ignyte.js');
    $css_version = filemtime($plugin_dir_path . 'assets/ignyte.css');

    wp_enqueue_script('ignyte-chatbot-js', $plugin_dir_url . 'assets/ignyte.js', array(), $js_version, true);
    wp_enqueue_style('ignyte-chatbot-css', $plugin_dir_url . 'assets/ignyte.css', array(), $css_version);

    // Pass data to our script
    wp_localize_script('ignyte-chatbot-js', 'ignyteChatbot', array(
        'ajaxUrl' => admin_url('admin-ajax.php'),
        'botName' => get_option('ignyte_chatbot_bot_name', 'Ignyte Bot'), // Pass the bot name
        'nonce'   => wp_create_nonce('ignyte_chatbot_nonce') // Security nonce
    ));
}
add_action('wp_enqueue_scripts', 'ignyte_chatbot_enqueue_assets');

/**
 * Adds the chatbot HTML container to the page footer.
 */
function ignyte_chatbot_add_html() {
    ob_start();
    ?>
    <div id="chat-container">
        <!-- The chat header and content are now fully generated by ignyte.js -->
        <div id="chat-output"></div>
        <div class="input-row">
            <input type="text" id="chat-input" placeholder="Type your message..." autocomplete="off">
            <button id="send-button" aria-label="Send Message">Send</button>
        </div>
    </div>
    <?php
    echo ob_get_clean();
}
add_action('wp_footer', 'ignyte_chatbot_add_html');

/**
 * Handles the AJAX request to the Bionic GPT API.
 */
function ignyte_chatbot_proxy() {
    // Verify the nonce for security
    check_ajax_referer('ignyte_chatbot_nonce', 'nonce');

    $raw_post_data = file_get_contents('php://input');
    $post_data = json_decode($raw_post_data, true);
    $message = isset($post_data['message']) ? sanitize_text_field($post_data['message']) : '';

    if (empty($message)) {
        wp_send_json_error(['message' => get_option('ignyte_chatbot_error_message', 'No message provided.')]);
        return;
    }

    $api_key = get_option('ignyte_chatbot_api_key', '');
    if (empty($api_key)) {
        wp_send_json_error(['message' => get_option('ignyte_chatbot_error_message', 'API key not configured.')]);
        return;
    }

    $body = json_encode([
        'model'       => get_option('ignyte_chatbot_model', 'llama-3.3-70b-versatile'),
        'messages'    => [['role' => 'user', 'content' => $message]],
        'temperature' => floatval(get_option('ignyte_chatbot_temperature', '0.6')),
        'stream'      => true
    ]);

    $response = wp_remote_post(get_option('ignyte_chatbot_api_url', 'https://sparkpoint-ai.app/v1/chat/completions'), [
        'headers'  => [
            'Content-Type'  => 'application/json',
            'Authorization' => 'Bearer ' . $api_key
        ],
        'body'     => $body,
        'timeout'  => 45,
        'stream'   => true,
        'filename' => tempnam(sys_get_temp_dir(), 'ignyte_stream')
    ]);

    if (is_wp_error($response) || wp_remote_retrieve_response_code($response) !== 200) {
        $error_message = is_wp_error($response) ? $response->get_error_message() : 'API returned an error.';
        wp_send_json_error(['message' => get_option('ignyte_chatbot_error_message', 'I did not quite understand, can you explain?')]);
        if (isset($response['filename']) && file_exists($response['filename'])) {
            unlink($response['filename']);
        }
        return;
    }

    // Process the streamed response
    $full_content = '';
    $stream_file_handle = fopen($response['filename'], 'r');
    if ($stream_file_handle) {
        while (($line = fgets($stream_file_handle)) !== false) {
            if (strpos(trim($line), 'data: ') === 0) {
                $json_str = substr(trim($line), 6);
                if ($json_str === '[DONE]') continue;
                $json = json_decode($json_str, true);
                if (isset($json['choices'][0]['delta']['content'])) {
                    $full_content .= $json['choices'][0]['delta']['content'];
                }
            }
        }
        fclose($stream_file_handle);
    }
    unlink($response['filename']);

    if (empty($full_content)) {
        wp_send_json_error(['message' => get_option('ignyte_chatbot_error_message', 'I received an empty response.')]);
        return;
    }

    // Build the final response object
    $response_json = [
        'choices' => [
            [ 'message' => [ 'content' => $full_content ] ]
        ]
    ];

    wp_send_json_success($response_json);
}
add_action('wp_ajax_ignyte_chatbot_proxy', 'ignyte_chatbot_proxy');
add_action('wp_ajax_nopriv_ignyte_chatbot_proxy', 'ignyte_chatbot_proxy');


/* --- ADMIN SETTINGS --- */

/**
 * Adds the admin menu item for the settings page.
 */
function ignyte_chatbot_admin_menu() {
    add_options_page('Ignyte Chatbot Settings', 'Ignyte Chatbot', 'manage_options', 'ignyte-chatbot-settings', 'ignyte_chatbot_settings_page');
}
add_action('admin_menu', 'ignyte_chatbot_admin_menu');

/**
 * Initializes the settings, sections, and fields.
 */
function ignyte_chatbot_settings_init() {
    register_setting('ignyte_chatbot_settings', 'ignyte_chatbot_bot_name');
    register_setting('ignyte_chatbot_settings', 'ignyte_chatbot_api_key');
    register_setting('ignyte_chatbot_settings', 'ignyte_chatbot_api_url');
    register_setting('ignyte_chatbot_settings', 'ignyte_chatbot_model');
    register_setting('ignyte_chatbot_settings', 'ignyte_chatbot_temperature');
    register_setting('ignyte_chatbot_settings', 'ignyte_chatbot_error_message');

    add_settings_section('ignyte_chatbot_section', 'Ignyte Chatbot Configuration', null, 'ignyte_chatbot_settings');

    add_settings_field('ignyte_chatbot_bot_name', 'Bot Name', 'ignyte_chatbot_bot_name_callback', 'ignyte_chatbot_settings', 'ignyte_chatbot_section');
    add_settings_field('ignyte_chatbot_api_key', 'API Key', 'ignyte_chatbot_api_key_callback', 'ignyte_chatbot_settings', 'ignyte_chatbot_section');
    add_settings_field('ignyte_chatbot_api_url', 'API URL', 'ignyte_chatbot_api_url_callback', 'ignyte_chatbot_settings', 'ignyte_chatbot_section');
    add_settings_field('ignyte_chatbot_model', 'Model Name', 'ignyte_chatbot_model_callback', 'ignyte_chatbot_settings', 'ignyte_chatbot_section');
    add_settings_field('ignyte_chatbot_temperature', 'Temperature', 'ignyte_chatbot_temperature_callback', 'ignyte_chatbot_settings', 'ignyte_chatbot_section');
    add_settings_field('ignyte_chatbot_error_message', 'Default Error Message', 'ignyte_chatbot_error_message_callback', 'ignyte_chatbot_settings', 'ignyte_chatbot_section');
}
add_action('admin_init', 'ignyte_chatbot_settings_init');

/**
 * Renders the settings page container.
 */
function ignyte_chatbot_settings_page() {
    ?>
    <div class="wrap">
        <h1>Ignyte Chatbot Settings</h1>
        <form method="post" action="options.php">
            <?php
            settings_fields('ignyte_chatbot_settings');
            do_settings_sections('ignyte_chatbot_settings');
            submit_button();
            ?>
        </form>
    </div>
    <?php
}

/* --- Field Callback Functions --- */

function ignyte_chatbot_bot_name_callback() {
    $value = get_option('ignyte_chatbot_bot_name', 'Ignyte Bot');
    echo '<input type="text" name="ignyte_chatbot_bot_name" value="' . esc_attr($value) . '" size="50" placeholder="The name for your chatbot" />';
}

function ignyte_chatbot_api_key_callback() {
    $value = get_option('ignyte_chatbot_api_key', '');
    echo '<input type="password" name="ignyte_chatbot_api_key" value="' . esc_attr($value) . '" size="50" placeholder="Your Bionic GPT API Key" />';
}

function ignyte_chatbot_api_url_callback() {
    $value = get_option('ignyte_chatbot_api_url', 'https://sparkpoint-ai.app/v1/chat/completions');
    echo '<input type="url" name="ignyte_chatbot_api_url" value="' . esc_attr($value) . '" size="50" />';
}

function ignyte_chatbot_model_callback() {
    $value = get_option('ignyte_chatbot_model', 'llama-3.3-70b-versatile');
    echo '<input type="text" name="ignyte_chatbot_model" value="' . esc_attr($value) . '" size="50" />';
}

function ignyte_chatbot_temperature_callback() {
    $value = get_option('ignyte_chatbot_temperature', '0.6');
    echo '<input type="number" step="0.1" min="0" max="2" name="ignyte_chatbot_temperature" value="' . esc_attr($value) . '" />';
}

function ignyte_chatbot_error_message_callback() {
    $value = get_option('ignyte_chatbot_error_message', 'I did not quite understand, can you explain?');
    echo '<input type="text" name="ignyte_chatbot_error_message" value="' . esc_attr($value) . '" size="50" />';
}

