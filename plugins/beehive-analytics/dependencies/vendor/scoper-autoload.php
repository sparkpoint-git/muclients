<?php

// scoper-autoload.php @generated by PhpScoper

$loader = require_once __DIR__.'/autoload.php';

// Exposed classes. For more information see:
// https://github.com/humbug/php-scoper/blob/master/docs/configuration.md#exposing-classes
if (!class_exists('Google_Task_Composer', false) && !interface_exists('Google_Task_Composer', false) && !trait_exists('Google_Task_Composer', false)) {
    spl_autoload_call('Beehive\Google_Task_Composer');
}
if (!class_exists('Google_AccessToken_Revoke', false) && !interface_exists('Google_AccessToken_Revoke', false) && !trait_exists('Google_AccessToken_Revoke', false)) {
    spl_autoload_call('Beehive\Google_AccessToken_Revoke');
}
if (!class_exists('Google_AccessToken_Verify', false) && !interface_exists('Google_AccessToken_Verify', false) && !trait_exists('Google_AccessToken_Verify', false)) {
    spl_autoload_call('Beehive\Google_AccessToken_Verify');
}
if (!class_exists('Google_AuthHandler_AuthHandlerFactory', false) && !interface_exists('Google_AuthHandler_AuthHandlerFactory', false) && !trait_exists('Google_AuthHandler_AuthHandlerFactory', false)) {
    spl_autoload_call('Beehive\Google_AuthHandler_AuthHandlerFactory');
}
if (!class_exists('Google_AuthHandler_Guzzle6AuthHandler', false) && !interface_exists('Google_AuthHandler_Guzzle6AuthHandler', false) && !trait_exists('Google_AuthHandler_Guzzle6AuthHandler', false)) {
    spl_autoload_call('Beehive\Google_AuthHandler_Guzzle6AuthHandler');
}
if (!class_exists('Google_AuthHandler_Guzzle7AuthHandler', false) && !interface_exists('Google_AuthHandler_Guzzle7AuthHandler', false) && !trait_exists('Google_AuthHandler_Guzzle7AuthHandler', false)) {
    spl_autoload_call('Beehive\Google_AuthHandler_Guzzle7AuthHandler');
}
if (!class_exists('Google_Client', false) && !interface_exists('Google_Client', false) && !trait_exists('Google_Client', false)) {
    spl_autoload_call('Beehive\Google_Client');
}
if (!class_exists('Google_Collection', false) && !interface_exists('Google_Collection', false) && !trait_exists('Google_Collection', false)) {
    spl_autoload_call('Beehive\Google_Collection');
}
if (!class_exists('Google_Exception', false) && !interface_exists('Google_Exception', false) && !trait_exists('Google_Exception', false)) {
    spl_autoload_call('Beehive\Google_Exception');
}
if (!class_exists('Google_Http_Batch', false) && !interface_exists('Google_Http_Batch', false) && !trait_exists('Google_Http_Batch', false)) {
    spl_autoload_call('Beehive\Google_Http_Batch');
}
if (!class_exists('Google_Http_MediaFileUpload', false) && !interface_exists('Google_Http_MediaFileUpload', false) && !trait_exists('Google_Http_MediaFileUpload', false)) {
    spl_autoload_call('Beehive\Google_Http_MediaFileUpload');
}
if (!class_exists('Google_Http_REST', false) && !interface_exists('Google_Http_REST', false) && !trait_exists('Google_Http_REST', false)) {
    spl_autoload_call('Beehive\Google_Http_REST');
}
if (!class_exists('Google_Model', false) && !interface_exists('Google_Model', false) && !trait_exists('Google_Model', false)) {
    spl_autoload_call('Beehive\Google_Model');
}
if (!class_exists('Google_Service', false) && !interface_exists('Google_Service', false) && !trait_exists('Google_Service', false)) {
    spl_autoload_call('Beehive\Google_Service');
}
if (!class_exists('Google_Service_Exception', false) && !interface_exists('Google_Service_Exception', false) && !trait_exists('Google_Service_Exception', false)) {
    spl_autoload_call('Beehive\Google_Service_Exception');
}
if (!class_exists('Google_Service_Resource', false) && !interface_exists('Google_Service_Resource', false) && !trait_exists('Google_Service_Resource', false)) {
    spl_autoload_call('Beehive\Google_Service_Resource');
}
if (!class_exists('Google_Task_Exception', false) && !interface_exists('Google_Task_Exception', false) && !trait_exists('Google_Task_Exception', false)) {
    spl_autoload_call('Beehive\Google_Task_Exception');
}
if (!class_exists('Google_Task_Retryable', false) && !interface_exists('Google_Task_Retryable', false) && !trait_exists('Google_Task_Retryable', false)) {
    spl_autoload_call('Beehive\Google_Task_Retryable');
}
if (!class_exists('Google_Task_Runner', false) && !interface_exists('Google_Task_Runner', false) && !trait_exists('Google_Task_Runner', false)) {
    spl_autoload_call('Beehive\Google_Task_Runner');
}
if (!class_exists('Google_Utils_UriTemplate', false) && !interface_exists('Google_Utils_UriTemplate', false) && !trait_exists('Google_Utils_UriTemplate', false)) {
    spl_autoload_call('Beehive\Google_Utils_UriTemplate');
}
if (!class_exists('ComposerAutoloaderInite4d65117da795904e46c677f78e6e62d', false) && !interface_exists('ComposerAutoloaderInite4d65117da795904e46c677f78e6e62d', false) && !trait_exists('ComposerAutoloaderInite4d65117da795904e46c677f78e6e62d', false)) {
    spl_autoload_call('Beehive\ComposerAutoloaderInite4d65117da795904e46c677f78e6e62d');
}

// Exposed functions. For more information see:
// https://github.com/humbug/php-scoper/blob/master/docs/configuration.md#exposing-functions
if (!function_exists('oauth2client_php_autoload')) {
    function oauth2client_php_autoload() {
        return \Beehive\oauth2client_php_autoload(...func_get_args());
    }
}
if (!function_exists('zend_monitor_custom_event')) {
    function zend_monitor_custom_event() {
        return \Beehive\zend_monitor_custom_event(...func_get_args());
    }
}
if (!function_exists('trigger_deprecation')) {
    function trigger_deprecation() {
        return \Beehive\trigger_deprecation(...func_get_args());
    }
}

return $loader;